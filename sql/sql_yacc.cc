/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0

/* Substitute the variable and function names.  */
#define yyparse MYSQLparse
#define yylex   MYSQLlex
#define yyerror MYSQLerror
#define yylval  MYSQLlval
#define yychar  MYSQLchar
#define yydebug MYSQLdebug
#define yynerrs MYSQLnerrs


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYZE_SYM = 269,
     AND_AND_SYM = 270,
     AND_SYM = 271,
     ANY_SYM = 272,
     AS = 273,
     ASC = 274,
     ASCII_SYM = 275,
     ASENSITIVE_SYM = 276,
     AT_SYM = 277,
     AUTHORS_SYM = 278,
     AUTOEXTEND_SIZE_SYM = 279,
     AUTO_INC = 280,
     AVG_ROW_LENGTH = 281,
     AVG_SYM = 282,
     BACKUP_SYM = 283,
     BEFORE_SYM = 284,
     BEGIN_SYM = 285,
     BETWEEN_SYM = 286,
     BIGINT = 287,
     BINARY = 288,
     BINLOG_SYM = 289,
     BIN_NUM = 290,
     BIT_AND = 291,
     BIT_OR = 292,
     BIT_SYM = 293,
     BIT_XOR = 294,
     BLOB_SYM = 295,
     BLOCK_SYM = 296,
     BOOLEAN_SYM = 297,
     BOOL_SYM = 298,
     BOTH = 299,
     BTREE_SYM = 300,
     BY = 301,
     BYTE_SYM = 302,
     CACHE_SYM = 303,
     CALL_SYM = 304,
     CASCADE = 305,
     CASCADED = 306,
     CASE_SYM = 307,
     CAST_SYM = 308,
     CATALOG_NAME_SYM = 309,
     CHAIN_SYM = 310,
     CHANGE = 311,
     CHANGED = 312,
     CHARSET = 313,
     CHAR_SYM = 314,
     CHECKSUM_SYM = 315,
     CHECK_SYM = 316,
     CIPHER_SYM = 317,
     CLASS_ORIGIN_SYM = 318,
     CLIENT_SYM = 319,
     CLOSE_SYM = 320,
     COALESCE = 321,
     CODE_SYM = 322,
     COLLATE_SYM = 323,
     COLLATION_SYM = 324,
     COLUMNS = 325,
     COLUMN_SYM = 326,
     COLUMN_NAME_SYM = 327,
     COMMENT_SYM = 328,
     COMMITTED_SYM = 329,
     COMMIT_SYM = 330,
     COMPACT_SYM = 331,
     COMPLETION_SYM = 332,
     COMPRESSED_SYM = 333,
     CONCURRENT = 334,
     CONDITION_SYM = 335,
     CONNECTION_SYM = 336,
     CONSISTENT_SYM = 337,
     CONSTRAINT = 338,
     CONSTRAINT_CATALOG_SYM = 339,
     CONSTRAINT_NAME_SYM = 340,
     CONSTRAINT_SCHEMA_SYM = 341,
     CONTAINS_SYM = 342,
     CONTEXT_SYM = 343,
     CONTINUE_SYM = 344,
     CONTRIBUTORS_SYM = 345,
     CONVERT_SYM = 346,
     COUNT_SYM = 347,
     CPU_SYM = 348,
     CREATE = 349,
     CROSS = 350,
     CUBE_SYM = 351,
     CURDATE = 352,
     CURRENT_SYM = 353,
     CURRENT_USER = 354,
     CURSOR_SYM = 355,
     CURSOR_NAME_SYM = 356,
     CURTIME = 357,
     DATABASE = 358,
     DATABASES = 359,
     DATAFILE_SYM = 360,
     DATA_SYM = 361,
     DATETIME = 362,
     DATE_ADD_INTERVAL = 363,
     DATE_SUB_INTERVAL = 364,
     DATE_SYM = 365,
     DAY_HOUR_SYM = 366,
     DAY_MICROSECOND_SYM = 367,
     DAY_MINUTE_SYM = 368,
     DAY_SECOND_SYM = 369,
     DAY_SYM = 370,
     DEALLOCATE_SYM = 371,
     DECIMAL_NUM = 372,
     DECIMAL_SYM = 373,
     DECLARE_SYM = 374,
     DEFAULT = 375,
     DEFAULT_AUTH_SYM = 376,
     DEFINER_SYM = 377,
     DELAYED_SYM = 378,
     DELAY_KEY_WRITE_SYM = 379,
     DELETE_SYM = 380,
     DESC = 381,
     DESCRIBE = 382,
     DES_KEY_FILE = 383,
     DETERMINISTIC_SYM = 384,
     DIAGNOSTICS_SYM = 385,
     DIRECTORY_SYM = 386,
     DISABLE_SYM = 387,
     DISCARD = 388,
     DISK_SYM = 389,
     DISTINCT = 390,
     DIV_SYM = 391,
     DOUBLE_SYM = 392,
     DO_SYM = 393,
     DROP = 394,
     DUAL_SYM = 395,
     DUMPFILE = 396,
     DUPLICATE_SYM = 397,
     DYNAMIC_SYM = 398,
     EACH_SYM = 399,
     ELSE = 400,
     ELSEIF_SYM = 401,
     ENABLE_SYM = 402,
     ENCLOSED = 403,
     END = 404,
     ENDS_SYM = 405,
     END_OF_INPUT = 406,
     ENGINES_SYM = 407,
     ENGINE_SYM = 408,
     ENUM = 409,
     EQ = 410,
     EQUAL_SYM = 411,
     ERROR_SYM = 412,
     ERRORS = 413,
     ESCAPED = 414,
     ESCAPE_SYM = 415,
     EVENTS_SYM = 416,
     EVENT_SYM = 417,
     EVERY_SYM = 418,
     EXCHANGE_SYM = 419,
     EXECUTE_SYM = 420,
     EXISTS = 421,
     EXIT_SYM = 422,
     EXPANSION_SYM = 423,
     EXTENDED_SYM = 424,
     EXTENT_SIZE_SYM = 425,
     EXTRACT_SYM = 426,
     FALSE_SYM = 427,
     FAST_SYM = 428,
     FAULTS_SYM = 429,
     FETCH_SYM = 430,
     FILE_SYM = 431,
     FIRST_SYM = 432,
     FIXED_SYM = 433,
     FLOAT_NUM = 434,
     FLOAT_SYM = 435,
     FLUSH_SYM = 436,
     FORCE_SYM = 437,
     FOREIGN = 438,
     FOR_SYM = 439,
     FORMAT_SYM = 440,
     FOUND_SYM = 441,
     FROM = 442,
     FULL = 443,
     FULLTEXT_SYM = 444,
     FUNCTION_SYM = 445,
     GE = 446,
     GENERAL = 447,
     GEOMETRYCOLLECTION = 448,
     GEOMETRY_SYM = 449,
     GET_FORMAT = 450,
     GET_SYM = 451,
     GLOBAL_SYM = 452,
     GRANT = 453,
     GRANTS = 454,
     GROUP_SYM = 455,
     GROUP_CONCAT_SYM = 456,
     GT_SYM = 457,
     HANDLER_SYM = 458,
     HASH_SYM = 459,
     HAVING = 460,
     HELP_SYM = 461,
     HEX_NUM = 462,
     HIGH_PRIORITY = 463,
     HOST_SYM = 464,
     HOSTS_SYM = 465,
     HOUR_MICROSECOND_SYM = 466,
     HOUR_MINUTE_SYM = 467,
     HOUR_SECOND_SYM = 468,
     HOUR_SYM = 469,
     IDENT = 470,
     IDENTIFIED_SYM = 471,
     IDENT_QUOTED = 472,
     IF = 473,
     IGNORE_SYM = 474,
     IGNORE_SERVER_IDS_SYM = 475,
     IMPORT = 476,
     INDEXES = 477,
     INDEX_SYM = 478,
     INFILE = 479,
     INITIAL_SIZE_SYM = 480,
     INNER_SYM = 481,
     INOUT_SYM = 482,
     INSENSITIVE_SYM = 483,
     INSERT = 484,
     INSERT_METHOD = 485,
     INSTALL_SYM = 486,
     INTERVAL_SYM = 487,
     INTO = 488,
     INT_SYM = 489,
     INVOKER_SYM = 490,
     IN_SYM = 491,
     IO_AFTER_GTIDS = 492,
     IO_BEFORE_GTIDS = 493,
     IO_SYM = 494,
     IPC_SYM = 495,
     IS = 496,
     ISOLATION = 497,
     ISSUER_SYM = 498,
     ITERATE_SYM = 499,
     JOIN_SYM = 500,
     KEYS = 501,
     KEY_BLOCK_SIZE = 502,
     KEY_SYM = 503,
     KILL_SYM = 504,
     LANGUAGE_SYM = 505,
     LAST_SYM = 506,
     LE = 507,
     LEADING = 508,
     LEAVES = 509,
     LEAVE_SYM = 510,
     LEFT = 511,
     LESS_SYM = 512,
     LEVEL_SYM = 513,
     LEX_HOSTNAME = 514,
     LIKE = 515,
     LIMIT = 516,
     LINEAR_SYM = 517,
     LINES = 518,
     LINESTRING = 519,
     LIST_SYM = 520,
     LOAD = 521,
     LOCAL_SYM = 522,
     LOCATOR_SYM = 523,
     LOCKS_SYM = 524,
     LOCK_SYM = 525,
     LOGFILE_SYM = 526,
     LOGS_SYM = 527,
     LONGBLOB = 528,
     LONGTEXT = 529,
     LONG_NUM = 530,
     LONG_SYM = 531,
     LOOP_SYM = 532,
     LOW_PRIORITY = 533,
     LT = 534,
     MASTER_AUTO_POSITION_SYM = 535,
     MASTER_BIND_SYM = 536,
     MASTER_CONNECT_RETRY_SYM = 537,
     MASTER_DELAY_SYM = 538,
     MASTER_HOST_SYM = 539,
     MASTER_LOG_FILE_SYM = 540,
     MASTER_LOG_POS_SYM = 541,
     MASTER_PASSWORD_SYM = 542,
     MASTER_PORT_SYM = 543,
     MASTER_RETRY_COUNT_SYM = 544,
     MASTER_SERVER_ID_SYM = 545,
     MASTER_SSL_CAPATH_SYM = 546,
     MASTER_SSL_CA_SYM = 547,
     MASTER_SSL_CERT_SYM = 548,
     MASTER_SSL_CIPHER_SYM = 549,
     MASTER_SSL_CRL_SYM = 550,
     MASTER_SSL_CRLPATH_SYM = 551,
     MASTER_SSL_KEY_SYM = 552,
     MASTER_SSL_SYM = 553,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 554,
     MASTER_SYM = 555,
     MASTER_USER_SYM = 556,
     MASTER_HEARTBEAT_PERIOD_SYM = 557,
     MATCH = 558,
     MAX_CONNECTIONS_PER_HOUR = 559,
     MAX_QUERIES_PER_HOUR = 560,
     MAX_ROWS = 561,
     MAX_SIZE_SYM = 562,
     MAX_SYM = 563,
     MAX_UPDATES_PER_HOUR = 564,
     MAX_USER_CONNECTIONS_SYM = 565,
     MAX_VALUE_SYM = 566,
     MEDIUMBLOB = 567,
     MEDIUMINT = 568,
     MEDIUMTEXT = 569,
     MEDIUM_SYM = 570,
     MEMORY_SYM = 571,
     MERGE_SYM = 572,
     MESSAGE_TEXT_SYM = 573,
     MICROSECOND_SYM = 574,
     MIGRATE_SYM = 575,
     MINUTE_MICROSECOND_SYM = 576,
     MINUTE_SECOND_SYM = 577,
     MINUTE_SYM = 578,
     MIN_ROWS = 579,
     MIN_SYM = 580,
     MODE_SYM = 581,
     MODIFIES_SYM = 582,
     MODIFY_SYM = 583,
     MOD_SYM = 584,
     MONTH_SYM = 585,
     MULTILINESTRING = 586,
     MULTIPOINT = 587,
     MULTIPOLYGON = 588,
     MUTEX_SYM = 589,
     MYSQL_ERRNO_SYM = 590,
     NAMES_SYM = 591,
     NAME_SYM = 592,
     NATIONAL_SYM = 593,
     NATURAL = 594,
     NCHAR_STRING = 595,
     NCHAR_SYM = 596,
     NDBCLUSTER_SYM = 597,
     NE = 598,
     NEG = 599,
     NEW_SYM = 600,
     NEXT_SYM = 601,
     NODEGROUP_SYM = 602,
     NONE_SYM = 603,
     NOT2_SYM = 604,
     NOT_SYM = 605,
     NOW_SYM = 606,
     NO_SYM = 607,
     NO_WAIT_SYM = 608,
     NO_WRITE_TO_BINLOG = 609,
     NULL_SYM = 610,
     NUM = 611,
     NUMBER_SYM = 612,
     NUMERIC_SYM = 613,
     NVARCHAR_SYM = 614,
     OFFSET_SYM = 615,
     OLD_PASSWORD = 616,
     ON = 617,
     ONE_SYM = 618,
     ONLY_SYM = 619,
     OPEN_SYM = 620,
     OPTIMIZE = 621,
     OPTIONS_SYM = 622,
     OPTION = 623,
     OPTIONALLY = 624,
     OR2_SYM = 625,
     ORDER_SYM = 626,
     OR_OR_SYM = 627,
     OR_SYM = 628,
     OUTER = 629,
     OUTFILE = 630,
     OUT_SYM = 631,
     OWNER_SYM = 632,
     PACK_KEYS_SYM = 633,
     PAGE_SYM = 634,
     PARAM_MARKER = 635,
     PARSER_SYM = 636,
     PARTIAL = 637,
     PARTITION_SYM = 638,
     PARTITIONS_SYM = 639,
     PARTITIONING_SYM = 640,
     PASSWORD = 641,
     PERSISTENT_STATS_SYM = 642,
     PHASE_SYM = 643,
     PLUGIN_DIR_SYM = 644,
     PLUGIN_SYM = 645,
     PLUGINS_SYM = 646,
     POINT_SYM = 647,
     POLYGON = 648,
     PORT_SYM = 649,
     POSITION_SYM = 650,
     PRECISION = 651,
     PREPARE_SYM = 652,
     PRESERVE_SYM = 653,
     PREV_SYM = 654,
     PRIMARY_SYM = 655,
     PRIVILEGES = 656,
     PROCEDURE_SYM = 657,
     PROCESS = 658,
     PROCESSLIST_SYM = 659,
     PROFILE_SYM = 660,
     PROFILES_SYM = 661,
     PROXY_SYM = 662,
     PURGE = 663,
     QUARTER_SYM = 664,
     QUERY_SYM = 665,
     QUICK = 666,
     RANGE_SYM = 667,
     READS_SYM = 668,
     READ_ONLY_SYM = 669,
     READ_SYM = 670,
     READ_WRITE_SYM = 671,
     REAL = 672,
     REBUILD_SYM = 673,
     RECOVER_SYM = 674,
     REDOFILE_SYM = 675,
     REDO_BUFFER_SIZE_SYM = 676,
     REDUNDANT_SYM = 677,
     REFERENCES = 678,
     REGEXP = 679,
     RELAY = 680,
     RELAYLOG_SYM = 681,
     RELAY_LOG_FILE_SYM = 682,
     RELAY_LOG_POS_SYM = 683,
     RELAY_THREAD = 684,
     RELEASE_SYM = 685,
     RELOAD = 686,
     REMOVE_SYM = 687,
     RENAME = 688,
     REORGANIZE_SYM = 689,
     REPAIR = 690,
     REPEATABLE_SYM = 691,
     REPEAT_SYM = 692,
     REPLACE = 693,
     REPLICATION = 694,
     REQUIRE_SYM = 695,
     RESET_SYM = 696,
     RESIGNAL_SYM = 697,
     RESOURCES = 698,
     RESTORE_SYM = 699,
     RESTRICT = 700,
     RESUME_SYM = 701,
     RETURNED_SQLSTATE_SYM = 702,
     RETURNS_SYM = 703,
     RETURN_SYM = 704,
     REVERSE_SYM = 705,
     REVOKE = 706,
     RIGHT = 707,
     ROLLBACK_SYM = 708,
     ROLLUP_SYM = 709,
     ROUTINE_SYM = 710,
     ROWS_SYM = 711,
     ROW_FORMAT_SYM = 712,
     ROW_SYM = 713,
     ROW_COUNT_SYM = 714,
     RTREE_SYM = 715,
     SAVEPOINT_SYM = 716,
     SCHEDULE_SYM = 717,
     SCHEMA_NAME_SYM = 718,
     SECOND_MICROSECOND_SYM = 719,
     SECOND_SYM = 720,
     SECURITY_SYM = 721,
     SELECT_SYM = 722,
     SENSITIVE_SYM = 723,
     SEPARATOR_SYM = 724,
     SERIALIZABLE_SYM = 725,
     SERIAL_SYM = 726,
     SESSION_SYM = 727,
     SERVER_SYM = 728,
     SERVER_OPTIONS = 729,
     SET = 730,
     SET_VAR = 731,
     SHARE_SYM = 732,
     SHIFT_LEFT = 733,
     SHIFT_RIGHT = 734,
     SHOW = 735,
     SHUTDOWN = 736,
     SIGNAL_SYM = 737,
     SIGNED_SYM = 738,
     SIMPLE_SYM = 739,
     SLAVE = 740,
     SLOW = 741,
     SMALLINT = 742,
     SNAPSHOT_SYM = 743,
     SOCKET_SYM = 744,
     SONAME_SYM = 745,
     SOUNDS_SYM = 746,
     SOURCE_SYM = 747,
     SPATIAL_SYM = 748,
     SPECIFIC_SYM = 749,
     SQLEXCEPTION_SYM = 750,
     SQLSTATE_SYM = 751,
     SQLWARNING_SYM = 752,
     SQL_AFTER_GTIDS = 753,
     SQL_BEFORE_GTIDS = 754,
     SQL_BIG_RESULT = 755,
     SQL_BUFFER_RESULT = 756,
     SQL_CACHE_SYM = 757,
     SQL_CALC_FOUND_ROWS = 758,
     SQL_NO_CACHE_SYM = 759,
     SQL_SMALL_RESULT = 760,
     SQL_SYM = 761,
     SQL_THREAD = 762,
     SSL_SYM = 763,
     STARTING = 764,
     STARTS_SYM = 765,
     START_SYM = 766,
     STATUS_SYM = 767,
     STDDEV_SAMP_SYM = 768,
     STD_SYM = 769,
     STOP_SYM = 770,
     STORAGE_SYM = 771,
     STRAIGHT_JOIN = 772,
     STRING_SYM = 773,
     SUBCLASS_ORIGIN_SYM = 774,
     SUBDATE_SYM = 775,
     SUBJECT_SYM = 776,
     SUBPARTITIONS_SYM = 777,
     SUBPARTITION_SYM = 778,
     SUBSTRING = 779,
     SUM_SYM = 780,
     SUPER_SYM = 781,
     SUSPEND_SYM = 782,
     SWAPS_SYM = 783,
     SWITCHES_SYM = 784,
     SYSDATE = 785,
     TABLES = 786,
     TABLESPACE = 787,
     TABLE_REF_PRIORITY = 788,
     TABLE_SYM = 789,
     TABLE_CHECKSUM_SYM = 790,
     TABLE_NAME_SYM = 791,
     TEMPORARY = 792,
     TEMPTABLE_SYM = 793,
     TERMINATED = 794,
     TEXT_STRING = 795,
     TEXT_SYM = 796,
     THAN_SYM = 797,
     THEN_SYM = 798,
     TIMESTAMP = 799,
     TIMESTAMP_ADD = 800,
     TIMESTAMP_DIFF = 801,
     TIME_SYM = 802,
     TINYBLOB = 803,
     TINYINT = 804,
     TINYTEXT = 805,
     TO_SYM = 806,
     TRAILING = 807,
     TRANSACTION_SYM = 808,
     TRIGGERS_SYM = 809,
     TRIGGER_SYM = 810,
     TRIM = 811,
     TRUE_SYM = 812,
     TRUNCATE_SYM = 813,
     TYPES_SYM = 814,
     TYPE_SYM = 815,
     UDF_RETURNS_SYM = 816,
     ULONGLONG_NUM = 817,
     UNCOMMITTED_SYM = 818,
     UNDEFINED_SYM = 819,
     UNDERSCORE_CHARSET = 820,
     UNDOFILE_SYM = 821,
     UNDO_BUFFER_SIZE_SYM = 822,
     UNDO_SYM = 823,
     UNICODE_SYM = 824,
     UNINSTALL_SYM = 825,
     UNION_SYM = 826,
     UNIQUE_SYM = 827,
     UNKNOWN_SYM = 828,
     UNLOCK_SYM = 829,
     UNSIGNED = 830,
     UNTIL_SYM = 831,
     UPDATE_SYM = 832,
     UPGRADE_SYM = 833,
     USAGE = 834,
     USER = 835,
     USE_FRM = 836,
     USE_SYM = 837,
     USING = 838,
     UTC_DATE_SYM = 839,
     UTC_TIMESTAMP_SYM = 840,
     UTC_TIME_SYM = 841,
     VALUES = 842,
     VALUE_SYM = 843,
     VARBINARY = 844,
     VARCHAR = 845,
     VARIABLES = 846,
     VARIANCE_SYM = 847,
     VARYING = 848,
     VAR_SAMP_SYM = 849,
     VIEW_SYM = 850,
     WAIT_SYM = 851,
     WARNINGS = 852,
     WEEK_SYM = 853,
     WEIGHT_STRING_SYM = 854,
     WHEN_SYM = 855,
     WHERE = 856,
     WHILE_SYM = 857,
     WITH = 858,
     WITH_CUBE_SYM = 859,
     WITH_ROLLUP_SYM = 860,
     WORK_SYM = 861,
     WRAPPER_SYM = 862,
     WRITE_SYM = 863,
     X509_SYM = 864,
     XA_SYM = 865,
     XML_SYM = 866,
     XOR = 867,
     YEAR_MONTH_SYM = 868,
     YEAR_SYM = 869,
     ZEROFILL = 870
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYZE_SYM 269
#define AND_AND_SYM 270
#define AND_SYM 271
#define ANY_SYM 272
#define AS 273
#define ASC 274
#define ASCII_SYM 275
#define ASENSITIVE_SYM 276
#define AT_SYM 277
#define AUTHORS_SYM 278
#define AUTOEXTEND_SIZE_SYM 279
#define AUTO_INC 280
#define AVG_ROW_LENGTH 281
#define AVG_SYM 282
#define BACKUP_SYM 283
#define BEFORE_SYM 284
#define BEGIN_SYM 285
#define BETWEEN_SYM 286
#define BIGINT 287
#define BINARY 288
#define BINLOG_SYM 289
#define BIN_NUM 290
#define BIT_AND 291
#define BIT_OR 292
#define BIT_SYM 293
#define BIT_XOR 294
#define BLOB_SYM 295
#define BLOCK_SYM 296
#define BOOLEAN_SYM 297
#define BOOL_SYM 298
#define BOTH 299
#define BTREE_SYM 300
#define BY 301
#define BYTE_SYM 302
#define CACHE_SYM 303
#define CALL_SYM 304
#define CASCADE 305
#define CASCADED 306
#define CASE_SYM 307
#define CAST_SYM 308
#define CATALOG_NAME_SYM 309
#define CHAIN_SYM 310
#define CHANGE 311
#define CHANGED 312
#define CHARSET 313
#define CHAR_SYM 314
#define CHECKSUM_SYM 315
#define CHECK_SYM 316
#define CIPHER_SYM 317
#define CLASS_ORIGIN_SYM 318
#define CLIENT_SYM 319
#define CLOSE_SYM 320
#define COALESCE 321
#define CODE_SYM 322
#define COLLATE_SYM 323
#define COLLATION_SYM 324
#define COLUMNS 325
#define COLUMN_SYM 326
#define COLUMN_NAME_SYM 327
#define COMMENT_SYM 328
#define COMMITTED_SYM 329
#define COMMIT_SYM 330
#define COMPACT_SYM 331
#define COMPLETION_SYM 332
#define COMPRESSED_SYM 333
#define CONCURRENT 334
#define CONDITION_SYM 335
#define CONNECTION_SYM 336
#define CONSISTENT_SYM 337
#define CONSTRAINT 338
#define CONSTRAINT_CATALOG_SYM 339
#define CONSTRAINT_NAME_SYM 340
#define CONSTRAINT_SCHEMA_SYM 341
#define CONTAINS_SYM 342
#define CONTEXT_SYM 343
#define CONTINUE_SYM 344
#define CONTRIBUTORS_SYM 345
#define CONVERT_SYM 346
#define COUNT_SYM 347
#define CPU_SYM 348
#define CREATE 349
#define CROSS 350
#define CUBE_SYM 351
#define CURDATE 352
#define CURRENT_SYM 353
#define CURRENT_USER 354
#define CURSOR_SYM 355
#define CURSOR_NAME_SYM 356
#define CURTIME 357
#define DATABASE 358
#define DATABASES 359
#define DATAFILE_SYM 360
#define DATA_SYM 361
#define DATETIME 362
#define DATE_ADD_INTERVAL 363
#define DATE_SUB_INTERVAL 364
#define DATE_SYM 365
#define DAY_HOUR_SYM 366
#define DAY_MICROSECOND_SYM 367
#define DAY_MINUTE_SYM 368
#define DAY_SECOND_SYM 369
#define DAY_SYM 370
#define DEALLOCATE_SYM 371
#define DECIMAL_NUM 372
#define DECIMAL_SYM 373
#define DECLARE_SYM 374
#define DEFAULT 375
#define DEFAULT_AUTH_SYM 376
#define DEFINER_SYM 377
#define DELAYED_SYM 378
#define DELAY_KEY_WRITE_SYM 379
#define DELETE_SYM 380
#define DESC 381
#define DESCRIBE 382
#define DES_KEY_FILE 383
#define DETERMINISTIC_SYM 384
#define DIAGNOSTICS_SYM 385
#define DIRECTORY_SYM 386
#define DISABLE_SYM 387
#define DISCARD 388
#define DISK_SYM 389
#define DISTINCT 390
#define DIV_SYM 391
#define DOUBLE_SYM 392
#define DO_SYM 393
#define DROP 394
#define DUAL_SYM 395
#define DUMPFILE 396
#define DUPLICATE_SYM 397
#define DYNAMIC_SYM 398
#define EACH_SYM 399
#define ELSE 400
#define ELSEIF_SYM 401
#define ENABLE_SYM 402
#define ENCLOSED 403
#define END 404
#define ENDS_SYM 405
#define END_OF_INPUT 406
#define ENGINES_SYM 407
#define ENGINE_SYM 408
#define ENUM 409
#define EQ 410
#define EQUAL_SYM 411
#define ERROR_SYM 412
#define ERRORS 413
#define ESCAPED 414
#define ESCAPE_SYM 415
#define EVENTS_SYM 416
#define EVENT_SYM 417
#define EVERY_SYM 418
#define EXCHANGE_SYM 419
#define EXECUTE_SYM 420
#define EXISTS 421
#define EXIT_SYM 422
#define EXPANSION_SYM 423
#define EXTENDED_SYM 424
#define EXTENT_SIZE_SYM 425
#define EXTRACT_SYM 426
#define FALSE_SYM 427
#define FAST_SYM 428
#define FAULTS_SYM 429
#define FETCH_SYM 430
#define FILE_SYM 431
#define FIRST_SYM 432
#define FIXED_SYM 433
#define FLOAT_NUM 434
#define FLOAT_SYM 435
#define FLUSH_SYM 436
#define FORCE_SYM 437
#define FOREIGN 438
#define FOR_SYM 439
#define FORMAT_SYM 440
#define FOUND_SYM 441
#define FROM 442
#define FULL 443
#define FULLTEXT_SYM 444
#define FUNCTION_SYM 445
#define GE 446
#define GENERAL 447
#define GEOMETRYCOLLECTION 448
#define GEOMETRY_SYM 449
#define GET_FORMAT 450
#define GET_SYM 451
#define GLOBAL_SYM 452
#define GRANT 453
#define GRANTS 454
#define GROUP_SYM 455
#define GROUP_CONCAT_SYM 456
#define GT_SYM 457
#define HANDLER_SYM 458
#define HASH_SYM 459
#define HAVING 460
#define HELP_SYM 461
#define HEX_NUM 462
#define HIGH_PRIORITY 463
#define HOST_SYM 464
#define HOSTS_SYM 465
#define HOUR_MICROSECOND_SYM 466
#define HOUR_MINUTE_SYM 467
#define HOUR_SECOND_SYM 468
#define HOUR_SYM 469
#define IDENT 470
#define IDENTIFIED_SYM 471
#define IDENT_QUOTED 472
#define IF 473
#define IGNORE_SYM 474
#define IGNORE_SERVER_IDS_SYM 475
#define IMPORT 476
#define INDEXES 477
#define INDEX_SYM 478
#define INFILE 479
#define INITIAL_SIZE_SYM 480
#define INNER_SYM 481
#define INOUT_SYM 482
#define INSENSITIVE_SYM 483
#define INSERT 484
#define INSERT_METHOD 485
#define INSTALL_SYM 486
#define INTERVAL_SYM 487
#define INTO 488
#define INT_SYM 489
#define INVOKER_SYM 490
#define IN_SYM 491
#define IO_AFTER_GTIDS 492
#define IO_BEFORE_GTIDS 493
#define IO_SYM 494
#define IPC_SYM 495
#define IS 496
#define ISOLATION 497
#define ISSUER_SYM 498
#define ITERATE_SYM 499
#define JOIN_SYM 500
#define KEYS 501
#define KEY_BLOCK_SIZE 502
#define KEY_SYM 503
#define KILL_SYM 504
#define LANGUAGE_SYM 505
#define LAST_SYM 506
#define LE 507
#define LEADING 508
#define LEAVES 509
#define LEAVE_SYM 510
#define LEFT 511
#define LESS_SYM 512
#define LEVEL_SYM 513
#define LEX_HOSTNAME 514
#define LIKE 515
#define LIMIT 516
#define LINEAR_SYM 517
#define LINES 518
#define LINESTRING 519
#define LIST_SYM 520
#define LOAD 521
#define LOCAL_SYM 522
#define LOCATOR_SYM 523
#define LOCKS_SYM 524
#define LOCK_SYM 525
#define LOGFILE_SYM 526
#define LOGS_SYM 527
#define LONGBLOB 528
#define LONGTEXT 529
#define LONG_NUM 530
#define LONG_SYM 531
#define LOOP_SYM 532
#define LOW_PRIORITY 533
#define LT 534
#define MASTER_AUTO_POSITION_SYM 535
#define MASTER_BIND_SYM 536
#define MASTER_CONNECT_RETRY_SYM 537
#define MASTER_DELAY_SYM 538
#define MASTER_HOST_SYM 539
#define MASTER_LOG_FILE_SYM 540
#define MASTER_LOG_POS_SYM 541
#define MASTER_PASSWORD_SYM 542
#define MASTER_PORT_SYM 543
#define MASTER_RETRY_COUNT_SYM 544
#define MASTER_SERVER_ID_SYM 545
#define MASTER_SSL_CAPATH_SYM 546
#define MASTER_SSL_CA_SYM 547
#define MASTER_SSL_CERT_SYM 548
#define MASTER_SSL_CIPHER_SYM 549
#define MASTER_SSL_CRL_SYM 550
#define MASTER_SSL_CRLPATH_SYM 551
#define MASTER_SSL_KEY_SYM 552
#define MASTER_SSL_SYM 553
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 554
#define MASTER_SYM 555
#define MASTER_USER_SYM 556
#define MASTER_HEARTBEAT_PERIOD_SYM 557
#define MATCH 558
#define MAX_CONNECTIONS_PER_HOUR 559
#define MAX_QUERIES_PER_HOUR 560
#define MAX_ROWS 561
#define MAX_SIZE_SYM 562
#define MAX_SYM 563
#define MAX_UPDATES_PER_HOUR 564
#define MAX_USER_CONNECTIONS_SYM 565
#define MAX_VALUE_SYM 566
#define MEDIUMBLOB 567
#define MEDIUMINT 568
#define MEDIUMTEXT 569
#define MEDIUM_SYM 570
#define MEMORY_SYM 571
#define MERGE_SYM 572
#define MESSAGE_TEXT_SYM 573
#define MICROSECOND_SYM 574
#define MIGRATE_SYM 575
#define MINUTE_MICROSECOND_SYM 576
#define MINUTE_SECOND_SYM 577
#define MINUTE_SYM 578
#define MIN_ROWS 579
#define MIN_SYM 580
#define MODE_SYM 581
#define MODIFIES_SYM 582
#define MODIFY_SYM 583
#define MOD_SYM 584
#define MONTH_SYM 585
#define MULTILINESTRING 586
#define MULTIPOINT 587
#define MULTIPOLYGON 588
#define MUTEX_SYM 589
#define MYSQL_ERRNO_SYM 590
#define NAMES_SYM 591
#define NAME_SYM 592
#define NATIONAL_SYM 593
#define NATURAL 594
#define NCHAR_STRING 595
#define NCHAR_SYM 596
#define NDBCLUSTER_SYM 597
#define NE 598
#define NEG 599
#define NEW_SYM 600
#define NEXT_SYM 601
#define NODEGROUP_SYM 602
#define NONE_SYM 603
#define NOT2_SYM 604
#define NOT_SYM 605
#define NOW_SYM 606
#define NO_SYM 607
#define NO_WAIT_SYM 608
#define NO_WRITE_TO_BINLOG 609
#define NULL_SYM 610
#define NUM 611
#define NUMBER_SYM 612
#define NUMERIC_SYM 613
#define NVARCHAR_SYM 614
#define OFFSET_SYM 615
#define OLD_PASSWORD 616
#define ON 617
#define ONE_SYM 618
#define ONLY_SYM 619
#define OPEN_SYM 620
#define OPTIMIZE 621
#define OPTIONS_SYM 622
#define OPTION 623
#define OPTIONALLY 624
#define OR2_SYM 625
#define ORDER_SYM 626
#define OR_OR_SYM 627
#define OR_SYM 628
#define OUTER 629
#define OUTFILE 630
#define OUT_SYM 631
#define OWNER_SYM 632
#define PACK_KEYS_SYM 633
#define PAGE_SYM 634
#define PARAM_MARKER 635
#define PARSER_SYM 636
#define PARTIAL 637
#define PARTITION_SYM 638
#define PARTITIONS_SYM 639
#define PARTITIONING_SYM 640
#define PASSWORD 641
#define PERSISTENT_STATS_SYM 642
#define PHASE_SYM 643
#define PLUGIN_DIR_SYM 644
#define PLUGIN_SYM 645
#define PLUGINS_SYM 646
#define POINT_SYM 647
#define POLYGON 648
#define PORT_SYM 649
#define POSITION_SYM 650
#define PRECISION 651
#define PREPARE_SYM 652
#define PRESERVE_SYM 653
#define PREV_SYM 654
#define PRIMARY_SYM 655
#define PRIVILEGES 656
#define PROCEDURE_SYM 657
#define PROCESS 658
#define PROCESSLIST_SYM 659
#define PROFILE_SYM 660
#define PROFILES_SYM 661
#define PROXY_SYM 662
#define PURGE 663
#define QUARTER_SYM 664
#define QUERY_SYM 665
#define QUICK 666
#define RANGE_SYM 667
#define READS_SYM 668
#define READ_ONLY_SYM 669
#define READ_SYM 670
#define READ_WRITE_SYM 671
#define REAL 672
#define REBUILD_SYM 673
#define RECOVER_SYM 674
#define REDOFILE_SYM 675
#define REDO_BUFFER_SIZE_SYM 676
#define REDUNDANT_SYM 677
#define REFERENCES 678
#define REGEXP 679
#define RELAY 680
#define RELAYLOG_SYM 681
#define RELAY_LOG_FILE_SYM 682
#define RELAY_LOG_POS_SYM 683
#define RELAY_THREAD 684
#define RELEASE_SYM 685
#define RELOAD 686
#define REMOVE_SYM 687
#define RENAME 688
#define REORGANIZE_SYM 689
#define REPAIR 690
#define REPEATABLE_SYM 691
#define REPEAT_SYM 692
#define REPLACE 693
#define REPLICATION 694
#define REQUIRE_SYM 695
#define RESET_SYM 696
#define RESIGNAL_SYM 697
#define RESOURCES 698
#define RESTORE_SYM 699
#define RESTRICT 700
#define RESUME_SYM 701
#define RETURNED_SQLSTATE_SYM 702
#define RETURNS_SYM 703
#define RETURN_SYM 704
#define REVERSE_SYM 705
#define REVOKE 706
#define RIGHT 707
#define ROLLBACK_SYM 708
#define ROLLUP_SYM 709
#define ROUTINE_SYM 710
#define ROWS_SYM 711
#define ROW_FORMAT_SYM 712
#define ROW_SYM 713
#define ROW_COUNT_SYM 714
#define RTREE_SYM 715
#define SAVEPOINT_SYM 716
#define SCHEDULE_SYM 717
#define SCHEMA_NAME_SYM 718
#define SECOND_MICROSECOND_SYM 719
#define SECOND_SYM 720
#define SECURITY_SYM 721
#define SELECT_SYM 722
#define SENSITIVE_SYM 723
#define SEPARATOR_SYM 724
#define SERIALIZABLE_SYM 725
#define SERIAL_SYM 726
#define SESSION_SYM 727
#define SERVER_SYM 728
#define SERVER_OPTIONS 729
#define SET 730
#define SET_VAR 731
#define SHARE_SYM 732
#define SHIFT_LEFT 733
#define SHIFT_RIGHT 734
#define SHOW 735
#define SHUTDOWN 736
#define SIGNAL_SYM 737
#define SIGNED_SYM 738
#define SIMPLE_SYM 739
#define SLAVE 740
#define SLOW 741
#define SMALLINT 742
#define SNAPSHOT_SYM 743
#define SOCKET_SYM 744
#define SONAME_SYM 745
#define SOUNDS_SYM 746
#define SOURCE_SYM 747
#define SPATIAL_SYM 748
#define SPECIFIC_SYM 749
#define SQLEXCEPTION_SYM 750
#define SQLSTATE_SYM 751
#define SQLWARNING_SYM 752
#define SQL_AFTER_GTIDS 753
#define SQL_BEFORE_GTIDS 754
#define SQL_BIG_RESULT 755
#define SQL_BUFFER_RESULT 756
#define SQL_CACHE_SYM 757
#define SQL_CALC_FOUND_ROWS 758
#define SQL_NO_CACHE_SYM 759
#define SQL_SMALL_RESULT 760
#define SQL_SYM 761
#define SQL_THREAD 762
#define SSL_SYM 763
#define STARTING 764
#define STARTS_SYM 765
#define START_SYM 766
#define STATUS_SYM 767
#define STDDEV_SAMP_SYM 768
#define STD_SYM 769
#define STOP_SYM 770
#define STORAGE_SYM 771
#define STRAIGHT_JOIN 772
#define STRING_SYM 773
#define SUBCLASS_ORIGIN_SYM 774
#define SUBDATE_SYM 775
#define SUBJECT_SYM 776
#define SUBPARTITIONS_SYM 777
#define SUBPARTITION_SYM 778
#define SUBSTRING 779
#define SUM_SYM 780
#define SUPER_SYM 781
#define SUSPEND_SYM 782
#define SWAPS_SYM 783
#define SWITCHES_SYM 784
#define SYSDATE 785
#define TABLES 786
#define TABLESPACE 787
#define TABLE_REF_PRIORITY 788
#define TABLE_SYM 789
#define TABLE_CHECKSUM_SYM 790
#define TABLE_NAME_SYM 791
#define TEMPORARY 792
#define TEMPTABLE_SYM 793
#define TERMINATED 794
#define TEXT_STRING 795
#define TEXT_SYM 796
#define THAN_SYM 797
#define THEN_SYM 798
#define TIMESTAMP 799
#define TIMESTAMP_ADD 800
#define TIMESTAMP_DIFF 801
#define TIME_SYM 802
#define TINYBLOB 803
#define TINYINT 804
#define TINYTEXT 805
#define TO_SYM 806
#define TRAILING 807
#define TRANSACTION_SYM 808
#define TRIGGERS_SYM 809
#define TRIGGER_SYM 810
#define TRIM 811
#define TRUE_SYM 812
#define TRUNCATE_SYM 813
#define TYPES_SYM 814
#define TYPE_SYM 815
#define UDF_RETURNS_SYM 816
#define ULONGLONG_NUM 817
#define UNCOMMITTED_SYM 818
#define UNDEFINED_SYM 819
#define UNDERSCORE_CHARSET 820
#define UNDOFILE_SYM 821
#define UNDO_BUFFER_SIZE_SYM 822
#define UNDO_SYM 823
#define UNICODE_SYM 824
#define UNINSTALL_SYM 825
#define UNION_SYM 826
#define UNIQUE_SYM 827
#define UNKNOWN_SYM 828
#define UNLOCK_SYM 829
#define UNSIGNED 830
#define UNTIL_SYM 831
#define UPDATE_SYM 832
#define UPGRADE_SYM 833
#define USAGE 834
#define USER 835
#define USE_FRM 836
#define USE_SYM 837
#define USING 838
#define UTC_DATE_SYM 839
#define UTC_TIMESTAMP_SYM 840
#define UTC_TIME_SYM 841
#define VALUES 842
#define VALUE_SYM 843
#define VARBINARY 844
#define VARCHAR 845
#define VARIABLES 846
#define VARIANCE_SYM 847
#define VARYING 848
#define VAR_SAMP_SYM 849
#define VIEW_SYM 850
#define WAIT_SYM 851
#define WARNINGS 852
#define WEEK_SYM 853
#define WEIGHT_STRING_SYM 854
#define WHEN_SYM 855
#define WHERE 856
#define WHILE_SYM 857
#define WITH 858
#define WITH_CUBE_SYM 859
#define WITH_ROLLUP_SYM 860
#define WORK_SYM 861
#define WRAPPER_SYM 862
#define WRITE_SYM 863
#define X509_SYM 864
#define XA_SYM 865
#define XML_SYM 866
#define XOR 867
#define YEAR_MONTH_SYM 868
#define YEAR_SYM 869
#define ZEROFILL 870




/* Copy the first part of user declarations.  */
#line 24 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"

/* thd is passed as an argument to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL  YYTHD->variables.character_set_client

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "rpl_slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror((char*) (A));                   \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

/*
  Work around for broken code generated by bison 1.875.

  The code generated by bison 1.875a and later, bison 2.1 and bison 2.2 is ok.
  With bison 1.875 however, the generated code contains:
<pre>
  yyerrlab1:
  #if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
    __attribute__ ((__unused__))
  #endif
</pre>
  This usage of __attribute__ is illegal, so we remove it.
  See the following references for details:
  http://lists.gnu.org/archive/html/bug-bison/2004-02/msg00014.html
  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14273
*/

#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
#undef __attribute__
#define __attribute__(X)
#endif


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}

/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(const char *s)
{
  THD *thd= current_thd;

  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->new_cont_backpatch(NULL);

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int case_stmt_action_expr(LEX *lex, Item* expr)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  int case_expr_id= pctx->push_case_expr_id();

  if (case_expr_id < 0)
    return 1;

  sp_instr_set_case_expr *i=
    new sp_instr_set_case_expr(sp->instructions(),
                               pctx, case_expr_id, expr, lex);

  sp->add_cont_backpatch(i);
  return sp->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param thd the current thread
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int case_stmt_action_when(THD *thd, Item *when, bool simple)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
  uint ip= sp->instructions();
  sp_instr_jump_if_not *i;

  if (simple)
  {
    Item_case_expr *var=
      new Item_case_expr(pctx->get_current_case_expr_id());

#ifndef DBUG_OFF
    if (var)
      var->m_sp= sp;
#endif

    Item *expr= new Item_func_eq(var, when);
    i= new sp_instr_jump_if_not(ip, pctx, expr, lex);
  }
  else
  {
    i= new sp_instr_jump_if_not(ip, pctx, when, lex);
  }

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return !i ||
         sp->push_backpatch(i, pctx->push_label(thd, EMPTY_STR, 0)) ||
         sp->add_cont_backpatch(i) ||
         sp->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int case_stmt_action_then(LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i = new sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->backpatch(pctx->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->push_backpatch(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->backpatch(pctx->pop_label());

  if (simple)
    pctx->pop_case_expr_id();

  sp->do_cont_backpatch();
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (pctx && tmp->var == Sys_autocommit_ptr)
    sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

#ifdef HAVE_REPLICATION
  if (lex->uses_stored_routines() &&
      (tmp->var == Sys_gtid_next_ptr
#ifdef HAVE_NDB_BINLOG
       || tmp->var == Sys_gtid_next_list_ptr
#endif
     ))
  {
    my_error(ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION, MYF(0),
             tmp->var->name.str);
    return TRUE;
  }
#endif

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to push a SP local variable into the assignment list.

  @param thd      the current thread
  @param var_type the SP local variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_local_variable(THD *thd, sp_variable *spv, Item *val)
{
  Item *it;
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  if (val)
    it= val;
  else if (spv->default_value)
    it= spv->default_value;
  else
  {
    it= new (thd->mem_root) Item_null();
    if (it == NULL)
      return TRUE;
  }

  sp_instr_set *sp_set=
    new sp_instr_set(sp->instructions(),
                     pctx,
                     spv->offset, it, spv->type, lex, TRUE);

  return (sp_set == NULL || lex->sphead->add_instr(sp_set));
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd      the current thread
  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_trigger_new_row(THD *thd, LEX_STRING *name, Item *val)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new Item_null();

  DBUG_ASSERT(lex->trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (lex->trg_chistics.event == TRG_EVENT_INSERT ||
               lex->trg_chistics.event == TRG_EVENT_UPDATE));

  Item_trigger_field *trg_fld=
    new (thd->mem_root) Item_trigger_field(lex->current_context(),
                                           Item_trigger_field::NEW_ROW,
                                           name->str, UPDATE_ACL, FALSE);

  if (!trg_fld)
    return TRUE;

  sp_instr_set_trigger_field *sp_fld=
    new sp_instr_set_trigger_field(sp->instructions(), pctx, trg_fld, val, lex);

  if (!sp_fld)
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  sp->m_trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sp->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  thd         The current thread.
  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
static Item_splocal*
create_item_for_sp_var(THD *thd, LEX_STRING name, sp_variable *spvar,
                       const char *start_in_q, const char *end_in_q)
{
  Item_splocal *item;
  LEX *lex= thd->lex;
  uint pos_in_q, len_in_q;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* If necessary, look for the variable. */
  if (pctx && !spvar)
    spvar= pctx->find_variable(name, false);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(pctx && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= start_in_q - sp->m_tmp_query;
  len_in_q= end_in_q - start_in_q;

  item= new (thd->mem_root)
    Item_splocal(name, spvar->offset, spvar->type, pos_in_q, len_in_q);

#ifndef DBUG_OFF
  if (item)
    item->m_sp= sp;
#endif

  return item;
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select statement
   uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
   is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool add_select_to_union_list(LEX *lex, bool is_union_distinct, 
                              bool is_top_level)
{
  /* 
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && lex->result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
    return TRUE;
  }
  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  /* This counter shouldn't be incremented for UNION parts */
  lex->nest_level--;
  if (mysql_new_select(lex, 0))
    return TRUE;
  mysql_init_select(lex);
  lex->current_select->linkage=UNION_TYPE;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    lex->current_select->master_unit()->union_distinct=
      lex->current_select;
  return FALSE;
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select;
  if (sel->set_braces(1))
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  /* select in braces, can't contain global parameters */
  if (sel->master_unit()->fake_select_lex)
    sel->master_unit()->global_parameters=
      sel->master_unit()->fake_select_lex;
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}


/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  QQ: May be we should simply prohibit group assignments in SP?

  @see sp_create_assignment_instr

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead
*/

static void sp_create_assignment_lex(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    LEX *old_lex= lex;
    lex->sphead->reset_lex(thd);
    lex= thd->lex;

    /* Set new LEX as if we at start of set rule. */
    lex->sql_command= SQLCOM_SET_OPTION;
    mysql_init_select(lex);
    lex->var_list.empty();
    lex->one_shot_set= 0;
    lex->autocommit= 0;
    /* get_ptr() is only correct with no lookahead. */
    DBUG_ASSERT(no_lookahead);
    lex->sphead->m_tmp_query= lip->get_ptr();
    /* Inherit from outer lex. */
    lex->option_type= old_lex->option_type;
  }
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead

  @return false if success, true otherwise.
*/

static bool sp_create_assignment_instr(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  if (!sp)
    return false;

  if (!lex->var_list.is_empty())
  {
    /*
      We have assignment to user or system variable or
      option setting, so we should construct sp_instr_stmt
      for it.
    */
    LEX_STRING qbuff;
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

    sp_instr_stmt *i= new sp_instr_stmt(sp->instructions(), pctx, lex);

    if (!i)
      return true;

    /*
      Extract the query statement from the tokenizer.  The
      end is either lip->ptr, if there was no lookahead,
      lip->tok_end otherwise.
    */
    if (no_lookahead)
      qbuff.length= lip->get_ptr() - sp->m_tmp_query;
    else
      qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

    if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                        qbuff.length + 5)))
      return true;

    strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
            qbuff.length);
    qbuff.length+= 4;
    i->m_query= qbuff;
    if (sp->add_instr(i))
      return true;
  }

  /* Remember option_type of the currently parsed LEX. */
  enum_var_type inner_option_type= lex->option_type;

  if (sp->restore_lex(thd))
    return true;

  /* Copy option_type to outer lex in case it has changed. */
  thd->lex->option_type= inner_option_type;

  return false;
}




/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 934 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
{
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_ha_read_modes ha_read_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  const CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  class sp_condition_value *spcondvalue;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  Diag_condition_item_name diag_condition_item_name;
  Diagnostics_information::Which_area diag_area;
  Diagnostics_information *diag_info;
  Statement_information_item *stmt_info_item;
  Statement_information_item::Name stmt_info_item_name;
  List<Statement_information_item> *stmt_info_list;
  Condition_information_item *cond_info_item;
  Condition_information_item::Name cond_info_item_name;
  List<Condition_information_item> *cond_info_list;
}
/* Line 193 of yacc.c.  */
#line 2302 "/export/home/pb2/build/sb_0-5439812-1333973057.76/dist/sql/sql_yacc.cc"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 991 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 216 of yacc.c.  */
#line 2318 "/export/home/pb2/build/sb_0-5439812-1333973057.76/dist/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  589
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   54911

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  635
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  933
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2625
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4459

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   870

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   628,     2,     2,     2,   622,   617,     2,
     625,   626,   620,   619,   627,   618,   633,   621,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   634,   631,
       2,     2,     2,     2,   632,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   623,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   629,   616,   630,   624,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   129,   131,   133,   138,   140,   143,   144,
     149,   150,   153,   157,   159,   162,   163,   167,   168,   174,
     176,   180,   184,   188,   192,   196,   200,   204,   208,   212,
     216,   220,   224,   228,   232,   236,   240,   244,   248,   252,
     258,   262,   264,   265,   267,   271,   273,   277,   281,   285,
     289,   290,   298,   299,   312,   313,   326,   327,   340,   341,
     348,   349,   353,   358,   363,   367,   370,   381,   383,   387,
     390,   393,   396,   399,   402,   405,   408,   409,   423,   424,
     431,   434,   435,   437,   441,   443,   444,   447,   448,   451,
     452,   454,   458,   463,   464,   467,   468,   471,   473,   475,
     477,   479,   481,   483,   485,   487,   489,   491,   493,   495,
     497,   498,   502,   504,   505,   508,   509,   512,   515,   518,
     521,   524,   528,   532,   534,   536,   538,   541,   545,   549,
     550,   555,   556,   560,   561,   563,   567,   569,   570,   572,
     576,   578,   579,   583,   584,   586,   590,   592,   597,   598,
     600,   602,   604,   605,   609,   612,   616,   617,   621,   622,
     628,   634,   635,   643,   649,   650,   653,   655,   657,   659,
     663,   665,   667,   669,   673,   674,   676,   678,   680,   682,
     685,   687,   691,   693,   695,   696,   698,   699,   702,   706,
     712,   714,   716,   718,   720,   722,   724,   726,   728,   730,
     732,   734,   736,   738,   740,   742,   746,   751,   752,   754,
     756,   760,   762,   766,   770,   772,   775,   777,   779,   781,
     783,   787,   791,   793,   795,   797,   799,   801,   803,   805,
     807,   809,   811,   813,   815,   817,   819,   823,   824,   827,
     829,   831,   833,   835,   837,   839,   841,   843,   845,   847,
     849,   851,   853,   854,   860,   861,   864,   865,   869,   870,
     873,   876,   879,   882,   883,   890,   893,   894,   897,   899,
     901,   905,   906,   907,   908,   916,   917,   920,   923,   925,
     927,   928,   929,   938,   939,   946,   948,   951,   953,   956,
     957,   958,   965,   966,   967,   974,   975,   978,   979,   985,
     986,   988,   989,   995,   996,   999,  1000,  1006,  1011,  1012,
    1013,  1022,  1023,  1031,  1033,  1035,  1037,  1039,  1041,  1044,
    1049,  1055,  1056,  1061,  1066,  1071,  1075,  1079,  1082,  1085,
    1086,  1089,  1091,  1094,  1098,  1100,  1102,  1104,  1105,  1107,
    1109,  1112,  1116,  1118,  1120,  1122,  1124,  1126,  1128,  1130,
    1132,  1133,  1135,  1137,  1140,  1144,  1146,  1148,  1150,  1152,
    1154,  1155,  1157,  1159,  1162,  1166,  1168,  1170,  1172,  1174,
    1176,  1178,  1180,  1181,  1183,  1185,  1188,  1192,  1194,  1196,
    1198,  1201,  1204,  1207,  1209,  1211,  1213,  1215,  1218,  1222,
    1226,  1230,  1234,  1238,  1242,  1246,  1250,  1255,  1257,  1259,
    1261,  1263,  1266,  1270,  1273,  1278,  1284,  1285,  1291,  1292,
    1293,  1299,  1300,  1308,  1310,  1311,  1313,  1314,  1319,  1320,
    1321,  1325,  1331,  1337,  1338,  1343,  1346,  1349,  1352,  1355,
    1356,  1358,  1359,  1361,  1363,  1367,  1369,  1374,  1380,  1386,
    1387,  1390,  1391,  1392,  1400,  1401,  1411,  1413,  1417,  1419,
    1421,  1422,  1425,  1426,  1430,  1432,  1436,  1437,  1444,  1446,
    1447,  1448,  1454,  1455,  1460,  1462,  1464,  1466,  1470,  1472,
    1476,  1477,  1478,  1484,  1486,  1490,  1492,  1494,  1495,  1499,
    1501,  1505,  1506,  1511,  1513,  1514,  1516,  1519,  1521,  1525,
    1530,  1534,  1538,  1542,  1547,  1552,  1556,  1557,  1558,  1565,
    1566,  1568,  1569,  1571,  1573,  1576,  1578,  1580,  1581,  1583,
    1585,  1588,  1590,  1591,  1595,  1596,  1598,  1600,  1603,  1605,
    1608,  1612,  1616,  1620,  1624,  1628,  1632,  1636,  1640,  1644,
    1648,  1652,  1656,  1660,  1664,  1668,  1672,  1673,  1680,  1682,
    1684,  1688,  1693,  1698,  1701,  1704,  1707,  1711,  1715,  1720,
    1725,  1727,  1729,  1731,  1733,  1735,  1737,  1739,  1741,  1743,
    1745,  1747,  1749,  1752,  1754,  1756,  1758,  1760,  1762,  1764,
    1768,  1770,  1772,  1775,  1778,  1786,  1795,  1804,  1813,  1822,
    1825,  1826,  1828,  1833,  1834,  1836,  1839,  1840,  1845,  1849,
    1853,  1857,  1859,  1862,  1864,  1866,  1870,  1873,  1877,  1880,
    1883,  1885,  1889,  1893,  1896,  1900,  1902,  1905,  1908,  1911,
    1913,  1916,  1918,  1920,  1922,  1925,  1929,  1932,  1936,  1939,
    1942,  1946,  1950,  1954,  1955,  1962,  1963,  1970,  1973,  1975,
    1977,  1979,  1981,  1983,  1985,  1987,  1989,  1991,  1993,  1995,
    1998,  2001,  2003,  2006,  2008,  2011,  2015,  2018,  2020,  2022,
    2024,  2026,  2028,  2030,  2032,  2035,  2036,  2038,  2040,  2046,
    2047,  2051,  2052,  2055,  2059,  2060,  2062,  2065,  2067,  2069,
    2071,  2073,  2077,  2081,  2085,  2089,  2090,  2092,  2093,  2095,
    2096,  2098,  2101,  2103,  2105,  2108,  2111,  2115,  2117,  2121,
    2124,  2126,  2129,  2132,  2135,  2138,  2141,  2143,  2145,  2148,
    2150,  2152,  2154,  2156,  2158,  2159,  2162,  2164,  2166,  2168,
    2170,  2172,  2173,  2176,  2178,  2180,  2181,  2183,  2185,  2188,
    2191,  2193,  2196,  2199,  2200,  2202,  2204,  2206,  2210,  2212,
    2216,  2217,  2219,  2220,  2225,  2227,  2229,  2231,  2232,  2234,
    2237,  2239,  2241,  2244,  2246,  2250,  2254,  2256,  2258,  2259,
    2262,  2263,  2265,  2271,  2272,  2276,  2280,  2282,  2283,  2286,
    2289,  2292,  2293,  2297,  2301,  2308,  2315,  2317,  2319,  2322,
    2325,  2328,  2330,  2333,  2336,  2338,  2340,  2341,  2343,  2345,
    2347,  2349,  2350,  2352,  2354,  2356,  2357,  2359,  2362,  2363,
    2365,  2366,  2368,  2369,  2371,  2373,  2376,  2378,  2381,  2383,
    2386,  2389,  2392,  2396,  2399,  2401,  2403,  2405,  2407,  2411,
    2413,  2415,  2417,  2422,  2425,  2427,  2432,  2433,  2435,  2436,
    2439,  2441,  2445,  2446,  2453,  2454,  2460,  2468,  2469,  2475,
    2476,  2482,  2483,  2489,  2490,  2495,  2496,  2507,  2511,  2516,
    2520,  2524,  2532,  2533,  2537,  2539,  2544,  2545,  2549,  2550,
    2553,  2554,  2556,  2557,  2560,  2563,  2566,  2569,  2571,  2573,
    2575,  2579,  2584,  2585,  2592,  2597,  2598,  2604,  2605,  2612,
    2617,  2621,  2623,  2631,  2635,  2637,  2639,  2640,  2646,  2647,
    2651,  2654,  2655,  2661,  2662,  2663,  2670,  2672,  2676,  2678,
    2680,  2684,  2687,  2691,  2694,  2699,  2700,  2707,  2708,  2709,
    2718,  2723,  2728,  2732,  2736,  2739,  2742,  2749,  2755,  2759,
    2765,  2767,  2769,  2771,  2775,  2779,  2783,  2787,  2788,  2790,
    2791,  2793,  2794,  2796,  2798,  2799,  2802,  2804,  2805,  2807,
    2809,  2811,  2812,  2819,  2823,  2827,  2828,  2830,  2832,  2836,
    2840,  2843,  2846,  2851,  2852,  2856,  2857,  2861,  2862,  2866,
    2867,  2871,  2872,  2874,  2876,  2880,  2882,  2884,  2885,  2888,
    2890,  2894,  2898,  2902,  2903,  2909,  2910,  2912,  2914,  2915,
    2922,  2923,  2925,  2927,  2930,  2932,  2934,  2936,  2937,  2943,
    2946,  2947,  2953,  2954,  2956,  2958,  2961,  2963,  2965,  2967,
    2969,  2971,  2974,  2975,  2981,  2982,  2984,  2986,  2987,  2992,
    2997,  3001,  3007,  3009,  3013,  3017,  3018,  3025,  3027,  3029,
    3031,  3035,  3038,  3042,  3044,  3046,  3047,  3054,  3056,  3058,
    3060,  3064,  3068,  3073,  3074,  3081,  3082,  3085,  3086,  3091,
    3092,  3095,  3097,  3100,  3105,  3108,  3112,  3115,  3119,  3120,
    3124,  3125,  3126,  3133,  3136,  3138,  3140,  3143,  3146,  3155,
    3160,  3161,  3163,  3166,  3168,  3170,  3172,  3174,  3175,  3178,
    3183,  3187,  3189,  3191,  3195,  3200,  3201,  3202,  3203,  3206,
    3209,  3211,  3213,  3214,  3217,  3221,  3225,  3229,  3232,  3236,
    3241,  3245,  3250,  3254,  3259,  3261,  3265,  3270,  3274,  3278,
    3285,  3287,  3293,  3300,  3306,  3314,  3321,  3330,  3336,  3343,
    3348,  3353,  3359,  3363,  3368,  3370,  3374,  3378,  3382,  3386,
    3390,  3394,  3400,  3406,  3410,  3414,  3418,  3422,  3426,  3430,
    3432,  3434,  3436,  3438,  3440,  3442,  3444,  3446,  3448,  3450,
    3452,  3454,  3456,  3458,  3460,  3462,  3464,  3466,  3468,  3470,
    3472,  3474,  3478,  3480,  3482,  3484,  3486,  3490,  3493,  3496,
    3499,  3502,  3506,  3510,  3516,  3523,  3528,  3533,  3541,  3544,
    3551,  3557,  3564,  3571,  3576,  3581,  3587,  3592,  3599,  3602,
    3607,  3612,  3617,  3628,  3635,  3644,  3651,  3656,  3661,  3668,
    3673,  3678,  3683,  3690,  3695,  3703,  3711,  3719,  3726,  3733,
    3740,  3747,  3751,  3756,  3763,  3772,  3775,  3778,  3787,  3796,
    3803,  3810,  3812,  3819,  3826,  3835,  3844,  3851,  3860,  3867,
    3870,  3879,  3888,  3891,  3894,  3897,  3902,  3907,  3912,  3917,
    3921,  3930,  3937,  3946,  3951,  3958,  3963,  3968,  3973,  3980,
    3989,  3994,  3998,  4005,  4010,  4017,  4023,  4032,  4040,  4051,
    4053,  4060,  4065,  4070,  4075,  4080,  4085,  4092,  4097,  4098,
    4104,  4111,  4114,  4118,  4119,  4124,  4125,  4129,  4130,  4132,
    4134,  4138,  4143,  4148,  4154,  4159,  4164,  4169,  4175,  4180,
    4181,  4182,  4190,  4195,  4201,  4206,  4212,  4217,  4222,  4227,
    4232,  4237,  4243,  4244,  4253,  4254,  4258,  4262,  4264,  4269,
    4270,  4272,  4273,  4276,  4277,  4279,  4280,  4284,  4287,  4291,
    4294,  4296,  4299,  4301,  4304,  4306,  4309,  4312,  4315,  4316,
    4318,  4320,  4324,  4326,  4330,  4332,  4336,  4337,  4339,  4340,
    4343,  4348,  4354,  4356,  4358,  4360,  4362,  4367,  4369,  4373,
    4377,  4381,  4382,  4389,  4390,  4397,  4398,  4407,  4412,  4413,
    4422,  4423,  4434,  4441,  4442,  4451,  4452,  4463,  4470,  4472,
    4475,  4478,  4479,  4481,  4487,  4488,  4494,  4498,  4504,  4507,
    4508,  4509,  4517,  4519,  4520,  4521,  4528,  4529,  4533,  4534,
    4535,  4541,  4542,  4544,  4545,  4547,  4548,  4551,  4555,  4559,
    4561,  4563,  4564,  4572,  4573,  4581,  4583,  4586,  4587,  4588,
    4591,  4592,  4595,  4596,  4598,  4600,  4602,  4604,  4608,  4610,
    4614,  4616,  4618,  4620,  4622,  4624,  4626,  4628,  4630,  4632,
    4634,  4636,  4638,  4640,  4642,  4644,  4646,  4648,  4650,  4652,
    4654,  4656,  4658,  4660,  4662,  4664,  4665,  4667,  4669,  4670,
    4673,  4674,  4676,  4677,  4678,  4682,  4683,  4684,  4688,  4691,
    4692,  4693,  4698,  4703,  4706,  4707,  4709,  4711,  4715,  4719,
    4721,  4724,  4725,  4727,  4728,  4733,  4738,  4741,  4742,  4744,
    4746,  4747,  4749,  4750,  4752,  4755,  4757,  4761,  4765,  4767,
    4769,  4771,  4773,  4775,  4776,  4779,  4781,  4783,  4785,  4787,
    4789,  4791,  4793,  4795,  4797,  4799,  4801,  4803,  4805,  4807,
    4809,  4811,  4813,  4815,  4817,  4819,  4821,  4823,  4825,  4826,
    4827,  4834,  4835,  4837,  4841,  4843,  4847,  4848,  4851,  4855,
    4857,  4860,  4862,  4863,  4867,  4868,  4869,  4877,  4880,  4882,
    4883,  4887,  4888,  4896,  4897,  4904,  4909,  4916,  4921,  4926,
    4931,  4932,  4939,  4944,  4949,  4954,  4960,  4965,  4967,  4971,
    4973,  4976,  4978,  4982,  4984,  4985,  4988,  4989,  4991,  4992,
    4994,  4996,  4999,  5003,  5005,  5007,  5008,  5009,  5018,  5019,
    5020,  5027,  5028,  5030,  5032,  5034,  5036,  5038,  5041,  5043,
    5045,  5047,  5051,  5056,  5057,  5061,  5065,  5067,  5070,  5073,
    5074,  5078,  5079,  5085,  5089,  5091,  5095,  5097,  5101,  5103,
    5105,  5106,  5108,  5109,  5114,  5115,  5117,  5121,  5123,  5125,
    5127,  5128,  5129,  5136,  5137,  5138,  5150,  5154,  5156,  5160,
    5164,  5166,  5170,  5171,  5173,  5174,  5179,  5180,  5188,  5189,
    5195,  5196,  5203,  5205,  5209,  5212,  5217,  5218,  5221,  5222,
    5225,  5227,  5229,  5231,  5232,  5237,  5238,  5240,  5241,  5243,
    5245,  5249,  5251,  5253,  5256,  5259,  5262,  5264,  5266,  5268,
    5270,  5271,  5275,  5276,  5280,  5283,  5288,  5293,  5297,  5302,
    5307,  5309,  5313,  5317,  5324,  5327,  5330,  5331,  5338,  5339,
    5346,  5352,  5355,  5357,  5359,  5361,  5367,  5373,  5376,  5379,
    5381,  5386,  5390,  5393,  5397,  5400,  5403,  5405,  5409,  5414,
    5418,  5422,  5425,  5428,  5432,  5436,  5440,  5444,  5448,  5452,
    5456,  5460,  5462,  5464,  5466,  5468,  5470,  5471,  5473,  5474,
    5477,  5478,  5480,  5482,  5484,  5485,  5488,  5489,  5492,  5493,
    5496,  5499,  5500,  5505,  5506,  5511,  5513,  5515,  5517,  5519,
    5521,  5523,  5525,  5526,  5528,  5530,  5534,  5535,  5537,  5539,
    5540,  5545,  5546,  5547,  5553,  5555,  5556,  5560,  5564,  5566,
    5569,  5572,  5575,  5578,  5581,  5584,  5587,  5589,  5591,  5593,
    5595,  5597,  5599,  5600,  5602,  5603,  5607,  5611,  5613,  5614,
    5618,  5620,  5623,  5624,  5626,  5627,  5631,  5635,  5638,  5641,
    5645,  5646,  5648,  5650,  5653,  5654,  5655,  5656,  5657,  5680,
    5682,  5684,  5685,  5687,  5688,  5690,  5692,  5693,  5695,  5697,
    5698,  5701,  5704,  5706,  5710,  5715,  5719,  5723,  5724,  5727,
    5730,  5732,  5736,  5740,  5741,  5746,  5747,  5751,  5753,  5755,
    5756,  5760,  5763,  5767,  5769,  5771,  5774,  5775,  5778,  5782,
    5784,  5790,  5792,  5794,  5797,  5800,  5802,  5804,  5806,  5808,
    5810,  5813,  5816,  5818,  5820,  5822,  5824,  5826,  5828,  5830,
    5832,  5835,  5838,  5840,  5842,  5844,  5846,  5848,  5851,  5854,
    5857,  5859,  5861,  5865,  5871,  5873,  5875,  5877,  5879,  5881,
    5885,  5890,  5896,  5898,  5904,  5908,  5911,  5913,  5917,  5920,
    5923,  5928,  5930,  5932,  5934,  5936,  5938,  5940,  5942,  5944,
    5946,  5948,  5950,  5952,  5954,  5956,  5958,  5962,  5965,  5967,
    5969,  5971,  5973,  5975,  5977,  5979,  5981,  5983,  5985,  5987,
    5989,  5991,  5993,  5995,  5997,  5999,  6001,  6003,  6005,  6007,
    6009,  6011,  6013,  6015,  6017,  6019,  6021,  6023,  6025,  6027,
    6029,  6031,  6033,  6035,  6037,  6039,  6041,  6043,  6045,  6047,
    6049,  6051,  6053,  6055,  6057,  6059,  6061,  6063,  6065,  6067,
    6069,  6071,  6073,  6075,  6077,  6079,  6081,  6083,  6085,  6087,
    6089,  6091,  6093,  6095,  6097,  6099,  6101,  6103,  6105,  6107,
    6109,  6111,  6113,  6115,  6117,  6119,  6121,  6123,  6125,  6127,
    6129,  6131,  6133,  6135,  6137,  6139,  6141,  6143,  6145,  6147,
    6149,  6151,  6153,  6155,  6157,  6159,  6161,  6163,  6165,  6167,
    6169,  6171,  6173,  6175,  6177,  6179,  6181,  6183,  6185,  6187,
    6189,  6191,  6193,  6195,  6197,  6199,  6201,  6203,  6205,  6207,
    6209,  6211,  6213,  6215,  6217,  6219,  6221,  6223,  6225,  6227,
    6229,  6231,  6233,  6235,  6237,  6239,  6241,  6243,  6245,  6247,
    6249,  6251,  6253,  6255,  6257,  6259,  6261,  6263,  6265,  6267,
    6269,  6271,  6273,  6275,  6277,  6279,  6281,  6283,  6285,  6287,
    6289,  6291,  6293,  6295,  6297,  6299,  6301,  6303,  6305,  6307,
    6309,  6311,  6313,  6315,  6317,  6319,  6321,  6323,  6325,  6327,
    6329,  6331,  6333,  6335,  6337,  6339,  6341,  6343,  6345,  6347,
    6349,  6351,  6353,  6355,  6357,  6359,  6361,  6363,  6365,  6367,
    6369,  6371,  6373,  6375,  6377,  6379,  6381,  6383,  6385,  6387,
    6389,  6391,  6393,  6395,  6397,  6399,  6401,  6403,  6405,  6407,
    6409,  6411,  6413,  6415,  6417,  6419,  6421,  6423,  6425,  6427,
    6429,  6431,  6433,  6435,  6437,  6439,  6441,  6443,  6445,  6447,
    6449,  6451,  6453,  6455,  6457,  6459,  6461,  6463,  6465,  6467,
    6469,  6471,  6473,  6475,  6477,  6479,  6481,  6483,  6485,  6487,
    6489,  6491,  6493,  6495,  6497,  6499,  6501,  6503,  6505,  6507,
    6509,  6511,  6513,  6515,  6517,  6519,  6521,  6523,  6525,  6527,
    6529,  6531,  6533,  6535,  6537,  6539,  6541,  6543,  6545,  6547,
    6549,  6551,  6553,  6555,  6557,  6559,  6561,  6563,  6565,  6567,
    6569,  6571,  6573,  6575,  6577,  6579,  6581,  6583,  6585,  6587,
    6589,  6591,  6593,  6595,  6597,  6599,  6601,  6603,  6605,  6607,
    6609,  6611,  6613,  6615,  6617,  6619,  6621,  6623,  6625,  6627,
    6629,  6631,  6633,  6635,  6637,  6639,  6641,  6643,  6645,  6647,
    6649,  6651,  6653,  6654,  6658,  6659,  6663,  6664,  6668,  6669,
    6673,  6674,  6678,  6681,  6682,  6685,  6686,  6689,  6690,  6695,
    6696,  6700,  6702,  6704,  6706,  6708,  6709,  6711,  6713,  6715,
    6716,  6719,  6722,  6725,  6729,  6733,  6738,  6745,  6748,  6752,
    6756,  6760,  6766,  6768,  6772,  6776,  6778,  6780,  6784,  6788,
    6790,  6794,  6797,  6800,  6803,  6806,  6809,  6811,  6813,  6818,
    6823,  6825,  6827,  6829,  6831,  6833,  6834,  6839,  6841,  6843,
    6845,  6849,  6853,  6855,  6857,  6860,  6863,  6864,  6868,  6873,
    6877,  6878,  6886,  6888,  6891,  6893,  6895,  6897,  6899,  6901,
    6903,  6904,  6910,  6912,  6914,  6916,  6918,  6920,  6924,  6931,
    6938,  6945,  6953,  6959,  6963,  6972,  6981,  6990,  6997,  6998,
    7000,  7002,  7005,  7006,  7008,  7010,  7014,  7015,  7019,  7020,
    7024,  7025,  7029,  7030,  7034,  7036,  7038,  7040,  7042,  7044,
    7046,  7048,  7050,  7052,  7054,  7056,  7059,  7062,  7064,  7068,
    7071,  7074,  7077,  7080,  7083,  7086,  7089,  7092,  7094,  7096,
    7099,  7100,  7102,  7106,  7108,  7111,  7114,  7117,  7119,  7123,
    7127,  7129,  7131,  7135,  7137,  7141,  7146,  7152,  7157,  7164,
    7166,  7167,  7171,  7175,  7177,  7179,  7180,  7183,  7186,  7189,
    7192,  7193,  7196,  7197,  7201,  7204,  7206,  7209,  7212,  7215,
    7218,  7221,  7222,  7226,  7227,  7229,  7230,  7234,  7237,  7238,
    7240,  7243,  7244,  7246,  7251,  7256,  7262,  7265,  7269,  7270,
    7272,  7273,  7278,  7279,  7281,  7283,  7284,  7286,  7287,  7290,
    7293,  7295,  7296,  7298,  7300,  7303,  7307,  7310,  7311,  7318,
    7322,  7323,  7324,  7325,  7327,  7330,  7332,  7334,  7336,  7338,
    7340,  7342,  7344,  7346,  7348,  7351,  7354,  7358,  7360,  7362,
    7364,  7366,  7368,  7370,  7372,  7374,  7376,  7378,  7380,  7382,
    7384,  7385,  7389,  7391,  7394,  7396,  7399,  7403,  7407,  7411,
    7412,  7416,  7420,  7421,  7429,  7430,  7434,  7436,  7440,  7441,
    7445,  7448,  7453,  7454,  7458,  7463,  7468,  7469,  7470,  7471,
    7488,  7497,  7505,  7506,  7507,  7508,  7509,  7510,  7526,  7527,
    7528,  7529,  7530,  7543,  7548,  7553,  7557,  7562,  7566,  7569,
    7571,  7575,  7581,  7583,  7585,  7586,  7588,  7590,  7591,  7594,
    7595,  7596,  7600,  7601,  7604,  7610
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     636,     0,    -1,   151,    -1,    -1,   639,   637,   631,   638,
      -1,   639,   151,    -1,    -1,   151,    -1,   640,    -1,  1496,
      -1,  1006,    -1,  1068,    -1,  1070,    -1,   689,    -1,   652,
      -1,  1071,    -1,  1060,    -1,  1502,    -1,   659,    -1,   641,
      -1,  1313,    -1,  1345,    -1,  1261,    -1,  1263,    -1,   645,
      -1,  1352,    -1,   725,    -1,  1470,    -1,  1461,    -1,   650,
      -1,  1277,    -1,  1566,    -1,  1371,    -1,  1374,    -1,  1453,
      -1,  1076,    -1,  1084,    -1,   842,    -1,  1091,    -1,   643,
      -1,  1367,    -1,  1505,    -1,  1079,    -1,  1063,    -1,  1280,
      -1,  1361,    -1,   724,    -1,  1468,    -1,  1503,    -1,  1504,
      -1,  1103,    -1,  1426,    -1,   717,    -1,  1331,    -1,  1044,
      -1,  1046,    -1,  1324,    -1,  1567,    -1,  1459,    -1,  1305,
      -1,  1373,    -1,  1558,    -1,   642,   397,  1420,    -1,   116,
      -1,   139,    -1,   397,  1420,   187,   644,    -1,  1417,    -1,
     632,  1422,    -1,    -1,   165,  1420,   646,   647,    -1,    -1,
     583,   648,    -1,   648,   627,   649,    -1,   649,    -1,   632,
    1422,    -1,    -1,   206,   651,  1422,    -1,    -1,    56,   300,
     551,   653,   654,    -1,   655,    -1,   654,   627,   655,    -1,
     284,   155,  1416,    -1,   281,   155,  1416,    -1,   301,   155,
    1416,    -1,   287,   155,  1416,    -1,   288,   155,  1241,    -1,
     282,   155,  1241,    -1,   289,   155,  1241,    -1,   283,   155,
    1241,    -1,   298,   155,  1241,    -1,   292,   155,  1416,    -1,
     291,   155,  1416,    -1,   293,   155,  1416,    -1,   294,   155,
    1416,    -1,   297,   155,  1416,    -1,   299,   155,  1241,    -1,
     295,   155,  1416,    -1,   296,   155,  1416,    -1,   302,   155,
    1403,    -1,   220,   155,   625,   656,   626,    -1,   280,   155,
    1241,    -1,   658,    -1,    -1,   657,    -1,   656,   627,   657,
      -1,  1241,    -1,   285,   155,  1416,    -1,   286,   155,  1243,
      -1,   427,   155,  1416,    -1,   428,   155,  1241,    -1,    -1,
      94,   893,   534,   896,  1412,   660,   831,    -1,    -1,    94,
     984,   223,  1420,   988,   362,  1412,   661,   625,  1001,   626,
     989,    -1,    -1,    94,   985,   223,  1420,   987,   362,  1412,
     662,   625,  1001,   626,   990,    -1,    -1,    94,   986,   223,
    1420,   987,   362,  1412,   663,   625,  1001,   626,   991,    -1,
      -1,    94,   103,   896,  1420,   664,   890,    -1,    -1,    94,
     665,  1524,    -1,    94,   580,   682,  1486,    -1,    94,   271,
     200,   795,    -1,    94,   532,   792,    -1,    94,   666,    -1,
     473,  1422,   183,   106,   607,  1422,   367,   625,   667,   626,
      -1,   668,    -1,   667,   627,   668,    -1,   580,  1417,    -1,
     209,  1417,    -1,   103,  1417,    -1,   377,  1417,    -1,   386,
    1417,    -1,   489,  1417,    -1,   394,  1241,    -1,    -1,  1120,
     162,   896,   683,   670,   362,   462,   671,   676,   673,   678,
     138,   679,    -1,    -1,   163,  1124,  1213,   672,   674,   675,
      -1,    22,  1124,    -1,    -1,   147,    -1,   132,   362,   485,
      -1,   132,    -1,    -1,   510,  1124,    -1,    -1,   150,  1124,
      -1,    -1,   677,    -1,   362,    77,   398,    -1,   362,    77,
     350,   398,    -1,    -1,    73,  1417,    -1,    -1,   680,   681,
      -1,   741,    -1,   743,    -1,   739,    -1,   760,    -1,   778,
      -1,   780,    -1,   775,    -1,   745,    -1,   747,    -1,   748,
      -1,   749,    -1,   750,    -1,   752,    -1,    -1,  1420,   633,
    1420,    -1,  1420,    -1,    -1,   684,   686,    -1,    -1,   685,
     687,    -1,    73,  1417,    -1,   250,   506,    -1,   352,   506,
      -1,    87,   506,    -1,   413,   506,   106,    -1,   327,   506,
     106,    -1,   688,    -1,   686,    -1,   129,    -1,  1130,   129,
      -1,   506,   466,   122,    -1,   506,   466,   235,    -1,    -1,
      49,   683,   690,   691,    -1,    -1,   625,   692,   626,    -1,
      -1,   693,    -1,   693,   627,  1124,    -1,  1124,    -1,    -1,
     695,    -1,   695,   627,   697,    -1,   697,    -1,    -1,  1420,
     696,   944,    -1,    -1,   699,    -1,   699,   627,   700,    -1,
     700,    -1,   701,   696,  1420,   944,    -1,    -1,   236,    -1,
     376,    -1,   227,    -1,    -1,   702,   738,   631,    -1,   738,
     631,    -1,   703,   738,   631,    -1,    -1,   704,   705,   631,
      -1,    -1,   119,   736,   706,   944,   737,    -1,   119,  1420,
      80,   184,   713,    -1,    -1,   119,   710,   203,   184,   707,
     711,   738,    -1,   119,  1420,   100,   184,   708,    -1,    -1,
     709,  1103,    -1,   167,    -1,    89,    -1,   712,    -1,   711,
     627,   712,    -1,   716,    -1,  1241,    -1,   714,    -1,   496,
     715,  1418,    -1,    -1,   588,    -1,   713,    -1,  1420,    -1,
     497,    -1,  1130,   186,    -1,   495,    -1,   482,   718,   720,
      -1,  1420,    -1,   714,    -1,    -1,   718,    -1,    -1,   475,
     721,    -1,   723,   155,   722,    -1,   721,   627,   723,   155,
     722,    -1,  1402,    -1,  1151,    -1,  1408,    -1,    63,    -1,
     519,    -1,    84,    -1,    86,    -1,    85,    -1,    54,    -1,
     463,    -1,   536,    -1,    72,    -1,   101,    -1,   318,    -1,
     335,    -1,   442,   719,   720,    -1,   196,   726,   130,   727,
      -1,    -1,    98,    -1,   728,    -1,    80,   732,   733,    -1,
     729,    -1,   728,   627,   729,    -1,   730,   155,   731,    -1,
    1420,    -1,   632,  1422,    -1,   357,    -1,   459,    -1,   722,
      -1,   734,    -1,   733,   627,   734,    -1,   730,   155,   735,
      -1,    63,    -1,   519,    -1,    84,    -1,    86,    -1,    85,
      -1,    54,    -1,   463,    -1,   536,    -1,    72,    -1,   101,
      -1,   318,    -1,   335,    -1,   447,    -1,  1420,    -1,   736,
     627,  1420,    -1,    -1,   120,  1124,    -1,   741,    -1,   743,
      -1,   739,    -1,   760,    -1,   778,    -1,   780,    -1,   775,
      -1,   745,    -1,   747,    -1,   748,    -1,   749,    -1,   750,
      -1,   752,    -1,    -1,   218,   740,   755,   149,   218,    -1,
      -1,   742,   640,    -1,    -1,   449,   744,  1124,    -1,    -1,
     746,   784,    -1,   255,  1421,    -1,   244,  1421,    -1,   365,
    1420,    -1,    -1,   175,   753,  1420,   233,   751,   754,    -1,
      65,  1420,    -1,    -1,   346,   187,    -1,   187,    -1,  1420,
      -1,   754,   627,  1420,    -1,    -1,    -1,    -1,   756,  1124,
     543,   757,   703,   758,   759,    -1,    -1,   146,   755,    -1,
     145,   703,    -1,   761,    -1,   764,    -1,    -1,    -1,    52,
     762,  1124,   763,   766,   774,   149,    52,    -1,    -1,    52,
     765,   767,   774,   149,    52,    -1,   768,    -1,   766,   768,
      -1,   771,    -1,   767,   771,    -1,    -1,    -1,   600,   769,
    1124,   770,   543,   703,    -1,    -1,    -1,   600,   772,  1124,
     773,   543,   703,    -1,    -1,   145,   703,    -1,    -1,  1421,
     634,   776,   784,   777,    -1,    -1,  1421,    -1,    -1,  1421,
     634,   779,   782,   777,    -1,    -1,   781,   782,    -1,    -1,
      30,   783,   704,   702,   149,    -1,   277,   703,   149,   277,
      -1,    -1,    -1,   602,   785,  1124,   138,   786,   703,   149,
     602,    -1,    -1,   437,   703,   576,   787,  1124,   149,   437,
      -1,    29,    -1,     8,    -1,   229,    -1,   577,    -1,   125,
      -1,   817,   819,    -1,   817,    56,   814,   798,    -1,   817,
       6,   814,   793,   802,    -1,    -1,   582,   271,   200,  1420,
      -1,   817,     6,   814,   805,    -1,   817,   139,   814,   805,
      -1,   818,   797,   808,    -1,   818,   797,   811,    -1,     6,
     815,    -1,     6,   816,    -1,    -1,   799,   800,    -1,   801,
      -1,   800,   801,    -1,   800,   627,   801,    -1,   820,    -1,
     821,    -1,   822,    -1,    -1,   803,    -1,   804,    -1,   803,
     804,    -1,   803,   627,   804,    -1,   820,    -1,   821,    -1,
     822,    -1,   823,    -1,   826,    -1,   828,    -1,   829,    -1,
     827,    -1,    -1,   806,    -1,   807,    -1,   806,   807,    -1,
     806,   627,   807,    -1,   820,    -1,   821,    -1,   822,    -1,
     828,    -1,   829,    -1,    -1,   809,    -1,   810,    -1,   809,
     810,    -1,   809,   627,   810,    -1,   820,    -1,   824,    -1,
     825,    -1,   826,    -1,   828,    -1,   829,    -1,   827,    -1,
      -1,   812,    -1,   813,    -1,   812,   813,    -1,   812,   627,
     813,    -1,   820,    -1,   828,    -1,   829,    -1,   105,  1417,
      -1,   566,  1417,    -1,   420,  1417,    -1,  1420,    -1,  1420,
      -1,   414,    -1,   416,    -1,   350,     4,    -1,   225,  1297,
     830,    -1,    24,  1297,   830,    -1,   307,  1297,   830,    -1,
     170,  1297,   830,    -1,   567,  1297,   830,    -1,   421,  1297,
     830,    -1,   347,  1297,  1242,    -1,    73,  1297,  1417,    -1,
    1338,   153,  1297,   904,    -1,   596,    -1,   353,    -1,  1242,
      -1,   215,    -1,   625,   832,    -1,   897,   837,   834,    -1,
     260,  1412,    -1,   625,   260,  1412,   626,    -1,   910,   626,
     897,   837,   834,    -1,    -1,   837,   886,   626,   833,  1509,
      -1,    -1,    -1,  1382,   889,   886,   835,  1506,    -1,    -1,
    1382,   889,   625,   886,   626,   836,  1509,    -1,   838,    -1,
      -1,   839,    -1,    -1,   383,   841,   840,   844,    -1,    -1,
      -1,   383,   843,   844,    -1,    46,   845,   854,   855,   862,
      -1,   847,   248,   625,   848,   626,    -1,    -1,   847,   204,
     846,   852,    -1,   412,   852,    -1,   412,   851,    -1,   265,
     852,    -1,   265,   851,    -1,    -1,   262,    -1,    -1,   849,
      -1,   850,    -1,   849,   627,   850,    -1,  1420,    -1,    70,
     625,   848,   626,    -1,   625,  1120,   860,  1121,   626,    -1,
     625,  1120,   860,  1121,   626,    -1,    -1,   384,  1242,    -1,
      -1,    -1,   523,    46,   847,   204,   853,   856,   861,    -1,
      -1,   523,    46,   847,   248,   625,   858,   626,   857,   861,
      -1,   859,    -1,   858,   627,   859,    -1,  1420,    -1,  1127,
      -1,    -1,   522,  1242,    -1,    -1,   625,   863,   626,    -1,
     864,    -1,   863,   627,   864,    -1,    -1,   383,   865,   866,
     867,   883,   878,    -1,  1420,    -1,    -1,    -1,   587,   257,
     542,   868,   870,    -1,    -1,   587,   236,   869,   871,    -1,
     311,    -1,   873,    -1,   873,    -1,   625,   872,   626,    -1,
     873,    -1,   872,   627,   873,    -1,    -1,    -1,   625,   874,
     876,   875,   626,    -1,   877,    -1,   876,   627,   877,    -1,
     311,    -1,  1127,    -1,    -1,   625,   879,   626,    -1,   880,
      -1,   879,   627,   880,    -1,    -1,   523,   881,   882,   883,
      -1,  1422,    -1,    -1,   884,    -1,   884,   885,    -1,   885,
      -1,   532,  1297,  1422,    -1,  1338,   153,  1297,   904,    -1,
     347,  1297,  1242,    -1,   306,  1297,  1244,    -1,   324,  1297,
    1244,    -1,   106,   131,  1297,  1417,    -1,   223,   131,  1297,
    1417,    -1,    73,  1297,  1417,    -1,    -1,    -1,   467,   887,
    1114,  1118,   888,   908,    -1,    -1,    18,    -1,    -1,   891,
      -1,   892,    -1,   891,   892,    -1,   903,    -1,   902,    -1,
      -1,   894,    -1,   895,    -1,   895,   894,    -1,   537,    -1,
      -1,   218,  1130,   166,    -1,    -1,   899,    -1,   900,    -1,
     900,   898,    -1,   900,    -1,   900,   899,    -1,   900,   627,
     899,    -1,   153,  1297,   904,    -1,   306,  1297,  1243,    -1,
     324,  1297,  1243,    -1,    26,  1297,  1241,    -1,   386,  1297,
    1417,    -1,    73,  1297,  1417,    -1,    25,  1297,  1243,    -1,
     378,  1297,  1241,    -1,   378,  1297,   120,    -1,   387,  1297,
    1241,    -1,   387,  1297,   120,    -1,    60,  1297,  1241,    -1,
     535,  1297,  1241,    -1,   124,  1297,  1241,    -1,   457,  1297,
     906,    -1,    -1,   571,  1297,   901,   625,  1360,   626,    -1,
     902,    -1,   903,    -1,   230,  1297,   907,    -1,   106,   131,
    1297,  1417,    -1,   223,   131,  1297,  1417,    -1,   532,  1420,
      -1,   516,   134,    -1,   516,   316,    -1,    81,  1297,  1417,
      -1,   247,  1297,  1241,    -1,   956,   947,  1297,   949,    -1,
     956,    68,  1297,   955,    -1,  1422,    -1,  1422,    -1,   120,
      -1,   178,    -1,   143,    -1,    78,    -1,   422,    -1,    76,
      -1,   352,    -1,   177,    -1,   251,    -1,  1236,    -1,  1113,
    1117,    -1,   518,    -1,   417,    -1,   118,    -1,   234,    -1,
     911,    -1,   912,    -1,   911,   627,   912,    -1,   913,    -1,
     914,    -1,   919,   915,    -1,   919,   973,    -1,   979,  1003,
     988,   625,  1001,   626,   989,    -1,   985,   982,  1003,   987,
     625,  1001,   626,   990,    -1,   986,   982,  1003,   987,   625,
    1001,   626,   991,    -1,   917,   980,  1003,   988,   625,  1001,
     626,   989,    -1,   917,   183,   248,  1003,   625,  1001,   626,
     973,    -1,   917,   916,    -1,    -1,   916,    -1,    61,   625,
    1124,   626,    -1,    -1,   918,    -1,    83,  1003,    -1,    -1,
    1411,   920,   921,   941,    -1,   929,   939,   935,    -1,   930,
     940,   935,    -1,   180,   931,   935,    -1,    38,    -1,    38,
     938,    -1,    43,    -1,    42,    -1,   925,   938,   959,    -1,
     925,   959,    -1,   926,   938,   960,    -1,   926,   960,    -1,
      33,   938,    -1,    33,    -1,   927,   938,   959,    -1,   928,
     938,   960,    -1,   589,   938,    -1,   614,   939,   935,    -1,
     110,    -1,   547,   933,    -1,   544,   933,    -1,   107,   933,
      -1,   548,    -1,    40,   939,    -1,   924,    -1,   312,    -1,
     273,    -1,   276,   589,    -1,   276,   927,   959,    -1,   550,
     959,    -1,   541,   939,   959,    -1,   314,   959,    -1,   274,
     959,    -1,   118,   931,   935,    -1,   358,   931,   935,    -1,
     178,   931,   935,    -1,    -1,   154,   922,   625,  1005,   626,
     959,    -1,    -1,   475,   923,   625,  1005,   626,   959,    -1,
     276,   959,    -1,   471,    -1,   194,    -1,   193,    -1,   392,
      -1,   332,    -1,   264,    -1,   331,    -1,   393,    -1,   333,
      -1,    59,    -1,   341,    -1,   338,    59,    -1,   925,   593,
      -1,   590,    -1,   338,   590,    -1,   359,    -1,   341,   590,
      -1,   338,    59,   593,    -1,   341,   593,    -1,   234,    -1,
     549,    -1,   487,    -1,   313,    -1,    32,    -1,   417,    -1,
     137,    -1,   137,   396,    -1,    -1,   938,    -1,   932,    -1,
     625,   356,   627,   356,   626,    -1,    -1,   625,   356,   626,
      -1,    -1,   625,   626,    -1,   625,   356,   626,    -1,    -1,
     936,    -1,   936,   937,    -1,   937,    -1,   483,    -1,   575,
      -1,   615,    -1,   625,   275,   626,    -1,   625,   562,   626,
      -1,   625,   117,   626,    -1,   625,   356,   626,    -1,    -1,
     938,    -1,    -1,   932,    -1,    -1,   942,    -1,   942,   943,
      -1,   943,    -1,   355,    -1,  1130,   355,    -1,   120,   946,
      -1,   362,   577,   945,    -1,    25,    -1,   471,   120,   588,
      -1,   972,   248,    -1,   572,    -1,   572,   248,    -1,    73,
    1417,    -1,    68,   953,    -1,   921,   954,    -1,   351,   934,
      -1,   945,    -1,  1401,    -1,    59,   475,    -1,    58,    -1,
    1422,    -1,    33,    -1,   948,    -1,   120,    -1,    -1,   947,
     949,    -1,  1422,    -1,    33,    -1,   951,    -1,   120,    -1,
    1422,    -1,    -1,    68,   955,    -1,   953,    -1,   120,    -1,
      -1,   120,    -1,    20,    -1,    33,    20,    -1,    20,    33,
      -1,   569,    -1,   569,    33,    -1,    33,   569,    -1,    -1,
     957,    -1,   958,    -1,    47,    -1,   947,   948,   960,    -1,
      33,    -1,    33,   947,   948,    -1,    -1,    33,    -1,    -1,
     625,  1242,   962,   626,    -1,    19,    -1,   126,    -1,   450,
      -1,    -1,   963,    -1,   963,   964,    -1,   964,    -1,  1242,
      -1,   966,   965,    -1,   967,    -1,   968,   627,   967,    -1,
     966,   618,   966,    -1,   968,    -1,   969,    -1,    -1,   258,
     970,    -1,    -1,   400,    -1,   423,  1412,   974,   976,   977,
      -1,    -1,   625,   975,   626,    -1,   975,   627,  1420,    -1,
    1420,    -1,    -1,   303,   188,    -1,   303,   382,    -1,   303,
     484,    -1,    -1,   362,   577,   978,    -1,   362,   125,   978,
      -1,   362,   577,   978,   362,   125,   978,    -1,   362,   125,
     978,   362,   577,   978,    -1,   445,    -1,    50,    -1,   475,
     355,    -1,   352,     5,    -1,   475,   120,    -1,   981,    -1,
     400,   248,    -1,   572,   982,    -1,   248,    -1,   223,    -1,
      -1,   981,    -1,   246,    -1,   223,    -1,   222,    -1,    -1,
     572,    -1,   189,    -1,   493,    -1,    -1,   987,    -1,   987,
     995,    -1,    -1,   992,    -1,    -1,   994,    -1,    -1,   993,
      -1,   997,    -1,   992,   997,    -1,   998,    -1,   993,   998,
      -1,   999,    -1,   994,   999,    -1,   583,  1000,    -1,   560,
    1000,    -1,   247,  1297,  1241,    -1,    73,  1417,    -1,   996,
      -1,   995,    -1,   996,    -1,   996,    -1,   603,   381,  1415,
      -1,    45,    -1,   460,    -1,   204,    -1,  1001,   627,  1002,
    1234,    -1,  1002,  1234,    -1,  1420,    -1,  1420,   625,   356,
     626,    -1,    -1,  1411,    -1,    -1,   633,  1420,    -1,  1399,
      -1,  1005,   627,  1399,    -1,    -1,    13,  1040,   534,  1412,
    1007,  1018,    -1,    -1,    13,   103,  1017,  1008,   891,    -1,
      13,   103,  1420,   578,   106,   131,   337,    -1,    -1,    13,
     402,   683,  1009,   684,    -1,    -1,    13,   190,   683,  1010,
     684,    -1,    -1,    13,  1532,  1527,  1011,  1534,    -1,    -1,
      13,  1527,  1012,  1534,    -1,    -1,    13,  1527,   162,   683,
    1013,  1014,  1015,   673,   678,  1016,    -1,    13,   532,   794,
      -1,    13,   271,   200,   796,    -1,    13,   532,   791,    -1,
      13,   532,   790,    -1,    13,   473,  1422,   367,   625,   667,
     626,    -1,    -1,   362,   462,   671,    -1,   677,    -1,   362,
     462,   671,   677,    -1,    -1,   433,   551,   683,    -1,    -1,
     138,   679,    -1,    -1,  1420,    -1,    -1,   133,   532,    -1,
     221,   532,    -1,  1033,   838,    -1,  1033,  1022,    -1,  1022,
      -1,   839,    -1,  1024,    -1,   139,   383,  1031,    -1,   418,
     383,  1078,  1023,    -1,    -1,   366,   383,  1078,  1023,  1019,
    1078,    -1,    14,   383,  1078,  1023,    -1,    -1,    61,   383,
    1023,  1020,  1073,    -1,    -1,   435,   383,  1078,  1023,  1021,
    1065,    -1,    66,   383,  1078,  1242,    -1,   558,   383,  1023,
      -1,  1027,    -1,   164,   383,  1032,   603,   534,  1412,   841,
      -1,   432,   385,   841,    -1,    12,    -1,  1031,    -1,    -1,
       6,   383,  1078,  1025,  1026,    -1,    -1,   625,   863,   626,
      -1,   384,  1242,    -1,    -1,   434,   383,  1078,  1028,  1029,
      -1,    -1,    -1,  1031,  1030,   233,   625,   863,   626,    -1,
    1032,    -1,  1031,   627,  1032,    -1,  1420,    -1,  1035,    -1,
    1033,   627,  1035,    -1,     6,  1039,    -1,  1034,   913,  1042,
      -1,     6,   914,    -1,  1034,   625,   910,   626,    -1,    -1,
      56,  1039,  1411,  1036,   919,  1042,    -1,    -1,    -1,   328,
    1039,  1411,  1037,   921,   941,  1038,  1042,    -1,   139,  1039,
    1411,  1041,    -1,   139,   183,   248,  1003,    -1,   139,   400,
     248,    -1,   139,   981,  1411,    -1,   132,   246,    -1,   147,
     246,    -1,    13,  1039,  1411,   475,   120,  1401,    -1,    13,
    1039,  1411,   139,   120,    -1,   433,  1043,  1412,    -1,    91,
     551,   947,   949,   954,    -1,   898,    -1,   182,    -1,  1227,
      -1,    11,  1297,   120,    -1,    11,  1297,  1420,    -1,   270,
    1297,   120,    -1,   270,  1297,  1420,    -1,    -1,    71,    -1,
      -1,   219,    -1,    -1,   445,    -1,    50,    -1,    -1,     8,
    1420,    -1,   177,    -1,    -1,   551,    -1,   155,    -1,    18,
      -1,    -1,   511,   485,  1055,  1045,  1058,  1050,    -1,   515,
     485,  1055,    -1,   511,   553,  1047,    -1,    -1,  1048,    -1,
    1049,    -1,  1048,   627,  1049,    -1,   603,    82,   488,    -1,
     415,   364,    -1,   415,   608,    -1,  1051,  1052,  1053,  1054,
      -1,    -1,   580,   155,  1417,    -1,    -1,   386,   155,  1417,
      -1,    -1,   121,   155,  1417,    -1,    -1,   389,   155,  1417,
      -1,    -1,  1056,    -1,  1057,    -1,  1056,   627,  1057,    -1,
     507,    -1,   429,    -1,    -1,   576,  1059,    -1,   658,    -1,
    1059,   627,   658,    -1,   499,   155,  1417,    -1,   498,   155,
    1417,    -1,    -1,    60,  1455,  1061,  1267,  1062,    -1,    -1,
     411,    -1,   169,    -1,    -1,   435,  1078,  1455,  1064,  1267,
    1065,    -1,    -1,  1066,    -1,  1067,    -1,  1067,  1066,    -1,
     411,    -1,   169,    -1,   581,    -1,    -1,    14,  1078,  1455,
    1069,  1267,    -1,    34,  1417,    -1,    -1,    61,  1455,  1072,
    1267,  1073,    -1,    -1,  1074,    -1,  1075,    -1,  1075,  1074,
      -1,   411,    -1,   173,    -1,   315,    -1,   169,    -1,    57,
      -1,   184,   578,    -1,    -1,   366,  1078,  1455,  1077,  1267,
      -1,    -1,   354,    -1,   267,    -1,    -1,   433,  1455,  1080,
    1082,    -1,   433,   580,   682,  1081,    -1,  1423,   551,  1423,
      -1,  1081,   627,  1423,   551,  1423,    -1,  1083,    -1,  1082,
     627,  1083,    -1,  1412,   551,  1412,    -1,    -1,    48,   223,
    1085,  1086,   236,  1090,    -1,  1087,    -1,  1089,    -1,  1088,
      -1,  1087,   627,  1088,    -1,  1412,  1099,    -1,  1412,  1097,
    1099,    -1,  1420,    -1,   120,    -1,    -1,   266,   223,   233,
      48,  1092,  1093,    -1,  1096,    -1,  1094,    -1,  1095,    -1,
    1094,   627,  1095,    -1,  1412,  1099,  1102,    -1,  1412,  1097,
    1099,  1102,    -1,    -1,   383,   841,  1098,   625,  1023,   626,
      -1,    -1,  1100,  1101,    -1,    -1,   981,   625,  1209,   626,
      -1,    -1,   219,   254,    -1,  1104,    -1,   467,  1107,    -1,
     625,  1105,   626,  1509,    -1,   467,  1109,    -1,   625,  1105,
     626,    -1,   467,  1188,    -1,   625,  1106,   626,    -1,    -1,
    1109,  1108,  1506,    -1,    -1,    -1,  1110,  1114,  1118,  1111,
    1112,  1117,    -1,  1230,  1236,    -1,  1256,    -1,  1113,    -1,
    1256,  1113,    -1,  1113,  1256,    -1,   187,  1168,  1219,  1224,
    1221,  1230,  1236,  1247,    -1,   187,   140,  1219,  1236,    -1,
      -1,  1115,    -1,  1115,  1116,    -1,  1116,    -1,  1523,    -1,
     504,    -1,   502,    -1,    -1,   184,   577,    -1,   270,   236,
     477,   326,    -1,  1118,   627,  1119,    -1,  1119,    -1,   620,
      -1,  1120,  1406,  1121,    -1,  1120,  1124,  1121,  1122,    -1,
      -1,    -1,    -1,    18,  1420,    -1,    18,  1417,    -1,  1420,
      -1,  1417,    -1,    -1,   625,   626,    -1,  1124,  1128,  1124,
      -1,  1124,   612,  1124,    -1,  1124,  1129,  1124,    -1,   350,
    1124,    -1,  1125,   241,   557,    -1,  1125,   241,  1130,   557,
      -1,  1125,   241,   172,    -1,  1125,   241,  1130,   172,    -1,
    1125,   241,   573,    -1,  1125,   241,  1130,   573,    -1,  1125,
      -1,  1125,   241,   355,    -1,  1125,   241,  1130,   355,    -1,
    1125,   156,  1126,    -1,  1125,  1132,  1126,    -1,  1125,  1132,
    1133,   625,  1518,   626,    -1,  1126,    -1,  1127,   236,   625,
    1518,   626,    -1,  1127,  1130,   236,   625,  1518,   626,    -1,
    1127,   236,   625,  1124,   626,    -1,  1127,   236,   625,  1124,
     627,  1161,   626,    -1,  1127,  1130,   236,   625,  1124,   626,
      -1,  1127,  1130,   236,   625,  1124,   627,  1161,   626,    -1,
    1127,    31,  1127,    16,  1126,    -1,  1127,  1130,    31,  1127,
      16,  1126,    -1,  1127,   491,   260,  1127,    -1,  1127,   260,
    1134,  1223,    -1,  1127,  1130,   260,  1134,  1223,    -1,  1127,
     424,  1127,    -1,  1127,  1130,   424,  1127,    -1,  1127,    -1,
    1127,   616,  1127,    -1,  1127,   617,  1127,    -1,  1127,   478,
    1127,    -1,  1127,   479,  1127,    -1,  1127,   619,  1127,    -1,
    1127,   618,  1127,    -1,  1127,   619,   232,  1124,  1213,    -1,
    1127,   618,   232,  1124,  1213,    -1,  1127,   620,  1127,    -1,
    1127,   621,  1127,    -1,  1127,   622,  1127,    -1,  1127,   136,
    1127,    -1,  1127,   329,  1127,    -1,  1127,   623,  1127,    -1,
    1134,    -1,   373,    -1,   370,    -1,    16,    -1,    15,    -1,
     350,    -1,   349,    -1,   628,    -1,   349,    -1,   155,    -1,
     191,    -1,   202,    -1,   252,    -1,   279,    -1,   343,    -1,
      12,    -1,    17,    -1,  1408,    -1,  1135,    -1,  1136,    -1,
    1139,    -1,  1137,    -1,  1134,    68,  1422,    -1,  1402,    -1,
    1400,    -1,  1151,    -1,  1147,    -1,  1134,   372,  1134,    -1,
     619,  1134,    -1,   618,  1134,    -1,   624,  1134,    -1,  1131,
    1134,    -1,   625,  1518,   626,    -1,   625,  1124,   626,    -1,
     625,  1124,   627,  1161,   626,    -1,   458,   625,  1124,   627,
    1161,   626,    -1,   166,   625,  1518,   626,    -1,   629,  1420,
    1124,   630,    -1,   303,  1162,     9,   625,  1127,  1141,   626,
      -1,    33,  1134,    -1,    53,   625,  1124,    18,  1159,   626,
      -1,    52,  1164,  1166,  1165,   149,    -1,    91,   625,  1124,
     627,  1159,   626,    -1,    91,   625,  1124,   583,   948,   626,
      -1,   120,   625,  1408,   626,    -1,   587,   625,  1409,   626,
      -1,   232,  1124,  1213,   619,  1124,    -1,    59,   625,  1161,
     626,    -1,    59,   625,  1161,   583,   948,   626,    -1,    99,
    1123,    -1,   110,   625,  1124,   626,    -1,   115,   625,  1124,
     626,    -1,   214,   625,  1124,   626,    -1,   229,   625,  1124,
     627,  1124,   627,  1124,   627,  1124,   626,    -1,   232,   625,
    1124,   627,  1124,   626,    -1,   232,   625,  1124,   627,  1124,
     627,  1161,   626,    -1,   256,   625,  1124,   627,  1124,   626,
      -1,   323,   625,  1124,   626,    -1,   330,   625,  1124,   626,
      -1,   452,   625,  1124,   627,  1124,   626,    -1,   465,   625,
    1124,   626,    -1,   547,   625,  1124,   626,    -1,   544,   625,
    1124,   626,    -1,   544,   625,  1124,   627,  1124,   626,    -1,
     556,   625,  1124,   626,    -1,   556,   625,   253,  1124,   187,
    1124,   626,    -1,   556,   625,   552,  1124,   187,  1124,   626,
      -1,   556,   625,    44,  1124,   187,  1124,   626,    -1,   556,
     625,   253,   187,  1124,   626,    -1,   556,   625,   552,   187,
    1124,   626,    -1,   556,   625,    44,   187,  1124,   626,    -1,
     556,   625,  1124,   187,  1124,   626,    -1,   580,   625,   626,
      -1,   614,   625,  1124,   626,    -1,     7,   625,  1124,   627,
    1124,   626,    -1,     7,   625,  1124,   627,   232,  1124,  1213,
     626,    -1,    97,  1123,    -1,   102,   934,    -1,   108,   625,
    1124,   627,   232,  1124,  1213,   626,    -1,   109,   625,  1124,
     627,   232,  1124,  1213,   626,    -1,   171,   625,  1213,   187,
    1124,   626,    -1,   195,   625,  1215,   627,  1124,   626,    -1,
     945,    -1,   395,   625,  1127,   236,  1124,   626,    -1,   520,
     625,  1124,   627,  1124,   626,    -1,   520,   625,  1124,   627,
     232,  1124,  1213,   626,    -1,   524,   625,  1124,   627,  1124,
     627,  1124,   626,    -1,   524,   625,  1124,   627,  1124,   626,
      -1,   524,   625,  1124,   187,  1124,   184,  1124,   626,    -1,
     524,   625,  1124,   187,  1124,   626,    -1,   530,   934,    -1,
     545,   625,  1214,   627,  1124,   627,  1124,   626,    -1,   546,
     625,  1214,   627,  1124,   627,  1124,   626,    -1,   584,  1123,
      -1,   586,   934,    -1,   585,   934,    -1,    20,   625,  1124,
     626,    -1,    58,   625,  1124,   626,    -1,    66,   625,  1161,
     626,    -1,    69,   625,  1124,   626,    -1,   103,   625,   626,
      -1,   218,   625,  1124,   627,  1124,   627,  1124,   626,    -1,
     185,   625,  1124,   627,  1124,   626,    -1,   185,   625,  1124,
     627,  1124,   627,  1124,   626,    -1,   319,   625,  1124,   626,
      -1,   329,   625,  1124,   627,  1124,   626,    -1,   361,   625,
    1124,   626,    -1,   386,   625,  1124,   626,    -1,   409,   625,
    1124,   626,    -1,   437,   625,  1124,   627,  1124,   626,    -1,
     438,   625,  1124,   627,  1124,   627,  1124,   626,    -1,   450,
     625,  1124,   626,    -1,   459,   625,   626,    -1,   558,   625,
    1124,   627,  1124,   626,    -1,   598,   625,  1124,   626,    -1,
     598,   625,  1124,   627,  1124,   626,    -1,   599,   625,  1124,
     971,   626,    -1,   599,   625,  1124,    18,    59,   961,   971,
     626,    -1,   599,   625,  1124,    18,    33,   961,   626,    -1,
     599,   625,  1124,   627,  1241,   627,  1241,   627,  1241,   626,
      -1,  1138,    -1,    87,   625,  1124,   627,  1124,   626,    -1,
     193,   625,  1161,   626,    -1,   264,   625,  1161,   626,    -1,
     331,   625,  1161,   626,    -1,   332,   625,  1161,   626,    -1,
     333,   625,  1161,   626,    -1,   392,   625,  1124,   627,  1124,
     626,    -1,   393,   625,  1161,   626,    -1,    -1,  1415,   625,
    1140,  1144,   626,    -1,  1420,   633,  1420,   625,  1160,   626,
      -1,  1142,  1143,    -1,   236,    42,   326,    -1,    -1,   236,
     339,   250,   326,    -1,    -1,   603,   410,   168,    -1,    -1,
    1145,    -1,  1146,    -1,  1145,   627,  1146,    -1,  1120,  1124,
    1121,  1122,    -1,    27,   625,  1157,   626,    -1,    27,   625,
     135,  1157,   626,    -1,    36,   625,  1157,   626,    -1,    37,
     625,  1157,   626,    -1,    39,   625,  1157,   626,    -1,    92,
     625,  1218,   620,   626,    -1,    92,   625,  1157,   626,    -1,
      -1,    -1,    92,   625,   135,  1148,  1161,  1149,   626,    -1,
     325,   625,  1157,   626,    -1,   325,   625,   135,  1157,   626,
      -1,   308,   625,  1157,   626,    -1,   308,   625,   135,  1157,
     626,    -1,   514,   625,  1157,   626,    -1,   592,   625,  1157,
     626,    -1,   513,   625,  1157,   626,    -1,   594,   625,  1157,
     626,    -1,   525,   625,  1157,   626,    -1,   525,   625,   135,
    1157,   626,    -1,    -1,   201,   625,  1154,  1150,  1161,  1156,
    1155,   626,    -1,    -1,   632,  1152,  1153,    -1,  1422,   476,
    1124,    -1,  1422,    -1,   632,  1442,  1422,  1004,    -1,    -1,
     135,    -1,    -1,   469,  1399,    -1,    -1,  1231,    -1,    -1,
    1218,  1158,  1124,    -1,    33,   939,    -1,    59,   939,   959,
      -1,   341,   939,    -1,   483,    -1,   483,   234,    -1,   575,
      -1,   575,   234,    -1,   110,    -1,   547,   933,    -1,   107,
     933,    -1,   118,   931,    -1,    -1,  1161,    -1,  1124,    -1,
    1161,   627,  1124,    -1,  1163,    -1,   625,  1163,   626,    -1,
    1408,    -1,  1163,   627,  1408,    -1,    -1,  1124,    -1,    -1,
     145,  1124,    -1,   600,  1124,   543,  1124,    -1,  1166,   600,
    1124,   543,  1124,    -1,  1182,    -1,  1171,    -1,  1170,    -1,
    1167,    -1,   629,  1420,  1167,   630,    -1,  1169,    -1,  1170,
     627,  1169,    -1,  1167,  1179,  1167,    -1,  1167,   517,  1182,
      -1,    -1,  1167,  1179,  1167,   362,  1172,  1124,    -1,    -1,
    1167,   517,  1182,   362,  1173,  1124,    -1,    -1,  1167,  1179,
    1167,   583,  1174,   625,  1212,   626,    -1,  1167,   339,   245,
    1182,    -1,    -1,  1167,   256,  1198,   245,  1167,   362,  1175,
    1124,    -1,    -1,  1167,   256,  1198,   245,  1182,  1176,   583,
     625,  1212,   626,    -1,  1167,   339,   256,  1198,   245,  1182,
      -1,    -1,  1167,   452,  1198,   245,  1167,   362,  1177,  1124,
      -1,    -1,  1167,   452,  1198,   245,  1182,  1178,   583,   625,
    1212,   626,    -1,  1167,   339,   452,  1198,   245,  1182,    -1,
     245,    -1,   226,   245,    -1,    95,   245,    -1,    -1,  1181,
      -1,   383,   625,  1212,   626,   841,    -1,    -1,  1183,  1412,
    1180,  1217,  1207,    -1,  1197,  1196,  1193,    -1,   625,  1196,
    1184,   626,  1217,    -1,  1191,  1510,    -1,    -1,    -1,  1184,
     571,  1514,  1185,  1515,  1186,  1510,    -1,  1188,    -1,    -1,
      -1,  1189,  1521,  1118,  1190,   908,  1117,    -1,    -1,  1196,
    1192,  1170,    -1,    -1,    -1,  1194,  1114,  1118,  1195,   908,
      -1,    -1,   467,    -1,    -1,   374,    -1,    -1,   184,   245,
      -1,   184,   371,    46,    -1,   184,   200,    46,    -1,   182,
      -1,   219,    -1,    -1,  1200,   981,  1199,  1202,   625,  1211,
     626,    -1,    -1,   582,   981,  1199,  1203,   625,  1209,   626,
      -1,  1201,    -1,  1204,  1201,    -1,    -1,    -1,  1206,  1204,
      -1,    -1,  1208,  1205,    -1,    -1,  1211,    -1,  1420,    -1,
     400,    -1,  1210,    -1,  1211,   627,  1210,    -1,  1420,    -1,
    1212,   627,  1420,    -1,  1214,    -1,   111,    -1,   112,    -1,
     113,    -1,   114,    -1,   211,    -1,   212,    -1,   213,    -1,
     321,    -1,   322,    -1,   464,    -1,   613,    -1,   115,    -1,
     598,    -1,   214,    -1,   323,    -1,   330,    -1,   409,    -1,
     465,    -1,   319,    -1,   614,    -1,   110,    -1,   547,    -1,
     544,    -1,   107,    -1,    -1,    18,    -1,   155,    -1,    -1,
    1216,  1420,    -1,    -1,    12,    -1,    -1,    -1,   601,  1220,
    1124,    -1,    -1,    -1,   205,  1222,  1124,    -1,   160,  1134,
      -1,    -1,    -1,   200,    46,  1225,  1226,    -1,  1225,   627,
    1407,  1234,    -1,  1407,  1234,    -1,    -1,   604,    -1,   605,
      -1,   371,    46,  1228,    -1,  1228,   627,  1229,    -1,  1229,
      -1,  1409,  1234,    -1,    -1,  1231,    -1,    -1,   371,    46,
    1232,  1233,    -1,  1233,   627,  1407,  1234,    -1,  1407,  1234,
      -1,    -1,    19,    -1,   126,    -1,    -1,  1237,    -1,    -1,
    1237,    -1,   261,  1238,    -1,  1239,    -1,  1239,   627,  1239,
      -1,  1239,   360,  1239,    -1,  1420,    -1,  1400,    -1,   562,
      -1,   275,    -1,   356,    -1,    -1,   261,  1239,    -1,   356,
      -1,   207,    -1,   275,    -1,   562,    -1,   117,    -1,   179,
      -1,   356,    -1,   207,    -1,   275,    -1,   562,    -1,  1245,
      -1,   356,    -1,   562,    -1,   275,    -1,   117,    -1,   179,
      -1,   356,    -1,   562,    -1,   275,    -1,  1245,    -1,  1246,
      -1,   117,    -1,   179,    -1,    -1,    -1,   402,  1420,  1248,
     625,  1249,   626,    -1,    -1,  1250,    -1,  1250,   627,  1251,
      -1,  1251,    -1,  1120,  1124,  1121,    -1,    -1,  1253,  1254,
      -1,  1254,   627,  1255,    -1,  1255,    -1,   632,  1422,    -1,
    1422,    -1,    -1,   233,  1257,  1258,    -1,    -1,    -1,   375,
    1419,  1259,   950,  1260,  1383,  1386,    -1,   141,  1419,    -1,
    1252,    -1,    -1,   138,  1262,  1161,    -1,    -1,   139,  1273,
    1455,  1272,  1264,  1267,  1041,    -1,    -1,   139,   223,  1420,
     362,  1412,  1265,    -1,   139,   103,  1272,  1420,    -1,   139,
     190,  1272,  1420,   633,  1420,    -1,   139,   190,  1272,  1420,
      -1,   139,   402,  1272,   683,    -1,   139,   580,   682,  1485,
      -1,    -1,   139,   595,  1272,  1266,  1267,  1041,    -1,   139,
     162,  1272,   683,    -1,   139,   555,  1272,   683,    -1,   139,
     532,   817,  1274,    -1,   139,   271,   200,   818,  1274,    -1,
     139,   473,  1272,  1422,    -1,  1268,    -1,  1267,   627,  1268,
      -1,  1412,    -1,  1412,  1180,    -1,  1271,    -1,  1270,   627,
    1271,    -1,  1413,    -1,    -1,   218,   166,    -1,    -1,   537,
      -1,    -1,  1275,    -1,  1276,    -1,  1275,  1276,    -1,  1274,
     627,  1276,    -1,   828,    -1,   829,    -1,    -1,    -1,   229,
    1278,  1283,  1040,  1285,  1279,  1287,  1303,    -1,    -1,    -1,
     438,  1281,  1284,  1285,  1282,  1287,    -1,    -1,   278,    -1,
     123,    -1,   208,    -1,  1312,    -1,   123,    -1,   233,  1286,
      -1,  1286,    -1,  1269,    -1,  1290,    -1,   625,   626,  1290,
      -1,   625,  1289,   626,  1290,    -1,    -1,   475,  1288,  1294,
      -1,  1289,   627,  1405,    -1,  1405,    -1,   587,  1293,    -1,
     588,  1293,    -1,    -1,   886,  1291,  1506,    -1,    -1,   625,
     886,   626,  1292,  1509,    -1,  1293,   627,  1298,    -1,  1298,
      -1,  1294,   627,  1295,    -1,  1295,    -1,  1409,  1296,  1302,
      -1,   155,    -1,   476,    -1,    -1,  1296,    -1,    -1,   625,
    1299,  1300,   626,    -1,    -1,  1301,    -1,  1301,   627,  1302,
      -1,  1302,    -1,  1124,    -1,   120,    -1,    -1,    -1,   362,
     142,  1304,   248,   577,  1310,    -1,    -1,    -1,   577,  1306,
    1312,  1040,  1168,   475,  1308,  1307,  1219,  1230,  1240,    -1,
    1308,   627,  1309,    -1,  1309,    -1,  1409,  1296,  1302,    -1,
    1310,   627,  1311,    -1,  1311,    -1,  1409,  1296,  1302,    -1,
      -1,   278,    -1,    -1,   125,  1314,  1322,  1315,    -1,    -1,
     187,  1412,  1180,  1316,  1219,  1230,  1240,    -1,    -1,  1319,
    1317,   187,  1168,  1219,    -1,    -1,   187,  1270,  1318,   583,
    1168,  1219,    -1,  1320,    -1,  1319,   627,  1320,    -1,  1420,
    1321,    -1,  1420,   633,  1420,  1321,    -1,    -1,   633,   620,
      -1,    -1,  1323,  1322,    -1,   411,    -1,   278,    -1,   219,
      -1,    -1,   558,  1326,  1325,  1268,    -1,    -1,   534,    -1,
      -1,  1328,    -1,  1329,    -1,  1328,   627,  1329,    -1,    93,
      -1,   316,    -1,    41,   239,    -1,    88,   529,    -1,   379,
     174,    -1,   240,    -1,   528,    -1,   492,    -1,    12,    -1,
      -1,   184,   410,   356,    -1,    -1,   480,  1332,  1333,    -1,
     104,  1344,    -1,  1340,   531,  1339,  1344,    -1,  1340,   554,
    1339,  1344,    -1,   161,  1339,  1344,    -1,   534,   512,  1339,
    1344,    -1,   365,   531,  1339,  1344,    -1,   391,    -1,   153,
     905,  1336,    -1,   153,    12,  1336,    -1,  1340,    70,  1341,
    1412,  1339,  1344,    -1,  1337,   272,    -1,   485,   210,    -1,
      -1,    34,   161,  1342,  1343,  1334,  1235,    -1,    -1,   426,
     161,  1342,  1343,  1335,  1235,    -1,   983,  1341,  1412,  1339,
    1219,    -1,  1338,   152,    -1,    23,    -1,    90,    -1,   401,
      -1,    92,   625,   620,   626,   597,    -1,    92,   625,   620,
     626,   158,    -1,   597,  1235,    -1,   158,  1235,    -1,   406,
      -1,   405,  1327,  1330,  1235,    -1,  1441,   512,  1344,    -1,
    1340,   404,    -1,  1441,   591,  1344,    -1,   947,  1344,    -1,
      69,  1344,    -1,   199,    -1,   199,   184,  1423,    -1,    94,
     103,   896,  1420,    -1,    94,   534,  1412,    -1,    94,   595,
    1412,    -1,   300,   512,    -1,   485,   512,    -1,    94,   402,
     683,    -1,    94,   190,   683,    -1,    94,   555,   683,    -1,
     402,   512,  1344,    -1,   190,   512,  1344,    -1,   402,    67,
     683,    -1,   190,    67,   683,    -1,    94,   162,   683,    -1,
     512,    -1,   334,    -1,   272,    -1,   300,    -1,    33,    -1,
      -1,   516,    -1,    -1,  1341,  1420,    -1,    -1,   188,    -1,
     187,    -1,   236,    -1,    -1,   236,  1417,    -1,    -1,   187,
    1243,    -1,    -1,   260,  1417,    -1,   601,  1124,    -1,    -1,
    1349,  1412,  1346,  1351,    -1,    -1,  1349,  1350,  1347,  1348,
      -1,  1103,    -1,  1277,    -1,  1280,    -1,  1305,    -1,  1313,
      -1,   126,    -1,   127,    -1,    -1,   169,    -1,   384,    -1,
     185,   155,  1422,    -1,    -1,  1399,    -1,  1420,    -1,    -1,
     181,  1078,  1353,  1354,    -1,    -1,    -1,  1455,  1355,  1360,
    1356,  1357,    -1,  1358,    -1,    -1,   603,   415,   270,    -1,
    1358,   627,  1359,    -1,  1359,    -1,   157,   272,    -1,   153,
     272,    -1,   192,   272,    -1,   486,   272,    -1,    33,   272,
      -1,   425,   272,    -1,   410,    48,    -1,   210,    -1,   401,
      -1,   272,    -1,   512,    -1,   128,    -1,   443,    -1,    -1,
    1267,    -1,    -1,   441,  1362,  1363,    -1,  1363,   627,  1364,
      -1,  1364,    -1,    -1,   485,  1365,  1366,    -1,   300,    -1,
     410,    48,    -1,    -1,    12,    -1,    -1,   408,  1368,  1369,
      -1,  1337,   272,  1370,    -1,   551,  1417,    -1,    29,  1124,
      -1,   249,  1372,  1124,    -1,    -1,    81,    -1,   410,    -1,
     582,  1420,    -1,    -1,    -1,    -1,    -1,   266,  1379,  1375,
    1381,  1380,   224,  1419,  1376,  1382,   233,   534,  1412,  1180,
    1377,   950,  1378,  1389,  1383,  1386,  1390,  1392,  1395,    -1,
     106,    -1,   611,    -1,    -1,   267,    -1,    -1,    79,    -1,
     278,    -1,    -1,   438,    -1,   219,    -1,    -1,    70,  1384,
      -1,  1384,  1385,    -1,  1385,    -1,   539,    46,  1399,    -1,
     369,   148,    46,  1399,    -1,   148,    46,  1399,    -1,   159,
      46,  1399,    -1,    -1,   263,  1387,    -1,  1387,  1388,    -1,
    1388,    -1,   539,    46,  1399,    -1,   509,    46,  1399,    -1,
      -1,   456,   216,    46,  1399,    -1,    -1,   219,   356,  1391,
      -1,   263,    -1,   456,    -1,    -1,   625,  1393,   626,    -1,
     625,   626,    -1,  1393,   627,  1394,    -1,  1394,    -1,  1409,
      -1,   632,  1422,    -1,    -1,   475,  1396,    -1,  1396,   627,
    1397,    -1,  1397,    -1,  1409,  1296,  1120,  1302,  1121,    -1,
     540,    -1,   340,    -1,   565,   540,    -1,  1398,  1418,    -1,
    1418,    -1,   207,    -1,    35,    -1,   380,    -1,  1402,    -1,
     619,  1403,    -1,   618,  1403,    -1,  1398,    -1,  1403,    -1,
    1404,    -1,   355,    -1,   172,    -1,   557,    -1,   207,    -1,
      35,    -1,   565,   207,    -1,   565,    35,    -1,   356,    -1,
     275,    -1,   562,    -1,   117,    -1,   179,    -1,   110,   540,
      -1,   547,   540,    -1,   544,   540,    -1,  1409,    -1,  1406,
      -1,  1420,   633,   620,    -1,  1420,   633,  1420,   633,   620,
      -1,  1124,    -1,  1420,    -1,  1410,    -1,  1420,    -1,  1410,
      -1,  1420,   633,  1420,    -1,   633,  1420,   633,  1420,    -1,
    1420,   633,  1420,   633,  1420,    -1,  1420,    -1,  1420,   633,
    1420,   633,  1420,    -1,  1420,   633,  1420,    -1,   633,  1420,
      -1,  1420,    -1,  1420,   633,  1420,    -1,   633,  1420,    -1,
    1420,  1321,    -1,  1420,   633,  1420,  1321,    -1,  1420,    -1,
     215,    -1,   217,    -1,  1417,    -1,   540,    -1,   540,    -1,
     540,    -1,  1415,    -1,  1424,    -1,  1415,    -1,  1425,    -1,
    1420,    -1,  1417,    -1,   259,    -1,  1422,    -1,  1422,   632,
    1422,    -1,    99,  1123,    -1,  1425,    -1,    20,    -1,    28,
      -1,    30,    -1,    47,    -1,    48,    -1,    58,    -1,    60,
      -1,    65,    -1,    73,    -1,    75,    -1,    87,    -1,   116,
      -1,   138,    -1,   149,    -1,   165,    -1,   181,    -1,   185,
      -1,   203,    -1,   206,    -1,   209,    -1,   231,    -1,   250,
      -1,   352,    -1,   365,    -1,   367,    -1,   377,    -1,   381,
      -1,   394,    -1,   397,    -1,   432,    -1,   435,    -1,   441,
      -1,   444,    -1,   453,    -1,   461,    -1,   466,    -1,   473,
      -1,   483,    -1,   489,    -1,   485,    -1,   490,    -1,   511,
      -1,   515,    -1,   558,    -1,   569,    -1,   570,    -1,   607,
      -1,   610,    -1,   578,    -1,     5,    -1,     7,    -1,     8,
      -1,     9,    -1,    10,    -1,    11,    -1,    17,    -1,    22,
      -1,    23,    -1,    25,    -1,    24,    -1,    26,    -1,    27,
      -1,    34,    -1,    38,    -1,    41,    -1,    43,    -1,    42,
      -1,    45,    -1,    51,    -1,    54,    -1,    55,    -1,    57,
      -1,    62,    -1,    64,    -1,    63,    -1,    66,    -1,    67,
      -1,    69,    -1,    72,    -1,    70,    -1,    74,    -1,    76,
      -1,    77,    -1,    78,    -1,    79,    -1,    81,    -1,    82,
      -1,    84,    -1,    86,    -1,    85,    -1,    88,    -1,    90,
      -1,    93,    -1,    96,    -1,    98,    -1,   101,    -1,   106,
      -1,   105,    -1,   107,    -1,   110,    -1,   115,    -1,   121,
      -1,   122,    -1,   124,    -1,   128,    -1,   130,    -1,   131,
      -1,   132,    -1,   133,    -1,   134,    -1,   141,    -1,   142,
      -1,   143,    -1,   150,    -1,   154,    -1,   153,    -1,   152,
      -1,   157,    -1,   158,    -1,   160,    -1,   162,    -1,   161,
      -1,   163,    -1,   164,    -1,   168,    -1,   169,    -1,   170,
      -1,   174,    -1,   173,    -1,   186,    -1,   147,    -1,   188,
      -1,   176,    -1,   177,    -1,   178,    -1,   192,    -1,   194,
      -1,   193,    -1,   195,    -1,   199,    -1,   197,    -1,   204,
      -1,   210,    -1,   214,    -1,   216,    -1,   220,    -1,   235,
      -1,   221,    -1,   222,    -1,   225,    -1,   239,    -1,   240,
      -1,   242,    -1,   243,    -1,   230,    -1,   247,    -1,   251,
      -1,   254,    -1,   257,    -1,   258,    -1,   264,    -1,   265,
      -1,   267,    -1,   269,    -1,   271,    -1,   272,    -1,   306,
      -1,   300,    -1,   302,    -1,   284,    -1,   288,    -1,   285,
      -1,   286,    -1,   301,    -1,   287,    -1,   290,    -1,   282,
      -1,   289,    -1,   283,    -1,   298,    -1,   292,    -1,   291,
      -1,   293,    -1,   294,    -1,   295,    -1,   296,    -1,   297,
      -1,   280,    -1,   304,    -1,   305,    -1,   307,    -1,   309,
      -1,   310,    -1,   315,    -1,   316,    -1,   317,    -1,   318,
      -1,   319,    -1,   320,    -1,   323,    -1,   324,    -1,   328,
      -1,   326,    -1,   330,    -1,   331,    -1,   332,    -1,   333,
      -1,   334,    -1,   335,    -1,   337,    -1,   336,    -1,   338,
      -1,   341,    -1,   342,    -1,   346,    -1,   345,    -1,   353,
      -1,   347,    -1,   348,    -1,   357,    -1,   359,    -1,   360,
      -1,   361,    -1,   363,    -1,   364,    -1,   378,    -1,   379,
      -1,   382,    -1,   385,    -1,   384,    -1,   386,    -1,   387,
      -1,   388,    -1,   389,    -1,   390,    -1,   391,    -1,   392,
      -1,   393,    -1,   398,    -1,   399,    -1,   401,    -1,   403,
      -1,   404,    -1,   405,    -1,   406,    -1,   407,    -1,   409,
      -1,   410,    -1,   411,    -1,   414,    -1,   418,    -1,   419,
      -1,   421,    -1,   420,    -1,   422,    -1,   425,    -1,   426,
      -1,   427,    -1,   428,    -1,   429,    -1,   431,    -1,   434,
      -1,   436,    -1,   439,    -1,   443,    -1,   446,    -1,   447,
      -1,   448,    -1,   450,    -1,   454,    -1,   455,    -1,   456,
      -1,   459,    -1,   457,    -1,   458,    -1,   460,    -1,   462,
      -1,   463,    -1,   465,    -1,   471,    -1,   470,    -1,   472,
      -1,   484,    -1,   477,    -1,   481,    -1,   486,    -1,   488,
      -1,   491,    -1,   492,    -1,   502,    -1,   501,    -1,   504,
      -1,   507,    -1,   510,    -1,   512,    -1,   516,    -1,   518,
      -1,   519,    -1,   520,    -1,   521,    -1,   523,    -1,   522,
      -1,   526,    -1,   527,    -1,   528,    -1,   529,    -1,   536,
      -1,   531,    -1,   535,    -1,   532,    -1,   537,    -1,   538,
      -1,   541,    -1,   542,    -1,   553,    -1,   554,    -1,   544,
      -1,   545,    -1,   546,    -1,   547,    -1,   559,    -1,   560,
      -1,   561,    -1,   190,    -1,   563,    -1,   564,    -1,   567,
      -1,   566,    -1,   573,    -1,   576,    -1,   580,    -1,   581,
      -1,   591,    -1,   595,    -1,   588,    -1,   597,    -1,   596,
      -1,   598,    -1,   606,    -1,   599,    -1,   609,    -1,   611,
      -1,   614,    -1,    -1,   475,  1427,  1428,    -1,    -1,  1444,
    1429,  1434,    -1,    -1,   553,  1430,  1446,    -1,    -1,  1440,
    1431,  1432,    -1,    -1,  1443,  1433,  1434,    -1,   553,  1446,
      -1,    -1,   627,  1435,    -1,    -1,  1436,  1438,    -1,    -1,
    1435,   627,  1437,  1438,    -1,    -1,  1440,  1439,  1443,    -1,
    1444,    -1,   197,    -1,   267,    -1,   472,    -1,    -1,   197,
      -1,   267,    -1,   472,    -1,    -1,   197,   633,    -1,   267,
     633,    -1,   472,   633,    -1,  1445,  1296,  1452,    -1,  1445,
    1296,  1452,    -1,   632,  1422,  1296,  1124,    -1,   632,   632,
    1442,  1445,  1296,  1452,    -1,   947,   952,    -1,   336,  1296,
    1124,    -1,   336,   949,   954,    -1,   386,  1296,  1451,    -1,
     386,   184,  1423,  1296,  1451,    -1,  1420,    -1,  1420,   633,
    1420,    -1,   120,   633,  1420,    -1,  1447,    -1,  1448,    -1,
    1447,   627,  1448,    -1,  1448,   627,  1447,    -1,  1449,    -1,
     242,   258,  1450,    -1,   415,   364,    -1,   415,   608,    -1,
     415,   563,    -1,   415,    74,    -1,   436,   415,    -1,   470,
      -1,   540,    -1,   386,   625,   540,   626,    -1,   361,   625,
     540,   626,    -1,  1124,    -1,   120,    -1,   362,    -1,    12,
      -1,    33,    -1,    -1,   270,  1455,  1454,  1456,    -1,   534,
      -1,   531,    -1,  1457,    -1,  1456,   627,  1457,    -1,  1412,
    1217,  1458,    -1,   415,    -1,   608,    -1,   278,   608,    -1,
     415,   267,    -1,    -1,   574,  1460,  1455,    -1,   203,  1412,
     365,  1217,    -1,   203,  1414,    65,    -1,    -1,   203,  1414,
     415,  1462,  1463,  1219,  1236,    -1,  1464,    -1,  1420,  1465,
      -1,   177,    -1,   346,    -1,   177,    -1,   346,    -1,   399,
      -1,   251,    -1,    -1,  1467,  1466,   625,  1301,   626,    -1,
     155,    -1,   191,    -1,   252,    -1,   202,    -1,   279,    -1,
     451,   682,  1469,    -1,  1473,   362,  1472,  1484,   187,  1486,
      -1,  1473,   362,   190,  1484,   187,  1486,    -1,  1473,   362,
     402,  1484,   187,  1486,    -1,    12,  1474,   627,   198,   368,
     187,  1486,    -1,   407,   362,  1423,   187,  1486,    -1,   198,
     682,  1471,    -1,  1473,   362,  1472,  1484,   551,  1486,  1491,
    1492,    -1,  1473,   362,   190,  1484,   551,  1486,  1491,  1492,
      -1,  1473,   362,   402,  1484,   551,  1486,  1491,  1492,    -1,
     407,   362,  1423,   551,  1486,  1493,    -1,    -1,   534,    -1,
    1475,    -1,    12,  1474,    -1,    -1,   401,    -1,  1476,    -1,
    1475,   627,  1476,    -1,    -1,   467,  1477,  1488,    -1,    -1,
     229,  1478,  1488,    -1,    -1,   577,  1479,  1488,    -1,    -1,
     423,  1480,  1488,    -1,   125,    -1,   579,    -1,   223,    -1,
      13,    -1,    94,    -1,   139,    -1,   165,    -1,   431,    -1,
     481,    -1,   403,    -1,   176,    -1,   198,   368,    -1,   480,
     104,    -1,   526,    -1,    94,   537,   531,    -1,   270,   531,
      -1,   439,   485,    -1,   439,    64,    -1,    94,   595,    -1,
     480,   595,    -1,    94,   455,    -1,    13,   455,    -1,    94,
     580,    -1,   162,    -1,   555,    -1,    94,   532,    -1,    -1,
      16,    -1,  1483,  1481,  1482,    -1,  1483,    -1,   521,   540,
      -1,   243,   540,    -1,    62,   540,    -1,   620,    -1,  1420,
     633,   620,    -1,   620,   633,   620,    -1,  1412,    -1,  1423,
      -1,  1485,   627,  1423,    -1,  1487,    -1,  1486,   627,  1487,
      -1,  1423,   216,    46,   540,    -1,  1423,   216,    46,   386,
     540,    -1,  1423,   216,   603,  1422,    -1,  1423,   216,   603,
    1422,    18,  1417,    -1,  1423,    -1,    -1,   625,  1489,   626,
      -1,  1489,   627,  1490,    -1,  1490,    -1,  1420,    -1,    -1,
     440,  1482,    -1,   440,   508,    -1,   440,   609,    -1,   440,
     348,    -1,    -1,   603,  1494,    -1,    -1,   603,   198,   368,
      -1,  1494,  1495,    -1,  1495,    -1,   198,   368,    -1,   305,
    1241,    -1,   309,  1241,    -1,   304,  1241,    -1,   310,  1241,
      -1,    -1,    30,  1497,  1498,    -1,    -1,   606,    -1,    -1,
      16,   352,    55,    -1,    16,    55,    -1,    -1,   430,    -1,
     352,   430,    -1,    -1,   461,    -1,    75,  1498,  1499,  1500,
      -1,   453,  1498,  1499,  1500,    -1,   453,  1498,   551,  1501,
    1420,    -1,   461,  1420,    -1,   430,   461,  1420,    -1,    -1,
    1507,    -1,    -1,   571,  1514,  1508,  1104,    -1,    -1,  1507,
      -1,  1511,    -1,    -1,  1511,    -1,    -1,  1512,  1513,    -1,
    1231,  1235,    -1,  1237,    -1,    -1,   135,    -1,    12,    -1,
     467,  1187,    -1,   625,  1106,   626,    -1,  1515,  1510,    -1,
      -1,  1516,   571,  1514,  1517,  1515,  1510,    -1,  1519,  1516,
    1520,    -1,    -1,    -1,    -1,  1522,    -1,  1522,  1523,    -1,
    1523,    -1,   517,    -1,   208,    -1,   135,    -1,   505,    -1,
     500,    -1,   501,    -1,   503,    -1,    12,    -1,  1529,  1525,
      -1,  1528,  1526,    -1,  1530,  1527,  1534,    -1,  1534,    -1,
    1542,    -1,  1553,    -1,  1547,    -1,   669,    -1,  1534,    -1,
    1542,    -1,  1553,    -1,  1547,    -1,  1546,    -1,   669,    -1,
    1528,    -1,  1529,    -1,    -1,   122,   155,  1423,    -1,  1531,
      -1,  1531,  1532,    -1,  1532,    -1,   373,   438,    -1,    11,
     155,   564,    -1,    11,   155,   317,    -1,    11,   155,   538,
      -1,    -1,   506,   466,   122,    -1,   506,   466,   235,    -1,
      -1,  1533,   595,  1412,  1535,  1536,    18,  1538,    -1,    -1,
     625,  1537,   626,    -1,  1420,    -1,  1537,   627,  1420,    -1,
      -1,  1539,  1540,  1541,    -1,   467,  1107,    -1,   625,  1105,
     626,  1509,    -1,    -1,   603,    61,   368,    -1,   603,    51,
      61,   368,    -1,   603,   267,    61,   368,    -1,    -1,    -1,
      -1,   555,  1120,   683,   788,   789,   362,  1120,  1543,  1412,
     184,  1120,  1544,   144,   458,  1545,   738,    -1,    10,  1120,
     190,  1420,   448,   909,   490,  1417,    -1,  1120,   190,  1420,
     448,   909,   490,  1417,    -1,    -1,    -1,    -1,    -1,    -1,
    1120,   190,   683,   625,  1548,   694,   626,  1549,   448,  1550,
     944,  1551,   685,  1552,   738,    -1,    -1,    -1,    -1,    -1,
     402,  1120,   683,  1554,   625,  1555,   698,   626,  1556,   685,
    1557,   738,    -1,   610,  1560,  1559,  1561,    -1,   610,   149,
    1559,  1563,    -1,   610,   397,  1559,    -1,   610,    75,  1559,
    1562,    -1,   610,   453,  1559,    -1,   610,   419,    -1,  1399,
      -1,  1399,   627,  1399,    -1,  1399,   627,  1399,   627,  1241,
      -1,    30,    -1,   511,    -1,    -1,   245,    -1,   446,    -1,
      -1,   363,   388,    -1,    -1,    -1,   527,  1564,  1565,    -1,
      -1,   184,   320,    -1,   231,   390,  1420,   490,  1417,    -1,
     570,   390,  1420,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1923,  1923,  1936,  1935,  1960,  1967,  1969,  1973,  1974,
    1979,  1980,  1981,  1982,  1983,  1984,  1985,  1986,  1987,  1988,
    1989,  1990,  1991,  1992,  1993,  1994,  1995,  1996,  1997,  1998,
    1999,  2000,  2001,  2002,  2003,  2004,  2005,  2006,  2007,  2008,
    2009,  2010,  2011,  2012,  2013,  2014,  2015,  2016,  2017,  2018,
    2019,  2020,  2021,  2022,  2023,  2024,  2025,  2026,  2027,  2028,
    2029,  2030,  2034,  2044,  2045,  2049,  2059,  2066,  2077,  2076,
    2087,  2089,  2093,  2094,  2098,  2111,  2110,  2130,  2129,  2147,
    2148,  2152,  2156,  2160,  2164,  2168,  2172,  2176,  2181,  2191,
    2196,  2200,  2204,  2208,  2212,  2216,  2221,  2225,  2230,  2261,
    2266,  2273,  2276,  2278,  2279,  2283,  2297,  2301,  2317,  2321,
    2334,  2333,  2378,  2377,  2389,  2387,  2400,  2398,  2410,  2409,
    2422,  2421,  2429,  2433,  2437,  2441,  2448,  2461,  2462,  2466,
    2470,  2474,  2478,  2482,  2486,  2490,  2498,  2497,  2529,  2528,
    2535,  2542,  2543,  2549,  2555,  2565,  2571,  2577,  2579,  2586,
    2587,  2591,  2597,  2606,  2607,  2615,  2615,  2673,  2674,  2675,
    2676,  2677,  2678,  2679,  2680,  2681,  2682,  2683,  2684,  2685,
    2690,  2704,  2720,  2739,  2740,  2744,  2745,  2750,  2752,  2754,
    2756,  2758,  2760,  2762,  2768,  2769,  2770,  2774,  2778,  2786,
    2785,  2798,  2800,  2803,  2805,  2809,  2813,  2820,  2822,  2826,
    2827,  2832,  2851,  2881,  2883,  2887,  2888,  2892,  2921,  2922,
    2923,  2924,  2928,  2929,  2933,  2934,  2939,  2942,  2969,  2968,
    3036,  3053,  3052,  3114,  3140,  3140,  3163,  3164,  3169,  3171,
    3176,  3199,  3210,  3214,  3236,  3237,  3241,  3245,  3258,  3264,
    3270,  3279,  3294,  3320,  3326,  3327,  3333,  3336,  3340,  3348,
    3368,  3370,  3388,  3394,  3396,  3398,  3400,  3402,  3404,  3406,
    3408,  3410,  3412,  3414,  3416,  3421,  3437,  3453,  3454,  3459,
    3465,  3474,  3480,  3489,  3497,  3505,  3514,  3516,  3525,  3530,
    3536,  3545,  3553,  3555,  3557,  3559,  3561,  3563,  3565,  3567,
    3569,  3571,  3573,  3575,  3577,  3582,  3602,  3625,  3626,  3630,
    3631,  3632,  3633,  3634,  3635,  3636,  3637,  3638,  3639,  3640,
    3641,  3642,  3647,  3646,  3653,  3653,  3712,  3711,  3742,  3742,
    3763,  3818,  3864,  3887,  3886,  3910,  3931,  3933,  3934,  3938,
    3956,  3977,  3979,  3995,  3977,  4019,  4021,  4022,  4026,  4027,
    4032,  4039,  4031,  4060,  4059,  4074,  4075,  4079,  4080,  4085,
    4089,  4084,  4114,  4118,  4113,  4140,  4151,  4156,  4155,  4193,
    4194,  4199,  4198,  4232,  4232,  4251,  4250,  4296,  4311,  4313,
    4310,  4346,  4345,  4371,  4373,  4378,  4380,  4382,  4399,  4404,
    4410,  4417,  4418,  4426,  4432,  4441,  4447,  4453,  4454,  4458,
    4458,  4463,  4464,  4465,  4469,  4470,  4471,  4474,  4476,  4480,
    4481,  4482,  4486,  4487,  4488,  4489,  4490,  4491,  4492,  4493,
    4496,  4498,  4502,  4503,  4504,  4508,  4509,  4510,  4511,  4512,
    4515,  4517,  4521,  4522,  4523,  4527,  4528,  4529,  4530,  4531,
    4532,  4533,  4536,  4538,  4542,  4543,  4544,  4548,  4549,  4550,
    4555,  4563,  4571,  4579,  4591,  4603,  4608,  4613,  4621,  4629,
    4637,  4645,  4653,  4661,  4669,  4682,  4695,  4709,  4714,  4727,
    4728,  4779,  4780,  4783,  4798,  4816,  4821,  4819,  4826,  4828,
    4827,  4831,  4830,  4836,  4873,  4874,  4879,  4878,  4897,  4916,
    4915,  4932,  4936,  4944,  4943,  4946,  4948,  4950,  4952,  4957,
    4958,  4963,  4964,  4968,  4969,  4973,  4992,  5002,  5013,  5022,
    5023,  5039,  5041,  5040,  5045,  5043,  5054,  5055,  5059,  5077,
    5093,  5094,  5110,  5125,  5147,  5148,  5153,  5152,  5176,  5186,
    5208,  5207,  5225,  5224,  5244,  5266,  5270,  5299,  5311,  5312,
    5317,  5328,  5316,  5353,  5354,  5358,  5371,  5392,  5405,  5431,
    5432,  5437,  5436,  5473,  5478,  5479,  5483,  5484,  5488,  5490,
    5496,  5498,  5500,  5502,  5504,  5506,  5516,  5531,  5515,  5545,
    5546,  5550,  5551,  5555,  5556,  5560,  5561,  5565,  5566,  5570,
    5571,  5575,  5579,  5580,  5583,  5585,  5589,  5590,  5594,  5595,
    5596,  5600,  5605,  5610,  5615,  5620,  5625,  5630,  5635,  5650,
    5656,  5671,  5677,  5682,  5687,  5692,  5698,  5697,  5723,  5724,
    5725,  5730,  5735,  5740,  5742,  5744,  5746,  5752,  5760,  5778,
    5795,  5821,  5839,  5840,  5841,  5842,  5843,  5844,  5848,  5849,
    5850,  5854,  5855,  5859,  5860,  5861,  5862,  5867,  5874,  5875,
    5879,  5880,  5884,  5885,  5892,  5897,  5903,  5909,  5915,  5933,
    5939,  5941,  5945,  5949,  5950,  5954,  5959,  5958,  5981,  5982,
    5983,  5984,  5989,  5993,  5998,  6003,  6007,  6012,  6017,  6023,
    6028,  6034,  6038,  6043,  6048,  6050,  6052,  6054,  6067,  6069,
    6074,  6079,  6091,  6096,  6101,  6106,  6108,  6110,  6112,  6114,
    6116,  6118,  6120,  6123,  6122,  6127,  6126,  6130,  6132,  6141,
    6142,  6143,  6148,  6149,  6150,  6151,  6152,  6156,  6160,  6161,
    6165,  6166,  6170,  6171,  6172,  6173,  6174,  6178,  6179,  6180,
    6181,  6182,  6186,  6191,  6193,  6199,  6200,  6202,  6207,  6217,
    6218,  6222,  6223,  6224,  6232,  6233,  6237,  6238,  6242,  6243,
    6244,  6248,  6249,  6250,  6251,  6254,  6255,  6259,  6260,  6264,
    6265,  6269,  6270,  6274,  6275,  6276,  6277,  6278,  6279,  6285,
    6291,  6297,  6303,  6304,  6321,  6342,  6350,  6351,  6356,  6357,
    6361,  6369,  6373,  6374,  6378,  6379,  6383,  6392,  6396,  6397,
    6401,  6409,  6410,  6414,  6415,  6419,  6420,  6425,  6426,  6430,
    6437,  6446,  6451,  6459,  6460,  6461,  6462,  6463,  6464,  6469,
    6477,  6478,  6483,  6482,  6495,  6496,  6500,  6503,  6504,  6505,
    6506,  6510,  6518,  6525,  6526,  6530,  6540,  6541,  6545,  6546,
    6549,  6551,  6555,  6567,  6568,  6572,  6579,  6592,  6593,  6595,
    6597,  6603,  6608,  6614,  6620,  6627,  6637,  6638,  6639,  6640,
    6641,  6645,  6649,  6650,  6654,  6655,  6659,  6660,  6664,  6665,
    6666,  6670,  6671,  6675,  6679,  6692,  6704,  6705,  6709,  6710,
    6714,  6715,  6719,  6720,  6724,  6725,  6729,  6730,  6734,  6735,
    6739,  6740,  6744,  6746,  6750,  6751,  6755,  6759,  6760,  6773,
    6774,  6775,  6779,  6780,  6784,  6790,  6804,  6805,  6809,  6810,
    6814,  6815,  6823,  6822,  6861,  6860,  6874,  6886,  6885,  6904,
    6903,  6922,  6921,  6940,  6934,  6954,  6953,  6986,  6991,  6996,
    7001,  7006,  7016,  7017,  7018,  7019,  7023,  7024,  7036,  7037,
    7041,  7042,  7045,  7047,  7055,  7063,  7065,  7067,  7068,  7076,
    7077,  7081,  7090,  7088,  7102,  7116,  7115,  7129,  7127,  7141,
    7148,  7159,  7160,  7188,  7195,  7199,  7204,  7203,  7219,  7221,
    7226,  7234,  7233,  7249,  7253,  7252,  7264,  7265,  7269,  7284,
    7285,  7289,  7298,  7302,  7307,  7313,  7312,  7323,  7332,  7322,
    7347,  7356,  7365,  7374,  7383,  7389,  7395,  7404,  7413,  7432,
    7453,  7463,  7467,  7472,  7477,  7485,  7490,  7501,  7502,  7506,
    7507,  7511,  7512,  7513,  7517,  7518,  7523,  7531,  7532,  7533,
    7534,  7539,  7538,  7565,  7575,  7592,  7595,  7602,  7606,  7613,
    7617,  7621,  7628,  7633,  7636,  7643,  7646,  7652,  7655,  7662,
    7665,  7673,  7676,  7683,  7687,  7694,  7698,  7705,  7706,  7724,
    7725,  7726,  7731,  7740,  7739,  7751,  7752,  7753,  7758,  7757,
    7779,  7780,  7784,  7785,  7789,  7790,  7791,  7796,  7795,  7817,
    7826,  7825,  7852,  7853,  7857,  7858,  7862,  7863,  7864,  7865,
    7866,  7867,  7872,  7871,  7893,  7894,  7895,  7900,  7899,  7905,
    7912,  7917,  7925,  7926,  7930,  7944,  7943,  7956,  7957,  7961,
    7962,  7966,  7976,  7986,  7987,  7992,  7991,  8002,  8003,  8007,
    8008,  8012,  8022,  8033,  8032,  8040,  8040,  8051,  8052,  8057,
    8058,  8067,  8076,  8077,  8081,  8086,  8091,  8096,  8101,  8100,
    8120,  8128,  8120,  8135,  8136,  8137,  8138,  8139,  8143,  8150,
    8157,  8159,  8170,  8171,  8175,  8176,  8204,  8234,  8236,  8242,
    8252,  8253,  8254,  8269,  8276,  8301,  8307,  8313,  8314,  8315,
    8316,  8317,  8321,  8322,  8327,  8378,  8385,  8428,  8434,  8440,
    8446,  8452,  8458,  8464,  8470,  8474,  8480,  8486,  8492,  8498,
    8504,  8508,  8514,  8524,  8530,  8538,  8544,  8554,  8560,  8569,
    8579,  8585,  8595,  8601,  8610,  8614,  8620,  8626,  8632,  8638,
    8644,  8650,  8656,  8662,  8668,  8674,  8680,  8686,  8692,  8698,
    8702,  8703,  8707,  8708,  8712,  8713,  8717,  8718,  8722,  8723,
    8724,  8725,  8726,  8727,  8731,  8732,  8736,  8737,  8738,  8739,
    8740,  8741,  8753,  8754,  8755,  8756,  8757,  8763,  8767,  8773,
    8779,  8785,  8791,  8793,  8800,  8807,  8813,  8854,  8863,  8870,
    8878,  8884,  8891,  8897,  8911,  8918,  8934,  8940,  8946,  8954,
    8960,  8966,  8972,  8978,  8993,  9005,  9011,  9017,  9023,  9029,
    9035,  9041,  9047,  9053,  9059,  9065,  9071,  9077,  9083,  9089,
    9095,  9101,  9109,  9130,  9137,  9143,  9150,  9157,  9164,  9171,
    9177,  9183,  9188,  9194,  9201,  9207,  9213,  9219,  9225,  9231,
    9249,  9255,  9261,  9268,  9275,  9290,  9296,  9302,  9308,  9314,
    9321,  9327,  9333,  9339,  9345,  9351,  9357,  9369,  9375,  9381,
    9387,  9393,  9401,  9407,  9419,  9425,  9431,  9439,  9449,  9455,
    9471,  9477,  9484,  9491,  9498,  9505,  9512,  9516,  9536,  9535,
    9608,  9650,  9652,  9657,  9658,  9662,  9663,  9667,  9668,  9672,
    9679,  9687,  9712,  9718,  9724,  9730,  9736,  9742,  9751,  9758,
    9760,  9757,  9767,  9778,  9784,  9790,  9796,  9802,  9808,  9814,
    9820,  9826,  9833,  9832,  9851,  9850,  9865,  9875,  9883,  9899,
    9900,  9905,  9910,  9915,  9918,  9931,  9930,  9947,  9949,  9951,
    9953,  9955,  9957,  9959,  9961,  9963,  9965,  9967,  9972,  9973,
    9977,  9984,  9992,  9993,  9997, 10004, 10012, 10013, 10017, 10018,
   10022, 10030, 10041, 10042, 10051, 10062, 10063, 10069, 10070, 10090,
   10092, 10096, 10094, 10111, 10109, 10127, 10125, 10132, 10141, 10139,
   10157, 10156, 10166, 10177, 10175, 10194, 10193, 10204, 10215, 10216,
   10217, 10225, 10226, 10230, 10245, 10245, 10260, 10300, 10351, 10355,
   10360, 10352, 10372, 10392, 10400, 10392, 10409, 10408, 10431, 10448,
   10431, 10455, 10459, 10485, 10486, 10491, 10494, 10495, 10496, 10500,
   10501, 10506, 10505, 10511, 10510, 10518, 10519, 10522, 10524, 10524,
   10528, 10528, 10533, 10534, 10538, 10540, 10545, 10546, 10550, 10561,
   10574, 10575, 10576, 10577, 10578, 10579, 10580, 10581, 10582, 10583,
   10584, 10585, 10589, 10590, 10591, 10592, 10593, 10594, 10595, 10596,
   10597, 10601, 10602, 10603, 10604, 10607, 10609, 10610, 10614, 10615,
   10623, 10625, 10629, 10631, 10630, 10644, 10647, 10646, 10661, 10667,
   10682, 10684, 10688, 10690, 10695, 10696, 10716, 10741, 10745, 10746,
   10750, 10763, 10765, 10770, 10769, 10804, 10806, 10811, 10812, 10813,
   10818, 10824, 10828, 10829, 10833, 10840, 10847, 10854, 10864, 10882,
   10886, 10892, 10898, 10908, 10912, 10922, 10923, 10924, 10925, 10926,
   10927, 10931, 10932, 10933, 10934, 10935, 10939, 10940, 10941, 10942,
   10943, 10947, 10948, 10949, 10950, 10954, 10959, 10960, 10963, 10966,
   10965, 10996, 10997, 11001, 11002, 11006, 11018, 11018, 11028, 11029,
   11033, 11052, 11092, 11091, 11104, 11112, 11103, 11114, 11126, 11138,
   11137, 11155, 11154, 11165, 11165, 11181, 11188, 11211, 11232, 11244,
   11249, 11248, 11258, 11264, 11271, 11276, 11281, 11291, 11292, 11296,
   11307, 11320, 11321, 11325, 11336, 11337, 11341, 11342, 11345, 11347,
   11350, 11351, 11352, 11356, 11357, 11365, 11373, 11364, 11383, 11390,
   11382, 11400, 11412, 11413, 11421, 11425, 11426, 11437, 11438, 11442,
   11451, 11452, 11453, 11455, 11454, 11465, 11466, 11470, 11471, 11473,
   11472, 11476, 11475, 11481, 11482, 11486, 11487, 11491, 11501, 11502,
   11506, 11507, 11512, 11511, 11525, 11526, 11530, 11535, 11543, 11544,
   11552, 11554, 11554, 11562, 11570, 11561, 11592, 11593, 11597, 11605,
   11606, 11610, 11620, 11621, 11628, 11627, 11643, 11642, 11656, 11655,
   11667, 11666, 11680, 11681, 11685, 11698, 11714, 11715, 11719, 11720,
   11724, 11725, 11726, 11731, 11730, 11752, 11754, 11757, 11759, 11762,
   11763, 11766, 11770, 11774, 11778, 11782, 11786, 11790, 11794, 11798,
   11806, 11809, 11819, 11818, 11833, 11840, 11848, 11856, 11864, 11872,
   11880, 11887, 11889, 11891, 11900, 11904, 11909, 11908, 11914, 11913,
   11918, 11927, 11934, 11939, 11944, 11949, 11951, 11953, 11955, 11957,
   11959, 11966, 11974, 11976, 11984, 11991, 11998, 12008, 12015, 12021,
   12030, 12038, 12042, 12046, 12053, 12060, 12066, 12073, 12080, 12085,
   12090, 12098, 12100, 12102, 12107, 12108, 12111, 12113, 12117, 12118,
   12122, 12123, 12127, 12128, 12132, 12133, 12137, 12138, 12141, 12143,
   12150, 12161, 12160, 12176, 12175, 12182, 12183, 12184, 12185, 12186,
   12190, 12191, 12196, 12200, 12206, 12212, 12234, 12235, 12236, 12251,
   12250, 12263, 12272, 12262, 12274, 12278, 12279, 12293, 12294, 12299,
   12301, 12303, 12305, 12307, 12309, 12311, 12313, 12315, 12317, 12319,
   12321, 12323, 12328, 12329, 12334, 12333, 12343, 12344, 12348, 12348,
   12350, 12351, 12355, 12356, 12361, 12360, 12371, 12375, 12379, 12391,
   12401, 12402, 12403, 12409, 12421, 12433, 12443, 12453, 12420, 12461,
   12462, 12466, 12467, 12471, 12472, 12484, 12488, 12489, 12490, 12493,
   12495, 12499, 12500, 12504, 12509, 12516, 12521, 12528, 12530, 12534,
   12535, 12539, 12544, 12552, 12553, 12556, 12558, 12566, 12568, 12572,
   12573, 12574, 12578, 12580, 12585, 12586, 12595, 12596, 12600, 12601,
   12605, 12618, 12642, 12654, 12665, 12684, 12692, 12704, 12719, 12740,
   12741, 12742, 12751, 12752, 12753, 12754, 12761, 12767, 12773, 12779,
   12785, 12814, 12845, 12855, 12865, 12871, 12880, 12892, 12898, 12904,
   12920, 12921, 12925, 12934, 12950, 12954, 12997, 13001, 13019, 13023,
   13102, 13127, 13158, 13159, 13175, 13185, 13189, 13195, 13201, 13211,
   13217, 13226, 13236, 13237, 13267, 13280, 13296, 13312, 13329, 13330,
   13341, 13342, 13353, 13354, 13355, 13359, 13376, 13398, 13413, 13414,
   13415, 13416, 13417, 13418, 13419, 13420, 13421, 13422, 13423, 13424,
   13425, 13426, 13427, 13428, 13429, 13430, 13431, 13432, 13433, 13434,
   13435, 13436, 13437, 13438, 13439, 13440, 13441, 13442, 13443, 13444,
   13445, 13446, 13447, 13448, 13449, 13450, 13451, 13452, 13453, 13454,
   13455, 13456, 13457, 13458, 13459, 13460, 13461, 13462, 13472, 13473,
   13474, 13475, 13476, 13477, 13478, 13479, 13480, 13481, 13482, 13483,
   13484, 13485, 13486, 13487, 13488, 13489, 13490, 13491, 13492, 13493,
   13494, 13495, 13496, 13497, 13498, 13499, 13500, 13501, 13502, 13503,
   13504, 13505, 13506, 13507, 13508, 13509, 13510, 13511, 13512, 13513,
   13514, 13515, 13516, 13521, 13522, 13523, 13524, 13525, 13526, 13527,
   13528, 13529, 13530, 13531, 13532, 13533, 13534, 13535, 13536, 13537,
   13538, 13539, 13540, 13541, 13542, 13543, 13544, 13545, 13546, 13547,
   13548, 13549, 13550, 13551, 13552, 13553, 13554, 13555, 13556, 13557,
   13558, 13559, 13560, 13561, 13562, 13563, 13564, 13565, 13566, 13567,
   13568, 13569, 13570, 13571, 13572, 13573, 13574, 13575, 13576, 13577,
   13578, 13579, 13580, 13581, 13582, 13583, 13584, 13585, 13586, 13587,
   13588, 13589, 13590, 13591, 13592, 13593, 13594, 13595, 13596, 13597,
   13598, 13599, 13600, 13601, 13602, 13603, 13604, 13605, 13606, 13607,
   13608, 13609, 13610, 13611, 13612, 13613, 13614, 13615, 13616, 13617,
   13618, 13619, 13620, 13621, 13622, 13623, 13624, 13625, 13626, 13627,
   13628, 13629, 13630, 13631, 13632, 13633, 13634, 13635, 13636, 13637,
   13638, 13639, 13640, 13641, 13642, 13643, 13644, 13645, 13646, 13647,
   13648, 13649, 13650, 13651, 13652, 13653, 13654, 13655, 13656, 13657,
   13658, 13659, 13660, 13661, 13662, 13663, 13664, 13665, 13666, 13667,
   13668, 13669, 13670, 13671, 13672, 13673, 13674, 13675, 13676, 13677,
   13678, 13679, 13680, 13681, 13682, 13683, 13684, 13685, 13686, 13687,
   13688, 13689, 13690, 13691, 13692, 13693, 13694, 13695, 13696, 13697,
   13698, 13699, 13700, 13701, 13702, 13703, 13704, 13705, 13706, 13707,
   13708, 13709, 13710, 13711, 13712, 13713, 13714, 13715, 13716, 13717,
   13718, 13719, 13720, 13721, 13722, 13723, 13724, 13725, 13726, 13727,
   13728, 13729, 13730, 13731, 13732, 13733, 13734, 13735, 13736, 13737,
   13738, 13739, 13740, 13741, 13742, 13743, 13744, 13745, 13746, 13747,
   13748, 13749, 13750, 13751, 13752, 13753, 13754, 13755, 13756, 13757,
   13758, 13759, 13760, 13761, 13762, 13763, 13764, 13765, 13766, 13767,
   13768, 13769, 13781, 13780, 13799, 13798, 13805, 13804, 13814, 13813,
   13824, 13823, 13829, 13837, 13839, 13844, 13844, 13853, 13852, 13866,
   13865, 13870, 13874, 13875, 13876, 13880, 13881, 13882, 13883, 13887,
   13888, 13889, 13890, 13895, 13920, 13948, 13959, 13972, 13988, 14001,
   14023, 14056, 14069, 14097, 14143, 14157, 14158, 14159, 14160, 14164,
   14182, 14200, 14201, 14205, 14206, 14207, 14208, 14212, 14213, 14222,
   14234, 14235, 14236, 14242, 14248, 14260, 14259, 14275, 14276, 14280,
   14281, 14285, 14298, 14299, 14300, 14305, 14310, 14309, 14329, 14345,
   14362, 14361, 14400, 14401, 14405, 14406, 14410, 14411, 14412, 14413,
   14415, 14414, 14428, 14429, 14430, 14431, 14432, 14438, 14443, 14449,
   14460, 14471, 14475, 14485, 14490, 14497, 14509, 14521, 14530, 14532,
   14536, 14537, 14544, 14546, 14550, 14551, 14556, 14555, 14559, 14558,
   14562, 14561, 14565, 14564, 14567, 14568, 14569, 14570, 14571, 14572,
   14573, 14574, 14575, 14576, 14577, 14578, 14579, 14580, 14581, 14582,
   14583, 14584, 14585, 14586, 14587, 14588, 14589, 14590, 14591, 14592,
   14596, 14597, 14601, 14602, 14606, 14616, 14626, 14639, 14654, 14667,
   14680, 14692, 14697, 14705, 14710, 14718, 14747, 14754, 14762, 14770,
   14776, 14780, 14784, 14785, 14789, 14816, 14818, 14822, 14826, 14830,
   14837, 14838, 14842, 14843, 14847, 14848, 14852, 14853, 14859, 14865,
   14871, 14881, 14880, 14890, 14891, 14896, 14897, 14898, 14903, 14904,
   14905, 14909, 14910, 14914, 14926, 14935, 14945, 14954, 14968, 14969,
   14974, 14973, 14989, 14990, 14991, 14994, 14996, 15000, 15000, 15024,
   15025, 15029, 15030, 15031, 15035, 15039, 15046, 15049, 15047, 15063,
   15070, 15091, 15108, 15110, 15114, 15115, 15119, 15120, 15128, 15129,
   15130, 15131, 15137, 15143, 15153, 15155, 15157, 15162, 15163, 15164,
   15165, 15166, 15170, 15171, 15172, 15173, 15174, 15175, 15185, 15186,
   15191, 15204, 15217, 15219, 15221, 15226, 15231, 15233, 15235, 15241,
   15242, 15244, 15250, 15249, 15267, 15268, 15272, 15277, 15285, 15285,
   15310, 15311, 15316, 15317, 15319, 15321, 15339, 15345, 15350, 15332,
   15412, 15430, 15455, 15487, 15491, 15499, 15522, 15451, 15587, 15611,
   15620, 15628, 15586, 15649, 15653, 15657, 15661, 15665, 15669, 15676,
   15683, 15690, 15700, 15701, 15705, 15706, 15707, 15711, 15712, 15717,
   15719, 15718, 15724, 15725, 15729, 15739
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM",
  "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM",
  "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR",
  "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM",
  "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM",
  "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM",
  "COALESCE", "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS",
  "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM",
  "CONTRIBUTORS_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM", "CREATE",
  "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM", "FETCH_SYM",
  "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "GE",
  "GENERAL", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "INSERT_METHOD", "INSTALL_SYM", "INTERVAL_SYM", "INTO",
  "INT_SYM", "INVOKER_SYM", "IN_SYM", "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS",
  "IO_SYM", "IPC_SYM", "IS", "ISOLATION", "ISSUER_SYM", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM",
  "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES", "LEAVE_SYM",
  "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", "LOAD", "LOCAL_SYM",
  "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM", "LOGS_SYM",
  "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM", "MASTER_BIND_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM",
  "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG",
  "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM",
  "OFFSET_SYM", "OLD_PASSWORD", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM", "PARTITIONING_SYM",
  "PASSWORD", "PERSISTENT_STATS_SYM", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON", "PORT_SYM",
  "POSITION_SYM", "PRECISION", "PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM",
  "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM", "PURGE",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE", "REPLICATION", "REQUIRE_SYM", "RESET_SYM",
  "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "SQL_CACHE_SYM",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STARTING", "STARTS_SYM", "START_SYM",
  "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM", "WORK_SYM",
  "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM", "XOR",
  "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'",
  "'*'", "'/'", "'%'", "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'@'", "'.'", "':'", "$accept", "query", "@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "@3",
  "change", "@4", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "master_file_def", "create", "@5", "@6", "@7", "@8",
  "@9", "@10", "server_def", "server_options_list", "server_option",
  "event_tail", "@11", "ev_schedule_time", "@12", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "@13", "ev_sql_stmt_inner",
  "clear_privileges", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call", "@14",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "@15", "@16", "sp_cursor_stmt",
  "@17", "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "@18", "sp_proc_stmt_statement", "@19", "sp_proc_stmt_return", "@20",
  "sp_proc_stmt_unlabeled", "@21", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch", "@22",
  "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list", "sp_if",
  "@23", "@24", "@25", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "@26", "@27", "searched_case_stmt", "@28",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "@29", "@30", "searched_when_clause", "@31", "@32",
  "else_clause_opt", "sp_labeled_control", "@33", "sp_opt_label",
  "sp_labeled_block", "@34", "sp_unlabeled_block", "@35",
  "sp_block_content", "@36", "sp_unlabeled_control", "@37", "@38", "@39",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "@40", "change_ts_options", "change_ts_option", "tablespace_option_list",
  "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "ts_wait", "size_number", "create2", "create2a", "@41",
  "create3", "@42", "@43", "opt_create_partitioning", "opt_partitioning",
  "partitioning", "@44", "have_partitioning", "partition_entry", "@45",
  "partition", "part_type_def", "@46", "opt_linear", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "@47",
  "@48", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "part_definition",
  "@49", "part_name", "opt_part_values", "@50", "@51", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item", "@52", "@53",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "@54", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "@55", "@56", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "@57", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "opt_select_from", "udf_type",
  "create_field_list", "field_list", "field_list_item", "column_def",
  "key_def", "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "@58", "type", "@59", "@60", "spatial_type",
  "char", "nchar", "varchar", "nvarchar", "int_type", "real_type",
  "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "ws_nweights", "@61", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "init_key_options", "key_alg", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "@62", "@63", "@64", "@65", "@66", "@67", "@68",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "@69", "@70", "@71",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "@72", "add_part_extra", "reorg_partition_rule", "@73",
  "reorg_parts_rule", "@74", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "@75", "@76", "@77",
  "opt_column", "opt_ignore", "opt_restrict", "opt_place", "opt_to",
  "slave", "@78", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt",
  "opt_slave_thread_option_list", "slave_thread_option_list",
  "slave_thread_option", "slave_until", "slave_until_opts", "checksum",
  "@79", "opt_checksum_type", "repair", "@80", "opt_mi_repair_type",
  "mi_repair_types", "mi_repair_type", "analyze", "@81",
  "binlog_base64_event", "check", "@82", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "optimize", "@83",
  "opt_no_write_to_binlog", "rename", "@84", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "@85",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "@86",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "@87", "cache_keys_spec", "@88",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_init2", "@89",
  "select_part2", "@90", "@91", "select_into", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@92", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "@93", "@94", "@95", "variable",
  "@96", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "in_sum_expr", "@97", "cast_type", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "opt_expr", "opt_else",
  "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "@98", "@99", "@100", "@101", "@102",
  "@103", "@104", "normal_join", "opt_use_partition", "use_partition",
  "table_factor", "@105", "select_derived_union", "@106", "@107",
  "select_init2_derived", "select_part2_derived", "@108", "@109",
  "select_derived", "@110", "select_derived2", "@111", "@112",
  "get_select_lex", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "@113",
  "@114", "index_hints_list", "opt_index_hints_list", "@115",
  "opt_key_definition", "@116", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "where_clause", "@117", "having_clause", "@118", "opt_escape",
  "group_clause", "group_list", "olap_opt", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "@119", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "procedure_clause", "@120", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@121",
  "select_var_list", "select_var_ident", "into", "@122",
  "into_destination", "@123", "@124", "do", "@125", "drop", "@126", "@127",
  "@128", "table_list", "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "if_exists", "opt_temporary",
  "drop_ts_options_list", "drop_ts_options", "drop_ts_option", "insert",
  "@129", "@130", "replace", "@131", "@132", "insert_lock_option",
  "replace_lock_option", "insert2", "insert_table", "insert_field_spec",
  "@133", "fields", "insert_values", "@134", "@135", "values_list",
  "ident_eq_list", "ident_eq_value", "equal", "opt_equal", "no_braces",
  "@136", "opt_values", "values", "expr_or_default", "opt_insert_update",
  "@137", "update", "@138", "@139", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "@140", "single_multi", "@141", "@142", "@143", "table_wild_list",
  "table_wild_one", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate", "@144", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "@145", "show_param", "@146",
  "@147", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "@148", "@149", "explanable_command", "describe_command",
  "opt_extended_describe", "opt_describe_column", "flush", "@150",
  "flush_options", "@151", "@152", "opt_with_read_lock",
  "flush_options_list", "flush_option", "opt_table_list", "reset", "@153",
  "reset_options", "reset_option", "@154", "slave_reset_options", "purge",
  "@155", "purge_options", "purge_option", "kill", "kill_option", "use",
  "load", "@156", "@157", "@158", "@159", "data_or_xml", "opt_local",
  "load_data_lock", "opt_duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_ident", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "ident", "label_ident", "ident_or_text", "user", "keyword", "keyword_sp",
  "set", "@160", "start_option_value_list", "@161", "@162", "@163",
  "start_option_value_list_following_option_type", "@164",
  "option_value_list_continued", "option_value_list", "@165", "@166",
  "option_value", "@167", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "@168",
  "table_or_tables", "table_lock_list", "table_lock", "lock_option",
  "unlock", "@169", "handler", "@170", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "@171",
  "handler_rkey_mode", "revoke", "revoke_command", "grant",
  "grant_command", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "@172", "@173", "@174",
  "@175", "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "grant_list", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "require_clause", "grant_options",
  "opt_grant_option", "grant_option_list", "grant_option", "begin", "@176",
  "opt_work", "opt_chain", "opt_release", "opt_savepoint", "commit",
  "rollback", "savepoint", "release", "union_clause", "union_list", "@177",
  "union_opt", "opt_union_order_or_limit", "union_order_or_limit", "@178",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "@179", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "@180",
  "view_list_opt", "view_list", "view_select", "@181", "view_select_aux",
  "view_check_option", "trigger_tail", "@182", "@183", "@184", "udf_tail",
  "sf_tail", "@185", "@186", "@187", "@188", "@189", "sp_tail", "@190",
  "@191", "@192", "@193", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "@194",
  "opt_migrate", "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   124,    38,    45,    43,
      42,    47,    37,    94,   126,    40,    41,    44,    33,   123,
     125,    59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   635,   636,   637,   636,   636,   638,   638,   639,   639,
     640,   640,   640,   640,   640,   640,   640,   640,   640,   640,
     640,   640,   640,   640,   640,   640,   640,   640,   640,   640,
     640,   640,   640,   640,   640,   640,   640,   640,   640,   640,
     640,   640,   640,   640,   640,   640,   640,   640,   640,   640,
     640,   640,   640,   640,   640,   640,   640,   640,   640,   640,
     640,   640,   641,   642,   642,   643,   644,   644,   646,   645,
     647,   647,   648,   648,   649,   651,   650,   653,   652,   654,
     654,   655,   655,   655,   655,   655,   655,   655,   655,   655,
     655,   655,   655,   655,   655,   655,   655,   655,   655,   655,
     655,   655,   656,   656,   656,   657,   658,   658,   658,   658,
     660,   659,   661,   659,   662,   659,   663,   659,   664,   659,
     665,   659,   659,   659,   659,   659,   666,   667,   667,   668,
     668,   668,   668,   668,   668,   668,   670,   669,   672,   671,
     671,   673,   673,   673,   673,   674,   674,   675,   675,   676,
     676,   677,   677,   678,   678,   680,   679,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     682,   683,   683,   684,   684,   685,   685,   686,   686,   686,
     686,   686,   686,   686,   687,   687,   687,   688,   688,   690,
     689,   691,   691,   692,   692,   693,   693,   694,   694,   695,
     695,   696,   697,   698,   698,   699,   699,   700,   701,   701,
     701,   701,   702,   702,   703,   703,   704,   704,   706,   705,
     705,   707,   705,   705,   709,   708,   710,   710,   711,   711,
     712,   713,   713,   714,   715,   715,   716,   716,   716,   716,
     716,   717,   718,   718,   719,   719,   720,   720,   721,   721,
     722,   722,   722,   723,   723,   723,   723,   723,   723,   723,
     723,   723,   723,   723,   723,   724,   725,   726,   726,   727,
     727,   728,   728,   729,   730,   730,   731,   731,   732,   733,
     733,   734,   735,   735,   735,   735,   735,   735,   735,   735,
     735,   735,   735,   735,   735,   736,   736,   737,   737,   738,
     738,   738,   738,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   740,   739,   742,   741,   744,   743,   746,   745,
     747,   748,   749,   751,   750,   752,   753,   753,   753,   754,
     754,   756,   757,   758,   755,   759,   759,   759,   760,   760,
     762,   763,   761,   765,   764,   766,   766,   767,   767,   769,
     770,   768,   772,   773,   771,   774,   774,   776,   775,   777,
     777,   779,   778,   781,   780,   783,   782,   784,   785,   786,
     784,   787,   784,   788,   788,   789,   789,   789,   790,   791,
     792,   793,   793,   794,   794,   795,   796,   797,   797,   799,
     798,   800,   800,   800,   801,   801,   801,   802,   802,   803,
     803,   803,   804,   804,   804,   804,   804,   804,   804,   804,
     805,   805,   806,   806,   806,   807,   807,   807,   807,   807,
     808,   808,   809,   809,   809,   810,   810,   810,   810,   810,
     810,   810,   811,   811,   812,   812,   812,   813,   813,   813,
     814,   815,   816,   817,   818,   819,   819,   819,   820,   821,
     822,   823,   824,   825,   826,   827,   828,   829,   829,   830,
     830,   831,   831,   831,   831,   832,   833,   832,   834,   835,
     834,   836,   834,   837,   838,   838,   840,   839,   841,   843,
     842,   844,   845,   846,   845,   845,   845,   845,   845,   847,
     847,   848,   848,   849,   849,   850,   851,   852,   853,   854,
     854,   855,   856,   855,   857,   855,   858,   858,   859,   860,
     861,   861,   862,   862,   863,   863,   865,   864,   866,   867,
     868,   867,   869,   867,   870,   870,   871,   871,   872,   872,
     874,   875,   873,   876,   876,   877,   877,   878,   878,   879,
     879,   881,   880,   882,   883,   883,   884,   884,   885,   885,
     885,   885,   885,   885,   885,   885,   887,   888,   886,   889,
     889,   890,   890,   891,   891,   892,   892,   893,   893,   894,
     894,   895,   896,   896,   897,   897,   898,   898,   899,   899,
     899,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   901,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   902,   903,
     904,   905,   906,   906,   906,   906,   906,   906,   907,   907,
     907,   908,   908,   909,   909,   909,   909,   910,   911,   911,
     912,   912,   913,   913,   914,   914,   914,   914,   914,   914,
     915,   915,   916,   917,   917,   918,   920,   919,   921,   921,
     921,   921,   921,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   922,   921,   923,   921,   921,   921,   924,
     924,   924,   924,   924,   924,   924,   924,   925,   926,   926,
     927,   927,   928,   928,   928,   928,   928,   929,   929,   929,
     929,   929,   930,   930,   930,   931,   931,   931,   932,   933,
     933,   934,   934,   934,   935,   935,   936,   936,   937,   937,
     937,   938,   938,   938,   938,   939,   939,   940,   940,   941,
     941,   942,   942,   943,   943,   943,   943,   943,   943,   943,
     943,   943,   943,   943,   944,   945,   946,   946,   947,   947,
     948,   948,   949,   949,   950,   950,   951,   951,   952,   952,
     953,   954,   954,   955,   955,   956,   956,   957,   957,   957,
     958,   958,   958,   959,   959,   959,   959,   959,   959,   959,
     960,   960,   962,   961,   963,   963,   964,   965,   965,   965,
     965,   966,   967,   968,   968,   969,   970,   970,   971,   971,
     972,   972,   973,   974,   974,   975,   975,   976,   976,   976,
     976,   977,   977,   977,   977,   977,   978,   978,   978,   978,
     978,   979,   980,   980,   981,   981,   982,   982,   983,   983,
     983,   984,   984,   985,   986,   987,   988,   988,   989,   989,
     990,   990,   991,   991,   992,   992,   993,   993,   994,   994,
     995,   995,   996,   996,   997,   997,   998,   999,   999,  1000,
    1000,  1000,  1001,  1001,  1002,  1002,  1003,  1003,  1004,  1004,
    1005,  1005,  1007,  1006,  1008,  1006,  1006,  1009,  1006,  1010,
    1006,  1011,  1006,  1012,  1006,  1013,  1006,  1006,  1006,  1006,
    1006,  1006,  1014,  1014,  1014,  1014,  1015,  1015,  1016,  1016,
    1017,  1017,  1018,  1018,  1018,  1018,  1018,  1018,  1018,  1018,
    1018,  1018,  1019,  1018,  1018,  1020,  1018,  1021,  1018,  1018,
    1018,  1018,  1018,  1022,  1023,  1023,  1025,  1024,  1026,  1026,
    1026,  1028,  1027,  1029,  1030,  1029,  1031,  1031,  1032,  1033,
    1033,  1034,  1035,  1035,  1035,  1036,  1035,  1037,  1038,  1035,
    1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,  1035,
    1035,  1035,  1035,  1035,  1035,  1035,  1035,  1039,  1039,  1040,
    1040,  1041,  1041,  1041,  1042,  1042,  1042,  1043,  1043,  1043,
    1043,  1045,  1044,  1044,  1046,  1047,  1047,  1048,  1048,  1049,
    1049,  1049,  1050,  1051,  1051,  1052,  1052,  1053,  1053,  1054,
    1054,  1055,  1055,  1056,  1056,  1057,  1057,  1058,  1058,  1059,
    1059,  1059,  1059,  1061,  1060,  1062,  1062,  1062,  1064,  1063,
    1065,  1065,  1066,  1066,  1067,  1067,  1067,  1069,  1068,  1070,
    1072,  1071,  1073,  1073,  1074,  1074,  1075,  1075,  1075,  1075,
    1075,  1075,  1077,  1076,  1078,  1078,  1078,  1080,  1079,  1079,
    1081,  1081,  1082,  1082,  1083,  1085,  1084,  1086,  1086,  1087,
    1087,  1088,  1089,  1090,  1090,  1092,  1091,  1093,  1093,  1094,
    1094,  1095,  1096,  1098,  1097,  1100,  1099,  1101,  1101,  1102,
    1102,  1103,  1104,  1104,  1105,  1105,  1106,  1106,  1108,  1107,
    1110,  1111,  1109,  1112,  1112,  1112,  1112,  1112,  1113,  1113,
    1114,  1114,  1115,  1115,  1116,  1116,  1116,  1117,  1117,  1117,
    1118,  1118,  1118,  1119,  1119,  1120,  1121,  1122,  1122,  1122,
    1122,  1122,  1123,  1123,  1124,  1124,  1124,  1124,  1124,  1124,
    1124,  1124,  1124,  1124,  1124,  1125,  1125,  1125,  1125,  1125,
    1125,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,
    1126,  1126,  1126,  1126,  1126,  1127,  1127,  1127,  1127,  1127,
    1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1128,  1128,  1129,  1129,  1130,  1130,  1131,  1131,  1132,  1132,
    1132,  1132,  1132,  1132,  1133,  1133,  1134,  1134,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,  1134,
    1134,  1134,  1134,  1134,  1134,  1134,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1136,  1136,  1136,  1136,  1136,  1136,  1136,
    1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,
    1136,  1136,  1136,  1136,  1136,  1137,  1137,  1137,  1137,  1137,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,  1140,  1139,
    1139,  1141,  1141,  1142,  1142,  1143,  1143,  1144,  1144,  1145,
    1145,  1146,  1147,  1147,  1147,  1147,  1147,  1147,  1147,  1148,
    1149,  1147,  1147,  1147,  1147,  1147,  1147,  1147,  1147,  1147,
    1147,  1147,  1150,  1147,  1152,  1151,  1153,  1153,  1153,  1154,
    1154,  1155,  1155,  1156,  1156,  1158,  1157,  1159,  1159,  1159,
    1159,  1159,  1159,  1159,  1159,  1159,  1159,  1159,  1160,  1160,
    1161,  1161,  1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,
    1166,  1166,  1167,  1167,  1168,  1169,  1169,  1170,  1170,  1171,
    1171,  1172,  1171,  1173,  1171,  1174,  1171,  1171,  1175,  1171,
    1176,  1171,  1171,  1177,  1171,  1178,  1171,  1171,  1179,  1179,
    1179,  1180,  1180,  1181,  1183,  1182,  1182,  1182,  1184,  1185,
    1186,  1184,  1187,  1189,  1190,  1188,  1192,  1191,  1194,  1195,
    1193,  1196,  1197,  1198,  1198,  1199,  1199,  1199,  1199,  1200,
    1200,  1202,  1201,  1203,  1201,  1204,  1204,  1205,  1206,  1205,
    1208,  1207,  1209,  1209,  1210,  1210,  1211,  1211,  1212,  1212,
    1213,  1213,  1213,  1213,  1213,  1213,  1213,  1213,  1213,  1213,
    1213,  1213,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1215,  1215,  1215,  1215,  1216,  1216,  1216,  1217,  1217,
    1218,  1218,  1219,  1220,  1219,  1221,  1222,  1221,  1223,  1223,
    1224,  1224,  1225,  1225,  1226,  1226,  1226,  1227,  1228,  1228,
    1229,  1230,  1230,  1232,  1231,  1233,  1233,  1234,  1234,  1234,
    1235,  1235,  1236,  1236,  1237,  1238,  1238,  1238,  1239,  1239,
    1239,  1239,  1239,  1240,  1240,  1241,  1241,  1241,  1241,  1241,
    1241,  1242,  1242,  1242,  1242,  1242,  1243,  1243,  1243,  1243,
    1243,  1244,  1244,  1244,  1244,  1245,  1246,  1246,  1247,  1248,
    1247,  1249,  1249,  1250,  1250,  1251,  1253,  1252,  1254,  1254,
    1255,  1255,  1257,  1256,  1259,  1260,  1258,  1258,  1258,  1262,
    1261,  1264,  1263,  1265,  1263,  1263,  1263,  1263,  1263,  1263,
    1266,  1263,  1263,  1263,  1263,  1263,  1263,  1267,  1267,  1268,
    1269,  1270,  1270,  1271,  1272,  1272,  1273,  1273,  1274,  1274,
    1275,  1275,  1275,  1276,  1276,  1278,  1279,  1277,  1281,  1282,
    1280,  1283,  1283,  1283,  1283,  1284,  1284,  1285,  1285,  1286,
    1287,  1287,  1287,  1288,  1287,  1289,  1289,  1290,  1290,  1291,
    1290,  1292,  1290,  1293,  1293,  1294,  1294,  1295,  1296,  1296,
    1297,  1297,  1299,  1298,  1300,  1300,  1301,  1301,  1302,  1302,
    1303,  1304,  1303,  1306,  1307,  1305,  1308,  1308,  1309,  1310,
    1310,  1311,  1312,  1312,  1314,  1313,  1316,  1315,  1317,  1315,
    1318,  1315,  1319,  1319,  1320,  1320,  1321,  1321,  1322,  1322,
    1323,  1323,  1323,  1325,  1324,  1326,  1326,  1327,  1327,  1328,
    1328,  1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,
    1330,  1330,  1332,  1331,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1334,  1333,  1335,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1336,  1336,  1336,  1337,  1337,  1338,  1338,  1339,  1339,
    1340,  1340,  1341,  1341,  1342,  1342,  1343,  1343,  1344,  1344,
    1344,  1346,  1345,  1347,  1345,  1348,  1348,  1348,  1348,  1348,
    1349,  1349,  1350,  1350,  1350,  1350,  1351,  1351,  1351,  1353,
    1352,  1355,  1356,  1354,  1354,  1357,  1357,  1358,  1358,  1359,
    1359,  1359,  1359,  1359,  1359,  1359,  1359,  1359,  1359,  1359,
    1359,  1359,  1360,  1360,  1362,  1361,  1363,  1363,  1365,  1364,
    1364,  1364,  1366,  1366,  1368,  1367,  1369,  1370,  1370,  1371,
    1372,  1372,  1372,  1373,  1375,  1376,  1377,  1378,  1374,  1379,
    1379,  1380,  1380,  1381,  1381,  1381,  1382,  1382,  1382,  1383,
    1383,  1384,  1384,  1385,  1385,  1385,  1385,  1386,  1386,  1387,
    1387,  1388,  1388,  1389,  1389,  1390,  1390,  1391,  1391,  1392,
    1392,  1392,  1393,  1393,  1394,  1394,  1395,  1395,  1396,  1396,
    1397,  1398,  1398,  1398,  1398,  1399,  1399,  1399,  1400,  1401,
    1401,  1401,  1402,  1402,  1402,  1402,  1402,  1402,  1402,  1402,
    1402,  1402,  1403,  1403,  1403,  1403,  1403,  1404,  1404,  1404,
    1405,  1405,  1406,  1406,  1407,  1408,  1408,  1409,  1409,  1410,
    1410,  1410,  1411,  1411,  1411,  1411,  1412,  1412,  1412,  1413,
    1413,  1414,  1415,  1415,  1416,  1417,  1418,  1419,  1420,  1420,
    1421,  1421,  1422,  1422,  1422,  1423,  1423,  1423,  1424,  1424,
    1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,
    1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,
    1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,
    1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,
    1424,  1424,  1424,  1424,  1424,  1424,  1424,  1424,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1427,  1426,  1429,  1428,  1430,  1428,  1431,  1428,
    1433,  1432,  1432,  1434,  1434,  1436,  1435,  1437,  1435,  1439,
    1438,  1438,  1440,  1440,  1440,  1441,  1441,  1441,  1441,  1442,
    1442,  1442,  1442,  1443,  1444,  1444,  1444,  1444,  1444,  1444,
    1444,  1444,  1445,  1445,  1445,  1446,  1446,  1446,  1446,  1447,
    1448,  1449,  1449,  1450,  1450,  1450,  1450,  1451,  1451,  1451,
    1452,  1452,  1452,  1452,  1452,  1454,  1453,  1455,  1455,  1456,
    1456,  1457,  1458,  1458,  1458,  1458,  1460,  1459,  1461,  1461,
    1462,  1461,  1463,  1463,  1464,  1464,  1465,  1465,  1465,  1465,
    1466,  1465,  1467,  1467,  1467,  1467,  1467,  1468,  1469,  1469,
    1469,  1469,  1469,  1470,  1471,  1471,  1471,  1471,  1472,  1472,
    1473,  1473,  1474,  1474,  1475,  1475,  1477,  1476,  1478,  1476,
    1479,  1476,  1480,  1476,  1476,  1476,  1476,  1476,  1476,  1476,
    1476,  1476,  1476,  1476,  1476,  1476,  1476,  1476,  1476,  1476,
    1476,  1476,  1476,  1476,  1476,  1476,  1476,  1476,  1476,  1476,
    1481,  1481,  1482,  1482,  1483,  1483,  1483,  1484,  1484,  1484,
    1484,  1485,  1485,  1486,  1486,  1487,  1487,  1487,  1487,  1487,
    1488,  1488,  1489,  1489,  1490,  1491,  1491,  1491,  1491,  1491,
    1492,  1492,  1493,  1493,  1494,  1494,  1495,  1495,  1495,  1495,
    1495,  1497,  1496,  1498,  1498,  1499,  1499,  1499,  1500,  1500,
    1500,  1501,  1501,  1502,  1503,  1503,  1504,  1505,  1506,  1506,
    1508,  1507,  1509,  1509,  1509,  1510,  1510,  1512,  1511,  1513,
    1513,  1514,  1514,  1514,  1515,  1515,  1516,  1517,  1516,  1518,
    1519,  1520,  1521,  1521,  1522,  1522,  1523,  1523,  1523,  1523,
    1523,  1523,  1523,  1523,  1524,  1524,  1524,  1525,  1525,  1525,
    1525,  1525,  1526,  1526,  1526,  1526,  1526,  1526,  1527,  1527,
    1528,  1529,  1530,  1530,  1530,  1531,  1532,  1532,  1532,  1533,
    1533,  1533,  1535,  1534,  1536,  1536,  1537,  1537,  1539,  1538,
    1540,  1540,  1541,  1541,  1541,  1541,  1543,  1544,  1545,  1542,
    1546,  1546,  1548,  1549,  1550,  1551,  1552,  1547,  1554,  1555,
    1556,  1557,  1553,  1558,  1558,  1558,  1558,  1558,  1558,  1559,
    1559,  1559,  1560,  1560,  1561,  1561,  1561,  1562,  1562,  1563,
    1564,  1563,  1565,  1565,  1566,  1567
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     5,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       3,     1,     0,     1,     3,     1,     3,     3,     3,     3,
       0,     7,     0,    12,     0,    12,     0,    12,     0,     6,
       0,     3,     4,     4,     3,     2,    10,     1,     3,     2,
       2,     2,     2,     2,     2,     2,     0,    13,     0,     6,
       2,     0,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     3,     4,     0,     2,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     1,     0,     2,     0,     2,     2,     2,     2,
       2,     3,     3,     1,     1,     1,     2,     3,     3,     0,
       4,     0,     3,     0,     1,     3,     1,     0,     1,     3,
       1,     0,     3,     0,     1,     3,     1,     4,     0,     1,
       1,     1,     0,     3,     2,     3,     0,     3,     0,     5,
       5,     0,     7,     5,     0,     2,     1,     1,     1,     3,
       1,     1,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     7,     1,     1,     1,     1,     1,     2,     4,
       5,     0,     4,     4,     4,     3,     3,     2,     2,     0,
       2,     1,     2,     3,     1,     1,     1,     0,     1,     1,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       0,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     1,     1,     1,
       1,     2,     3,     2,     4,     5,     0,     5,     0,     0,
       5,     0,     7,     1,     0,     1,     0,     4,     0,     0,
       3,     5,     5,     0,     4,     2,     2,     2,     2,     0,
       1,     0,     1,     1,     3,     1,     4,     5,     5,     0,
       2,     0,     0,     7,     0,     9,     1,     3,     1,     1,
       0,     2,     0,     3,     1,     3,     0,     6,     1,     0,
       0,     5,     0,     4,     1,     1,     1,     3,     1,     3,
       0,     0,     5,     1,     3,     1,     1,     0,     3,     1,
       3,     0,     4,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     4,     4,     3,     0,     0,     6,     0,
       1,     0,     1,     1,     2,     1,     1,     0,     1,     1,
       2,     1,     0,     3,     0,     1,     1,     2,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     0,     6,     1,     1,
       3,     4,     4,     2,     2,     2,     3,     3,     4,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     2,     2,     7,     8,     8,     8,     8,     2,
       0,     1,     4,     0,     1,     2,     0,     4,     3,     3,
       3,     1,     2,     1,     1,     3,     2,     3,     2,     2,
       1,     3,     3,     2,     3,     1,     2,     2,     2,     1,
       2,     1,     1,     1,     2,     3,     2,     3,     2,     2,
       3,     3,     3,     0,     6,     0,     6,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     2,     0,     1,     1,     5,     0,
       3,     0,     2,     3,     0,     1,     2,     1,     1,     1,
       1,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       1,     2,     1,     1,     2,     2,     3,     1,     3,     2,
       1,     2,     2,     2,     2,     2,     1,     1,     2,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     0,     1,     1,     2,     2,
       1,     2,     2,     0,     1,     1,     1,     3,     1,     3,
       0,     1,     0,     4,     1,     1,     1,     0,     1,     2,
       1,     1,     2,     1,     3,     3,     1,     1,     0,     2,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     1,     2,     2,     1,     1,     0,     1,     1,     1,
       1,     0,     1,     1,     1,     0,     1,     2,     0,     1,
       0,     1,     0,     1,     1,     2,     1,     2,     1,     2,
       2,     2,     3,     2,     1,     1,     1,     1,     3,     1,
       1,     1,     4,     2,     1,     4,     0,     1,     0,     2,
       1,     3,     0,     6,     0,     5,     7,     0,     5,     0,
       5,     0,     5,     0,     4,     0,    10,     3,     4,     3,
       3,     7,     0,     3,     1,     4,     0,     3,     0,     2,
       0,     1,     0,     2,     2,     2,     2,     1,     1,     1,
       3,     4,     0,     6,     4,     0,     5,     0,     6,     4,
       3,     1,     7,     3,     1,     1,     0,     5,     0,     3,
       2,     0,     5,     0,     0,     6,     1,     3,     1,     1,
       3,     2,     3,     2,     4,     0,     6,     0,     0,     8,
       4,     4,     3,     3,     2,     2,     6,     5,     3,     5,
       1,     1,     1,     3,     3,     3,     3,     0,     1,     0,
       1,     0,     1,     1,     0,     2,     1,     0,     1,     1,
       1,     0,     6,     3,     3,     0,     1,     1,     3,     3,
       2,     2,     4,     0,     3,     0,     3,     0,     3,     0,
       3,     0,     1,     1,     3,     1,     1,     0,     2,     1,
       3,     3,     3,     0,     5,     0,     1,     1,     0,     6,
       0,     1,     1,     2,     1,     1,     1,     0,     5,     2,
       0,     5,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     0,     5,     0,     1,     1,     0,     4,     4,
       3,     5,     1,     3,     3,     0,     6,     1,     1,     1,
       3,     2,     3,     1,     1,     0,     6,     1,     1,     1,
       3,     3,     4,     0,     6,     0,     2,     0,     4,     0,
       2,     1,     2,     4,     2,     3,     2,     3,     0,     3,
       0,     0,     6,     2,     1,     1,     2,     2,     8,     4,
       0,     1,     2,     1,     1,     1,     1,     0,     2,     4,
       3,     1,     1,     3,     4,     0,     0,     0,     2,     2,
       1,     1,     0,     2,     3,     3,     3,     2,     3,     4,
       3,     4,     3,     4,     1,     3,     4,     3,     3,     6,
       1,     5,     6,     5,     7,     6,     8,     5,     6,     4,
       4,     5,     3,     4,     1,     3,     3,     3,     3,     3,
       3,     5,     5,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     3,     2,     2,     2,
       2,     3,     3,     5,     6,     4,     4,     7,     2,     6,
       5,     6,     6,     4,     4,     5,     4,     6,     2,     4,
       4,     4,    10,     6,     8,     6,     4,     4,     6,     4,
       4,     4,     6,     4,     7,     7,     7,     6,     6,     6,
       6,     3,     4,     6,     8,     2,     2,     8,     8,     6,
       6,     1,     6,     6,     8,     8,     6,     8,     6,     2,
       8,     8,     2,     2,     2,     4,     4,     4,     4,     3,
       8,     6,     8,     4,     6,     4,     4,     4,     6,     8,
       4,     3,     6,     4,     6,     5,     8,     7,    10,     1,
       6,     4,     4,     4,     4,     4,     6,     4,     0,     5,
       6,     2,     3,     0,     4,     0,     3,     0,     1,     1,
       3,     4,     4,     5,     4,     4,     4,     5,     4,     0,
       0,     7,     4,     5,     4,     5,     4,     4,     4,     4,
       4,     5,     0,     8,     0,     3,     3,     1,     4,     0,
       1,     0,     2,     0,     1,     0,     3,     2,     3,     2,
       1,     2,     1,     2,     1,     2,     2,     2,     0,     1,
       1,     3,     1,     3,     1,     3,     0,     1,     0,     2,
       4,     5,     1,     1,     1,     1,     4,     1,     3,     3,
       3,     0,     6,     0,     6,     0,     8,     4,     0,     8,
       0,    10,     6,     0,     8,     0,    10,     6,     1,     2,
       2,     0,     1,     5,     0,     5,     3,     5,     2,     0,
       0,     7,     1,     0,     0,     6,     0,     3,     0,     0,
       5,     0,     1,     0,     1,     0,     2,     3,     3,     1,
       1,     0,     7,     0,     7,     1,     2,     0,     0,     2,
       0,     2,     0,     1,     1,     1,     1,     3,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     0,     2,
       0,     1,     0,     0,     3,     0,     0,     3,     2,     0,
       0,     4,     4,     2,     0,     1,     1,     3,     3,     1,
       2,     0,     1,     0,     4,     4,     2,     0,     1,     1,
       0,     1,     0,     1,     2,     1,     3,     3,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     0,
       6,     0,     1,     3,     1,     3,     0,     2,     3,     1,
       2,     1,     0,     3,     0,     0,     7,     2,     1,     0,
       3,     0,     7,     0,     6,     4,     6,     4,     4,     4,
       0,     6,     4,     4,     4,     5,     4,     1,     3,     1,
       2,     1,     3,     1,     0,     2,     0,     1,     0,     1,
       1,     2,     3,     1,     1,     0,     0,     8,     0,     0,
       6,     0,     1,     1,     1,     1,     1,     2,     1,     1,
       1,     3,     4,     0,     3,     3,     1,     2,     2,     0,
       3,     0,     5,     3,     1,     3,     1,     3,     1,     1,
       0,     1,     0,     4,     0,     1,     3,     1,     1,     1,
       0,     0,     6,     0,     0,    11,     3,     1,     3,     3,
       1,     3,     0,     1,     0,     4,     0,     7,     0,     5,
       0,     6,     1,     3,     2,     4,     0,     2,     0,     2,
       1,     1,     1,     0,     4,     0,     1,     0,     1,     1,
       3,     1,     1,     2,     2,     2,     1,     1,     1,     1,
       0,     3,     0,     3,     2,     4,     4,     3,     4,     4,
       1,     3,     3,     6,     2,     2,     0,     6,     0,     6,
       5,     2,     1,     1,     1,     5,     5,     2,     2,     1,
       4,     3,     2,     3,     2,     2,     1,     3,     4,     3,
       3,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     0,     1,     0,     2,
       0,     1,     1,     1,     0,     2,     0,     2,     0,     2,
       2,     0,     4,     0,     4,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     0,     1,     1,     0,
       4,     0,     0,     5,     1,     0,     3,     3,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     3,     3,     1,     0,     3,
       1,     2,     0,     1,     0,     3,     3,     2,     2,     3,
       0,     1,     1,     2,     0,     0,     0,     0,    22,     1,
       1,     0,     1,     0,     1,     1,     0,     1,     1,     0,
       2,     2,     1,     3,     4,     3,     3,     0,     2,     2,
       1,     3,     3,     0,     4,     0,     3,     1,     1,     0,
       3,     2,     3,     1,     1,     2,     0,     2,     3,     1,
       5,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     2,     2,     2,
       1,     1,     3,     5,     1,     1,     1,     1,     1,     3,
       4,     5,     1,     5,     3,     2,     1,     3,     2,     2,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     0,     3,     0,     3,     0,     3,
       0,     3,     2,     0,     2,     0,     2,     0,     4,     0,
       3,     1,     1,     1,     1,     0,     1,     1,     1,     0,
       2,     2,     2,     3,     3,     4,     6,     2,     3,     3,
       3,     5,     1,     3,     3,     1,     1,     3,     3,     1,
       3,     2,     2,     2,     2,     2,     1,     1,     4,     4,
       1,     1,     1,     1,     1,     0,     4,     1,     1,     1,
       3,     3,     1,     1,     2,     2,     0,     3,     4,     3,
       0,     7,     1,     2,     1,     1,     1,     1,     1,     1,
       0,     5,     1,     1,     1,     1,     1,     3,     6,     6,
       6,     7,     5,     3,     8,     8,     8,     6,     0,     1,
       1,     2,     0,     1,     1,     3,     0,     3,     0,     3,
       0,     3,     0,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     3,     2,
       2,     2,     2,     2,     2,     2,     2,     1,     1,     2,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     1,     3,     1,     3,     4,     5,     4,     6,     1,
       0,     3,     3,     1,     1,     0,     2,     2,     2,     2,
       0,     2,     0,     3,     2,     1,     2,     2,     2,     2,
       2,     0,     3,     0,     1,     0,     3,     2,     0,     1,
       2,     0,     1,     4,     4,     5,     2,     3,     0,     1,
       0,     4,     0,     1,     1,     0,     1,     0,     2,     2,
       1,     0,     1,     1,     2,     3,     2,     0,     6,     3,
       0,     0,     0,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     1,     2,     1,     2,     3,     3,     3,     0,
       3,     3,     0,     7,     0,     3,     1,     3,     0,     3,
       2,     4,     0,     3,     4,     4,     0,     0,     0,    16,
       8,     7,     0,     0,     0,     0,     0,    15,     0,     0,
       0,     0,    12,     4,     4,     3,     4,     3,     2,     1,
       3,     5,     1,     1,     0,     1,     1,     0,     2,     0,
       0,     3,     0,     2,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2560,  1054,  2491,     0,     0,     0,     0,     0,     0,
    2493,   120,    63,  1674,  1790,  1791,  1579,  1606,     2,     0,
    1054,   267,   170,     0,    75,  1615,     0,  1840,     0,     0,
    1054,   479,     0,  1834,     0,     0,  1054,  1618,  1824,   244,
     170,  2493,     0,  1100,  2302,  1712,     0,     0,     0,  1695,
       0,  2376,  1663,     0,     0,     0,     0,     3,     8,    19,
       0,    39,    24,    29,    14,    18,    13,    52,    46,    26,
      37,    10,    54,    55,    16,    43,    11,    12,    15,    35,
      42,    36,    38,    50,  1091,    22,    23,    30,    44,    59,
      20,    56,    53,    21,  1792,    25,    45,    40,    32,    60,
      33,    51,    34,    58,    28,    47,    27,     9,    17,    48,
      49,    41,    61,    31,    57,     0,   910,     0,     0,   980,
       0,     0,     0,     0,     0,   893,  2558,  2559,  2560,  1056,
    1055,     0,  2493,  1945,  1039,  1065,  2008,  2009,  2010,  2011,
    2012,  2013,  2014,  1959,  2015,  2016,  2018,  2017,  2019,  2020,
    1960,  1961,  2021,  2022,  2023,  2025,  2024,  2026,  1962,  1963,
    2027,  2028,  2029,  2030,  1964,  1965,  2031,  2033,  2032,  1966,
    2034,  2035,  2036,  2038,  2037,  1967,  2039,  1968,  2040,  2041,
    2042,  2043,  2044,  2045,  2046,  2048,  2047,  1969,  2049,  2050,
    2051,  2052,  2053,  2054,  2056,  2055,  2057,  2058,  2059,  1970,
    2060,  2061,  2062,  2063,  2064,  2065,  2066,  2067,  2068,  1971,
    2069,  2070,  2071,  2089,  1972,  2072,  2075,  2074,  2073,  2076,
    2077,  2078,  2080,  2079,  2081,  2082,  1973,  2083,  2084,  2085,
    2087,  2086,  2091,  2092,  2093,  1974,  1975,  2088,  2090,  2282,
    2094,  2096,  2095,  2097,  2099,  2098,  1976,  2100,  1977,  1978,
    2101,  2102,  1942,  2103,  1943,  2104,  2106,  2107,  2108,  2113,
    1979,  2105,  2109,  2110,  2111,  2112,  2114,  1980,  2115,  2116,
    2117,  2118,  2119,  2120,  2121,  2122,  2123,  2124,  2146,  2135,
    2137,  2128,  2130,  2131,  2133,  2129,  2136,  2134,  2140,  2139,
    2141,  2142,  2143,  2144,  2145,  2138,  2126,  2132,  2127,  2147,
    2148,  2125,  2149,  2150,  2151,  2152,  2153,  2154,  2155,  2156,
    2157,  2158,  2159,  2161,  2160,  2162,  2163,  2164,  2165,  2166,
    2167,  2169,  2168,  2170,  2171,  2172,  2174,  2173,  2176,  2177,
    1981,  2175,  2178,  2179,  2180,  2181,  2182,  2183,  1982,  1983,
    1984,  2184,  2185,  1985,  2186,  2188,  2187,  2189,  2190,  2191,
    2192,  2193,  2194,  2195,  2196,  1986,  1987,  2197,  2198,  2199,
    2200,  2201,  2202,  2203,  2204,  2205,  2206,  2207,  2208,  2209,
    2210,  2212,  2211,  2213,  2214,  2215,  2216,  2217,  2218,  2219,
    1988,  2220,  1989,  2221,  2222,  1990,  2223,  1991,  2224,  2225,
    2226,  2227,  1992,  2228,  2229,  2230,  2232,  2233,  2231,  2234,
    1993,  2235,  2236,  2237,  1994,  2239,  2238,  2240,  1995,  2242,
    2243,  1996,  2241,  1998,  2244,  2245,  1997,  1999,  2246,  2247,
    2249,  2248,  2250,  2251,  2252,  2000,  2253,  2001,  2254,  2255,
    2256,  2257,  2258,  2260,  2259,  2261,  2262,  2263,  2264,  2266,
    2268,  2267,  2265,  2269,  2270,  2271,  2272,  2275,  2276,  2277,
    2278,  2273,  2274,  2002,  2279,  2280,  2281,  2283,  2284,  2286,
    2285,  2003,  2004,  2287,  2288,  2007,  2289,  2290,  2293,  2291,
    2292,  2295,  2294,  2296,  2298,  2297,  2005,  2299,  2006,  2300,
    2301,   189,  1948,   172,  1949,  1958,     0,  2368,  2367,  1023,
    1040,  2494,  2495,   572,   843,     0,     0,   844,     0,   571,
     842,   170,  2560,   125,     0,   568,   569,     0,     0,     0,
    1688,     0,  1604,  1604,  1604,     0,     0,  1604,  1604,     0,
    1607,  1604,   170,  1604,     0,    68,  1799,   268,     0,     0,
       0,     0,     0,  1941,     0,  1621,     0,  1841,  1842,     0,
    1849,     0,  1850,  1844,  2365,     0,     0,     0,     0,     0,
     170,  1057,     0,  1672,     0,   234,   243,   245,   246,   242,
       0,  2495,  2506,  1092,  1098,  1110,     0,  1770,   246,  1011,
     995,  1011,  1696,  1693,     0,     0,  1672,  1843,  2612,     0,
       0,     0,  2608,     0,  2613,     0,  1100,     0,     0,     1,
       5,     0,     0,  2084,  1975,  2188,  1783,  1781,  1936,     0,
     884,   911,     0,   889,     0,   887,  1954,  1953,  1952,     0,
     900,   899,   897,     0,   443,     0,     0,  2569,   891,  1037,
    2492,     0,   191,     0,    77,     0,     0,     0,  2498,     0,
       0,     0,     0,   124,     0,     0,     0,   121,  1125,  1125,
    2560,  2562,  2564,   572,   570,     0,     0,     0,  1692,  1691,
    1690,     0,  1688,  2009,  1959,  2020,     0,  1909,     0,     0,
       0,  1376,     0,  1964,     0,  2034,  2036,  1969,     0,     0,
    1132,  1132,   721,     0,     0,     0,  2058,  2059,  1915,     0,
       0,     0,  1906,  1916,  1975,  2096,  2097,     0,  1908,  2102,
       0,     0,     0,     0,  2119,  1913,     0,     0,  2156,  2158,
       0,     0,  2162,  2163,  2164,  2165,  1892,  1187,     0,   721,
    1905,  1912,  2181,  1898,  2189,  2195,  2196,     0,  2205,     0,
       0,  2227,     0,  2233,  2231,  2237,     0,     0,  2257,     0,
       0,   721,  1891,  2275,  2276,  2277,  2278,     0,  1907,  2002,
    1914,     0,  2289,  1132,   721,   721,     0,     0,     0,  2296,
    2298,  2301,     0,     0,     0,  2530,  1186,     0,  1344,     0,
    1261,  1370,  1144,  1150,  1164,     0,  1179,  1197,  1198,  1200,
    1299,  1199,  1205,  1204,  1580,  1902,  1203,  1202,  1903,  1904,
    1196,  1926,  1948,  1925,     0,     0,     0,     0,     0,     0,
       0,     0,  1608,     0,     0,  1590,  1604,    70,     0,     0,
    2412,  2427,  2428,  2424,  2429,  2447,  2430,  2434,     0,  2426,
    2418,     0,  2433,     0,  2422,  2431,     0,  2416,     0,  2432,
    2437,  2448,  2420,  2425,  2403,     0,  2410,  2414,  1938,  1485,
    2379,  2380,     0,    76,  1623,  1624,  1622,   979,     0,  1839,
       0,  1853,     0,  1052,   489,   480,     0,  1765,  1764,     0,
    1835,  2507,     0,     0,  1028,  1626,  1673,     0,  1625,  1830,
       0,  1828,  1825,  1827,   235,     0,     0,   265,  2412,     0,
    2397,     0,  2501,  2498,  2508,  2543,  2538,  2537,  2540,  2541,
    1116,  2542,  1115,  2539,  2536,  1125,  1111,  1113,  1114,   759,
       0,     0,  2322,  2323,  2169,  2189,  2324,  2273,     0,     0,
    2342,  2303,  2308,  2304,     0,  1732,     0,   759,  1778,  1733,
       0,     0,  1778,     0,  1520,  1768,  1771,     0,  2326,  1746,
     840,   839,   838,  2327,  1764,     0,  1720,  1734,     0,  1697,
    1739,     0,  2328,     0,  1767,     0,  1520,  1778,     0,  1713,
       0,     0,     0,     0,   241,  1016,  1015,   991,  1012,  1013,
       0,     0,   994,   996,   997,   993,     0,  2625,  2377,   979,
    1897,  1896,  1946,  2609,  1895,  2617,  2619,  2605,  2607,  2614,
    1094,     0,  2512,     6,    62,     0,     0,  1796,  2567,  2568,
    2566,   775,     0,  1132,  1955,  2561,   173,   898,     0,   444,
     173,     0,     0,     0,     0,     0,   445,   446,   378,   882,
     895,     0,     0,   894,  2569,     0,     0,  1067,  1069,  1068,
    1085,   193,   190,   171,     0,  1025,  1597,  1599,  1042,  2497,
       0,     0,  2499,  2503,  1185,  1184,     0,   118,   123,     0,
       0,     0,  2469,   122,  2463,  2565,  1125,  1125,  1125,  2557,
       0,  2545,  2552,  2553,  2556,  2555,  2554,  2551,     0,  2544,
    2547,  2548,  2550,  2549,  2569,  2563,     0,   845,   845,   845,
       0,  1675,  1678,  1682,  1686,  1689,     0,     0,  1490,  1218,
    1490,  1490,  1490,  1377,     0,     0,     0,     0,     0,     0,
       0,     0,  1490,     0,  1255,  1228,     0,  1256,     0,     0,
       0,  1917,     0,     0,     0,  2530,     0,     0,     0,     0,
    1349,     0,     0,     0,  2530,     0,     0,     0,     0,     0,
    1372,  1374,  1925,  1490,     0,     0,  1490,     0,     0,     0,
       0,     0,  1137,   755,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1490,  1490,     0,
       0,  1490,  1269,  1919,     0,     0,     0,  1918,     0,     0,
       0,  1911,  1910,  1893,     0,  1272,  1274,  1273,     0,  1490,
    1490,     0,     0,     0,  1208,  1207,  1209,     0,     0,     0,
       0,     0,     0,  1183,  1182,  1181,  1180,     0,     0,     0,
    1188,     0,  1189,  1190,     0,  1191,  1192,  1193,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1210,     0,     0,
       0,  1894,  1308,     0,  1605,  1585,  1592,  1587,     0,  1608,
    1588,  1596,   458,   457,  1613,  1614,  1594,  1609,  1610,     0,
    1593,  2461,  1589,     0,  1581,     0,    69,     0,  1820,     0,
       0,     0,  1816,  1818,  1817,     0,     0,  1821,     0,  1819,
    1800,  1804,  1808,  1801,     0,     0,   266,   269,   271,     0,
     274,  2413,  2411,  2445,  2444,  2449,     0,  2446,  2442,  2435,
    2470,  2439,     0,  2470,  2441,  2440,  2470,  2436,  2443,  2470,
    2408,     0,  1486,  1487,     0,  2378,     0,  1937,     0,     0,
    1075,  1854,  1855,  1851,  1485,  2366,  2369,     0,   490,     0,
       0,   499,     0,     0,    65,    66,     0,  1059,     0,  1058,
    1062,     0,     0,     0,  1629,  1619,  1628,  1411,  1831,  1832,
       0,   233,   258,   253,   261,   255,   257,   256,   262,   263,
     264,   259,   254,   260,   247,     0,  2411,     0,  2408,  2502,
       0,  2504,  2521,  1099,  2509,  1122,  1101,  1121,     0,  1112,
     758,     0,   761,   763,  1648,  1649,   762,   771,     0,   760,
       0,     0,     0,  2329,     0,   767,   769,   768,  2337,   766,
       0,     0,  2313,     0,  1774,     0,     0,  1745,     0,   572,
       0,     0,     0,     0,     0,     0,  1714,     0,     0,   611,
       0,  1738,  1521,  1772,  1773,  1778,     0,     0,  1778,     0,
    1751,  1768,     0,  1778,  1709,     0,     0,  1701,  1706,  1702,
       0,  1708,  1707,  1710,  1698,  1699,  1774,  1725,  1752,  1768,
    1737,  1744,     0,  1724,  1731,     0,  1742,  1768,  1768,  1778,
    1778,  1017,     0,  1000,  1001,     0,     0,  1694,  1414,     0,
       0,  2606,  2620,  2604,  2615,  2616,  2603,  1095,  2513,  1093,
    2514,     0,     7,     4,  1795,  1785,  1786,  1787,  1788,  1789,
    1784,  1782,  1797,  1798,   776,   775,   563,   566,   565,     0,
       0,  1957,     0,   890,     0,   432,   888,     0,     0,   410,
     389,   410,   447,   775,   902,     0,     0,   892,  1038,     0,
       0,   478,  1085,  1071,  1087,     0,   194,   196,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    78,    79,   101,  1027,  1026,     0,  1024,  1050,
    1049,  1047,     0,  1048,  1046,  1041,  1043,  1044,  2496,  2500,
     573,   775,   420,     0,   381,     0,     0,     0,     0,     0,
     572,     0,     0,  2546,   110,   846,     0,     0,     0,  1680,
    1601,  1411,  1603,  1936,     0,     0,     0,  1684,     0,     0,
    1491,  1490,     0,  1355,     0,     0,     0,     0,  1378,     0,
       0,     0,     0,     0,     0,     0,  1329,     0,  1355,  1133,
       0,   722,  1279,     0,     0,     0,     0,     0,     0,  1461,
    1462,  1463,  1464,  1472,  1465,  1466,  1467,  1474,  1479,  1468,
    1469,  1475,  1476,  1477,  1470,  1478,  1473,  1471,  1480,     0,
    1460,     0,     0,  1484,  1481,  1483,  1482,     0,  1350,  1342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1490,     0,     0,     0,  1490,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1291,     0,     0,     0,     0,     0,  1490,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1251,     0,  1928,  1927,     0,     0,     0,   808,     0,  1212,
       0,  1211,  1423,     0,  2515,  2531,     0,  2329,  1345,  1347,
       0,  1135,  1134,  1136,  1147,  1140,  1145,  1138,  1142,     0,
    1194,  2014,  1148,     0,     0,  1176,  2530,  1499,  1177,  1162,
    1167,  1168,     0,  1165,  1166,     0,  1170,     0,  1169,  1173,
    1174,  1175,  1178,     0,     0,     0,     0,  1201,  1206,  1371,
    1125,  1929,     0,  1583,  1595,  1766,  1611,  1650,     0,   981,
       0,     0,    71,    73,  1813,  1810,  1809,  1811,  1815,  1814,
    1812,     0,  1822,  2058,  2275,  2278,   278,     0,   251,   250,
     252,   275,     0,     0,  2438,     0,  2419,     0,  2423,  2417,
    2421,     0,     0,  2409,     0,  2415,  1489,  2092,  2173,     0,
    1492,  2382,  1616,  2624,     0,  1852,     0,     0,     0,  1053,
       0,  1125,   488,   487,   486,   485,     0,   501,   483,     0,
      67,     0,     0,  1836,     0,     0,     0,     0,  1030,  1627,
       0,     0,  1600,  1412,  1833,  1829,  1826,     0,     0,     0,
       0,     0,     0,     0,  2505,  2523,  2522,  2510,  1125,  1511,
    1126,  1126,  1925,  2344,     0,  2339,  2338,     0,     0,     0,
    2357,  2340,     0,     0,  2307,  2345,  2346,  2349,     0,     0,
       0,     0,     0,  2343,  2273,  2309,  2310,     0,  2315,  2305,
    2363,  2364,  2361,  2362,  2360,  2334,     0,  1776,  1779,  1780,
       0,     0,  1760,  1754,  1753,  1749,  1755,  1750,  1763,  1762,
    1761,  1722,  1721,  1531,  1532,  1530,  1524,  1525,  1529,  1528,
    1717,  1769,  1759,  1757,  1747,  1778,  1758,  1756,  1703,  1704,
    1705,     0,  1520,     0,  1776,  1778,  1768,     0,  1778,  1778,
    1741,  1743,     0,  1003,  1014,   999,   998,  1432,  1431,     0,
    1385,     0,  1387,  1384,  1383,  1382,     0,  1431,  2610,  2618,
    2622,     0,  1520,  2520,  2518,   564,  1650,  1650,     0,  1956,
       0,     0,     0,     0,     0,     0,     0,   174,   183,     0,
       0,   387,   388,  1650,   386,   433,   434,   437,   438,   439,
       0,     0,     0,     0,     0,     0,     0,     0,   127,   440,
    1650,  1650,   383,   411,   412,   415,   416,   417,   418,   419,
     379,     0,   384,   977,  1650,   977,     0,  1650,  1650,   977,
    1650,     0,     0,  1650,  1650,     0,     0,  1650,     0,     0,
     977,     0,  1650,     0,   971,     0,     0,  1650,  1650,  1650,
    1650,  1650,   977,     0,     0,  1650,   478,  1650,  1650,     0,
       0,   987,     0,     0,  1650,     0,     0,  1650,     0,  1650,
     918,   970,   576,   598,   599,   883,   917,   919,   931,   474,
       0,   949,   972,     0,   904,   906,  2570,  2571,  2572,  1074,
    1066,  1073,  1070,  1085,  1083,  1072,   835,   834,     0,  1086,
     192,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1598,  1051,  1045,
     119,   775,  1650,  1650,  1650,  1650,   385,   421,   422,   425,
     426,   427,   428,   431,   429,   430,     0,     0,   397,     0,
       0,  2464,     0,  2598,     0,     0,     0,   172,   574,     0,
       0,   847,     0,     0,     0,     0,     0,  1676,     0,  1939,
    1683,  1414,  1687,  1686,     0,  1275,     0,  1322,     0,  1324,
    1325,  1326,     0,     0,     0,     0,     0,  1276,     0,  1226,
    1277,  1278,     0,     0,     0,     0,  1328,     0,   723,     0,
       0,  1229,  1230,  1223,  1215,     0,     0,  1301,     0,     0,
    1231,     0,     0,     0,     0,     0,  1302,  1373,     0,  1375,
    1929,     0,  1334,  1283,  1236,     0,  1332,     0,  1237,  1303,
    1304,  1305,  1285,  1286,     0,  1307,     0,  1287,     0,     0,
    1290,     0,     0,  1239,  1338,  1336,     0,     0,     0,     0,
    1340,  1241,     0,     0,     0,  1240,     0,     0,     0,     0,
       0,     0,     0,  1243,     0,  1224,  1337,  1339,  1293,     0,
       0,     0,     0,     0,  1252,     0,  2524,  1422,  2532,  1423,
       0,     0,  2526,  2516,  2521,  2529,  1216,     0,     0,  1930,
    1141,  1146,  1139,  1143,  2530,     0,     0,     0,     0,  1160,
    1159,     0,     0,     0,  2530,  1499,  1163,     0,     0,  1318,
    1319,  1368,     0,  1586,  1584,  1612,  1651,     0,  2462,   983,
     982,  1591,   981,    74,     0,  1807,  1823,  1802,     0,   270,
     279,   272,   276,   277,   273,  2474,     0,  2473,     0,  2457,
    2460,  1936,     0,     0,     0,  2392,  2386,  2393,  2395,  2389,
    2394,  2396,  2387,  2388,  2383,  2390,  1493,  1522,     0,  1076,
    1078,  1079,  1077,  1085,     0,     0,  2372,  2373,  2371,  2370,
     491,     0,  1556,  1557,  1542,  1543,  1541,  1544,   500,  1545,
    1555,     0,   512,     0,   491,  1838,  1837,     0,  1060,  1063,
    1064,  1035,  1034,  1036,  1029,  1031,  1032,   556,  1633,     0,
       0,     0,  1639,  1620,  1630,     0,     0,   248,     0,     0,
       0,     0,     0,     0,  1120,  1414,  1572,  1117,  1105,  1522,
    1512,  1104,  1127,  1123,     0,   774,   773,   772,   770,     0,
       0,     0,     0,  2351,  2352,     0,     0,  2330,  2331,  2332,
       0,  2335,  2312,  2313,     0,  2314,     0,  1775,     0,  1726,
       0,  1748,     0,     0,  1719,     0,  1740,  1700,  1728,  1718,
    1492,  1768,  1715,  1716,     0,     0,  1019,  1018,     0,   992,
    1005,  1431,  1414,     0,     0,  1408,  1433,     0,  1433,  1414,
    1414,     0,  1414,  1411,  1428,     0,     0,  2621,  1513,  2519,
       0,     0,   886,   177,   180,   178,     0,   179,     0,     0,
     442,   441,     0,  1766,   435,   131,   130,   132,   133,  1539,
    1540,  1536,  1537,  1535,  1538,   135,   134,   129,   901,     0,
       0,     0,  1766,   413,   390,   391,   394,   395,   396,   978,
     876,  1054,   953,     0,   644,   876,   831,   836,   836,   951,
       0,     0,  1054,     0,     0,     0,     0,     0,  1054,     0,
       0,     0,  1650,     0,   964,   913,     0,     0,     0,     0,
       0,   965,     0,     0,   914,  1650,     0,     0,     0,     0,
       0,     0,  1054,     0,     0,   476,     0,     0,  1054,   478,
     990,   989,   988,     0,  1054,  1054,     0,   604,   605,   603,
       0,     0,   596,   577,   775,   915,   475,   916,   643,     0,
     984,   640,   646,  1932,     0,     0,     0,   141,  2574,     0,
    1452,   195,   102,   100,    82,  1944,    86,    88,    81,   106,
    1549,  1550,  1548,  1546,  1547,   107,    84,    85,    87,    91,
      90,    92,    93,    96,    97,    94,    89,    95,    83,    98,
     108,   109,    80,     0,     0,     0,     0,  1766,   423,     0,
       0,  1650,   380,   398,   399,   402,   403,   404,   405,   406,
     409,   407,   408,     0,  2465,  2467,     0,     0,   374,   373,
       0,   136,  2592,     0,     0,   643,   111,   474,   575,   578,
     869,   871,   870,   861,   860,   112,   114,   116,  1602,  1686,
    1414,  1492,  1937,  1492,     0,  1685,     0,     0,  1323,  1356,
       0,  1379,     0,  1220,   735,   735,   719,  1364,   715,   735,
    1360,   719,  1362,     0,     0,     0,     0,     0,  1330,  1327,
       0,     0,     0,     0,     0,  1353,     0,     0,     0,  1225,
       0,  1313,  1335,  1333,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1341,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     797,   803,   806,   807,   809,   801,     0,  1295,  1213,  1125,
    2533,  2535,  1096,     0,  2525,  2527,   878,  1346,     0,  1157,
    1153,     0,  1151,  1498,  1172,  1171,     0,     0,     0,  1161,
    1126,  1309,  1125,     0,  1369,  1931,   456,   610,  1582,    72,
    1805,     0,     0,  2471,     0,  2482,     0,     0,     0,     0,
       0,     0,     0,  2381,  1523,  1660,     0,  1085,  1089,  1947,
    1845,  2374,  2375,     0,   492,   493,   495,  1126,   509,   489,
       0,   481,   484,     0,     0,  1033,  1110,     0,  1652,  1637,
    1644,  1638,     0,     0,     0,  1636,  1921,  1920,  1927,  2508,
       0,  1458,     0,     0,  2402,     0,     0,     0,  2511,  1492,
    1492,  1566,     0,     0,  1102,  1107,  1103,  1106,     0,  1124,
    1131,  1130,  1922,  1929,  2341,     0,     0,     0,     0,  2356,
    2350,  2347,  2348,     0,  2311,  2333,  2317,  2316,  2319,  2321,
    1777,  1520,  1736,  1735,  1527,  1526,  1711,  1520,  1730,  1778,
       0,     0,     0,     0,     0,  1007,     0,  2515,  1426,     0,
    1410,  1409,  1434,     0,  1414,  1433,  1433,     0,  1390,  1389,
    1664,  1667,     0,  1388,  1485,  1416,  1110,  2611,  2623,     0,
     609,   608,   182,   181,   187,   188,   460,   448,   459,   436,
     128,   449,   450,   414,     0,   392,   645,   877,   936,     0,
       0,     0,   836,   639,   876,   845,   837,   876,   876,   973,
     974,     0,     0,   587,   584,   955,   592,   934,   925,   935,
     946,   948,     0,   586,   606,     0,     0,   594,   876,   920,
     962,   963,   981,   581,     0,     0,   619,   620,   618,   600,
     607,   975,   976,   582,   583,   957,     0,  1507,  1509,  1517,
     589,   588,     0,   585,   591,   590,     0,   933,   968,   941,
       0,   617,   615,   612,   614,   613,   616,   595,   593,   930,
       0,   977,   977,   950,     0,   627,   628,   630,   631,  1935,
       0,   986,   952,     0,   632,   641,   633,     0,     0,     0,
     151,     0,     0,   903,     0,   144,   142,   153,     0,     0,
       0,  1455,     0,  1456,  1453,  1454,     0,   103,   105,   455,
     454,   453,   452,   424,     0,     0,     0,  1766,   400,  2466,
       0,     0,  2599,   377,   375,   376,     0,     0,   197,   625,
     626,   624,   623,     0,   463,     0,   461,     0,   473,     0,
    1856,   775,   579,     0,     0,     0,     0,  1492,  1511,  1940,
    1679,     0,  1253,  1380,     0,     0,   736,  1357,   783,     0,
    1366,     0,  1367,   717,   716,  1359,  1361,  1365,  1363,  1219,
    1227,  1300,  1222,  1221,     0,     0,     0,  1259,  1281,     0,
    1260,  1351,  1354,     0,     0,  1233,     0,  1235,     0,     0,
    1315,  1284,  1306,  1262,  1288,     0,  1238,  1214,     0,  1263,
       0,  1268,  1266,     0,  1242,     0,     0,  1249,     0,  1247,
       0,  1248,     0,  1250,  1292,  1294,     0,     0,   808,   794,
     795,   796,     0,   798,   800,   802,     0,     0,  1424,  2534,
    1097,     0,     0,  1348,  1149,     0,  1158,  1155,     0,  1152,
    1127,  1320,  1310,     0,  1803,   287,   282,   290,   284,   286,
     285,   291,   292,   293,   294,   288,   283,   289,   281,   280,
    2472,     0,  2407,  2459,  2458,  2475,  2475,  2475,     0,  1494,
       0,  1617,  1080,  1085,  1089,     0,  1081,  1856,   496,     0,
       0,     0,   516,     0,   514,   482,  1061,  1125,  1634,  1646,
       0,  1654,     0,     0,  1631,  1641,     0,     0,     0,  1640,
     478,     0,   249,     0,  2399,  2400,  2398,  1522,  1500,     0,
       0,  1578,     0,  1573,  1118,     0,  1129,  1128,     0,  2359,
    2358,  2354,  2353,  2355,  2336,     0,     0,  1727,  1729,  1723,
    1022,  1021,  1020,  1004,     0,     0,  1009,  2521,  1485,  1418,
    1414,  1386,  1414,  1397,     0,     0,  1414,  1393,  1391,  1395,
       0,  1492,     0,  1450,  1125,  1924,  1514,  1517,   393,   938,
       0,   876,   832,   833,   845,     0,   845,   845,     0,     0,
     924,     0,  1042,     0,   929,   771,   601,   961,   960,     0,
     602,     0,   922,     0,  1518,  1519,  1510,   477,   921,   943,
     927,  1822,   954,   643,   985,   813,   711,   660,   651,   735,
     654,   653,   697,   719,   665,   715,   713,   683,   715,   715,
     690,   689,   707,   693,   673,   783,   783,   672,   710,   783,
     694,   692,   696,     0,   698,   715,   703,   691,   695,   712,
     688,   685,   709,   735,   719,   719,   669,   708,   783,     0,
     701,   735,   739,   671,   783,   790,     0,     0,   735,   737,
    1934,   152,   140,     0,     0,   905,   907,     0,     0,   908,
    2576,     0,  2578,     0,  1088,     0,    99,     0,     0,   382,
     451,   401,  2468,     0,   208,  1125,     0,     0,   198,   200,
     201,     0,     0,     0,   574,  1858,  1857,   462,   559,   580,
       0,     0,     0,  1686,  1681,  1533,     0,  1381,     0,     0,
       0,     0,   777,   788,   786,   780,     0,   784,   785,  1358,
       0,     0,  1331,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1217,     0,  1311,     0,     0,     0,     0,
       0,     0,  1246,  1244,  1245,   792,  1297,     0,   805,   799,
     797,   804,     0,  1522,  2515,   879,  1154,     0,  1321,     0,
       0,     0,  2480,  2480,  2480,  1659,  1658,     0,  1657,  1661,
    1082,  1090,     0,   494,   497,     0,     0,     0,   513,     0,
     557,     0,     0,     0,  1655,  1643,  2512,  1632,  1635,  1929,
    1413,  1459,  2401,  1109,     0,  1495,  1577,  1574,     0,  1567,
    1569,  1571,     0,  1923,  2318,  2320,  1006,     0,     0,  1002,
    1419,  1417,  1427,     0,  1382,  1414,  1414,     0,  1382,     0,
       0,     0,  1666,  1511,  1668,  1415,  1447,  1429,     0,  1516,
       0,     0,   937,     0,     0,     0,     0,     0,     0,   967,
       0,   984,   926,   947,   969,     0,   739,  1054,  1508,   942,
     944,  1030,     0,   629,     0,   817,   659,   652,   670,   668,
     724,   714,     0,   724,   724,   679,   697,   674,     0,   783,
     687,   678,   699,   702,   704,   706,   724,     0,   783,   667,
     666,   676,   663,   724,   747,     0,     0,     0,   743,     0,
     811,     0,   750,   647,   740,   742,     0,     0,   700,   783,
     656,   791,   790,   658,   783,   790,   724,     0,   738,   724,
       0,   138,   143,   154,   155,   896,  2575,     0,  2573,     0,
    1084,  1457,   104,     0,     0,   211,   209,   210,     0,   204,
     206,   201,  2586,     0,  2593,     0,     0,  2591,   464,   466,
     474,   560,     0,     0,  1517,   874,     0,     0,     0,  1677,
    1254,   733,   731,   734,   732,   779,   778,   782,     0,   781,
     790,   720,     0,  1257,  1258,  1282,  1352,  1343,  1280,     0,
    1234,  1312,     0,     0,  1289,  1264,  1267,  1265,  1270,  1271,
       0,  1296,     0,  1117,  1117,   621,  2528,  1156,  1806,  2483,
       0,     0,  2479,  2477,     0,  2478,  2476,  2450,     0,  2405,
    2406,  2404,  2391,     0,     0,     0,  1125,   502,     0,   519,
     518,   515,  1522,  1645,  1647,  1653,  1642,     0,  1496,  1511,
     764,  1570,     0,  1119,  1008,     0,     0,  1398,     0,  1402,
    1407,  1403,     0,  1394,  1392,     0,  1533,  1451,     0,  1522,
    1517,   940,     0,   642,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   966,  1899,   956,   478,   958,   923,
       0,   928,   597,     0,   816,     0,   821,   728,   729,   730,
     680,   725,   727,     0,   682,   650,   675,   705,   681,     0,
     677,   664,   753,   752,   756,   745,   757,     0,     0,   751,
     741,   749,   744,   655,   657,   661,   662,   648,     0,   649,
    1933,   145,   909,   314,  2577,  1100,     0,  2582,   126,  2590,
    2600,   208,     0,     0,   149,     0,   199,   771,   202,  2512,
    1856,     0,   469,   848,     0,   873,     0,   850,   852,  1534,
     789,   787,     0,     0,  1314,  1316,   793,     0,  1425,   622,
    2456,  2455,  2454,  2451,     0,     0,     0,     0,     0,     0,
    2481,  2485,  1656,     0,     0,     0,   510,     0,   506,   508,
       0,   544,   558,  1504,  1517,     0,  1522,     0,  1575,  1568,
    1010,  1420,     0,     0,     0,     0,     0,  1665,  1439,  1440,
       0,     0,  1445,  1449,  1430,  1515,   939,     0,     0,   848,
       0,     0,  1901,  1900,   932,   984,     0,   814,     0,   818,
     819,   820,     0,   812,   726,     0,   880,     0,   746,   748,
       0,   147,   340,     0,   326,   312,     0,     0,     0,   316,
     156,   159,   157,     0,   158,   164,     0,   165,   166,   167,
     168,   169,   160,   338,   339,   163,   161,   162,     0,  1950,
       0,  1951,  2580,     0,     0,  2579,   175,   205,     0,     0,
     141,   150,  2594,   754,   467,   465,     0,  2508,     0,  1650,
     113,   849,   865,   864,   854,  1517,     0,     0,   115,   851,
     867,   858,   117,   853,   866,   856,   718,  1232,  1298,  2452,
    2486,  2489,  2487,  2488,  2490,  2484,     0,  1411,  1126,     0,
     503,   504,     0,   522,     0,  1650,     0,     0,  1650,  1650,
    1650,  1650,   537,   545,   547,     0,  1505,  1506,     0,  1501,
    1503,  1497,  1558,   765,  1859,  2515,  1399,     0,  1404,     0,
    1396,  1435,  1435,  1446,     0,   848,   634,   850,   852,   959,
       0,   815,     0,     0,   783,     0,   783,   146,     0,   139,
       0,     0,   325,   328,     0,     0,   331,   321,   320,   322,
       0,   315,   314,   314,   368,   319,   365,   364,   357,  2512,
       0,     0,     0,  2601,   207,  1125,   153,     0,   471,   470,
     863,     0,   855,   872,   875,     0,   859,   857,  1662,  1670,
       0,  1846,     0,   511,   510,   507,     0,   520,     0,  1650,
    1650,     0,     0,     0,     0,     0,   517,   546,  1650,  1517,
       0,  1108,     0,  1867,  1421,     0,     0,     0,  1443,  1441,
     638,   637,   635,   636,     0,   827,     0,   826,     0,   823,
     822,   684,   881,   686,   148,   341,   352,   355,   347,   327,
       0,     0,     0,   317,   314,     0,   301,   299,   300,   306,
     307,   308,   309,   310,   311,   302,   305,   303,   304,   314,
       0,   216,     0,     0,  2581,     0,  2583,     0,   185,   184,
     176,     0,   314,  2587,     0,  2595,  2512,   862,   868,     0,
       0,   764,   498,   505,   530,   523,   526,     0,   555,     0,
       0,  1553,  1551,  1552,   551,  1554,   552,   550,   548,   541,
       0,   539,     0,  1502,  1559,     0,     0,     0,     0,  1860,
    1862,     0,  1576,  1401,  1406,     0,  1436,     0,     0,     0,
     945,   829,   830,   828,     0,     0,     0,     0,   314,   348,
       0,   323,     0,     0,     0,     0,   214,   371,     0,   212,
     359,   359,  2584,  2585,   186,  2602,     0,   155,   175,   472,
    1669,  1671,  1847,   530,     0,   528,     0,   524,   521,   525,
     553,   554,     0,   538,     0,   549,     0,     0,     0,     0,
       0,  1861,     0,     0,  1868,  1870,  1438,  1437,  1452,     0,
       0,     0,   349,   355,   345,   353,   314,     0,     0,   313,
     332,   367,   215,     0,   369,     0,   314,     0,   358,   360,
     362,     0,   137,  2596,  1873,   527,     0,   535,   531,   533,
     536,   544,   543,   540,  1125,  1865,  1866,     0,  1863,     0,
       0,  1869,     0,     0,   825,   824,     0,   346,     0,     0,
     344,   324,   329,   314,     0,   314,   227,   226,     0,   218,
     295,   366,     0,   217,  2588,   314,     0,  1859,   529,     0,
       0,   542,     0,     0,  1562,  1564,  1864,  1872,  1871,  1444,
    1442,   350,     0,   314,     0,   314,     0,   314,     0,     0,
       0,     0,     0,   213,   314,  2597,     0,  1867,   534,   532,
    1126,  1560,  1125,     0,   342,   314,   330,   335,   372,     0,
     221,   296,   297,     0,   224,  2589,     0,  1875,  1565,  1563,
     314,   314,   331,   334,   370,     0,     0,   219,   220,   232,
     231,   223,     0,  1874,     0,  1879,   314,   314,   336,   240,
     238,   314,   228,   236,   230,     0,   237,   298,   225,     0,
       0,  1886,     0,   222,   239,  1877,  1878,  1876,  1881,     0,
       0,  1883,  1884,     0,  1848,   229,  1885,  1880,     0,  1887,
    1889,     0,  1882,     0,  1125,  1888,     0,  1126,  1890
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   591,  1453,    57,    58,    59,    60,    61,  1304,
      62,   797,  1236,  1752,  1753,    63,   534,    64,  1014,  1522,
    1523,  3026,  3027,  1524,    65,  2128,  3063,  3064,  3065,  1541,
     502,   503,  1977,  1978,  1039,  3047,  3013,  3811,  3017,  3921,
    4049,  3960,  2054,  3379,  3812,  3813,  3930,   529,  2126,  1473,
    4073,  1957,  4170,  1958,    66,   622,  1012,  1495,  1496,  3397,
    3398,  3646,  3399,  3638,  3639,  3640,  3641,  4296,  4144,  4239,
    4297,  4370,  4405,  4411,  4412,  4338,  4421,  4422,  4423,  4409,
     865,  4424,    67,   557,   558,   867,  1334,  1766,  1335,    68,
      69,   528,  1256,  1257,  1258,  1259,  2304,  1767,  2299,  2300,
    3178,  4339,  4407,  4145,  4146,  4056,  4147,  3933,  4148,  4060,
    4149,  3936,  4150,  4151,  4152,  4153,  4288,  4154,  4055,  4331,
    4141,  4142,  4333,  4387,  4403,  4155,  3943,  4050,  4226,  3944,
    4051,  4283,  4137,  4284,  4326,  4383,  4138,  4227,  4329,  4230,
    4156,  4162,  4298,  4157,  4163,  4158,  3948,  4067,  4161,  4065,
    4160,  4335,  4293,  2640,  3046,   610,   611,   633,  2118,   612,
    1028,   987,  1475,  1990,  1991,  2494,  2495,  2622,  2623,  2624,
    1982,  1983,  1984,  2106,  2107,  2108,  1964,  1965,  1966,  1479,
    1961,  1962,   613,   988,   998,  1985,  1986,  1987,  2628,  2110,
    2111,  2112,  2113,  1224,  1225,  2907,  2646,  3056,  3829,  3407,
    3967,  4176,  3057,  3058,  2566,  2972,  2064,    70,   546,   845,
    1301,  2353,  1302,  2793,  2794,  2795,  1802,  1803,  3717,  1807,
    2352,  3866,  4094,  3867,  3868,  2797,  4000,  2801,  3203,  3204,
    3487,  3719,  3871,  4187,  4096,  4258,  4185,  4254,  4186,  4256,
    4350,  4308,  4309,  4106,  4200,  4201,  4262,  4311,  4012,  4013,
    4014,  2372,  2806,  3722,  3652,  2100,  1465,  1466,   504,   505,
     506,   630,  2647,  2041,  2648,  2649,  2990,  2043,  2044,  2766,
    1388,  2987,  2959,  3693,  3053,  2994,  2995,  2996,  2997,  2998,
    3004,  2923,  2503,  2504,  2571,  3007,  3827,  3572,  3587,  3363,
    3364,  3365,  3366,  3367,  3368,  3369,  3082,  3083,  3080,  1087,
    3780,  3781,  3782,  3076,  3077,  3619,  3603,  3604,  3605,  3828,
     760,  3795,  3426,  1356,  1357,  3878,  1367,  1368,  2396,  1845,
    2397,  1469,  3427,  3428,  3429,  3613,  3137,  3690,  3143,  3144,
    3145,  2730,  2731,  2732,  2733,  2734,  2243,  3606,  3006,  3565,
    3773,  3776,  3913,  4129,  2505,  2924,  2506,  2927,   938,   507,
    2507,  2508,  1555,  1556,  3970,  3978,  3982,  3971,  3983,  3979,
    3972,  3973,  3974,  3985,  3981,  2653,  3653,  3654,  2916,  3153,
    3915,    71,  1483,   981,   990,   986,  1004,   617,  1484,  2055,
    2577,  3625,   600,  2045,  3557,  3292,  3561,  2046,  2938,  2047,
    3279,  3542,  2048,  3309,  3559,  3770,  2939,  2940,  2049,  2050,
    2051,  3291,  3301,  3905,  2509,   124,  2291,  3002,  2553,    72,
    1431,    73,   952,   953,   954,  2439,  2440,  2875,  3256,  3519,
     947,   948,   949,  1923,  2437,    74,   625,  1528,    75,  1312,
    2364,  2365,  2366,    76,  1005,    77,    78,   626,  1535,  1536,
    1537,    79,  1297,   131,    80,   853,  1307,  1309,  1310,    81,
     621,  1006,  1007,  1008,  1009,  2060,    82,  1794,  2329,  2330,
    2331,  2332,  1492,  2579,  1493,  1494,  2069,  3196,    83,    84,
     588,  2251,   563,   874,   564,   565,  1839,  2387,  3694,   885,
     886,   887,  2834,  1346,  1347,  1348,  2392,  2839,  1084,   761,
     762,   763,   764,  1178,  1179,  3607,   765,  1188,  1713,   766,
     767,   768,   769,   770,   771,  1740,  3109,  3110,  3445,  2278,
    2279,  2280,   772,  2165,  3094,  2179,   773,  1171,  1698,  1629,
    3437,  3101,  1572,  2148,  2683,  2763,  2245,  1109,  1110,  1074,
    2155,  1578,  1930,  1931,  1932,  1933,  1934,  3530,  3529,  3531,
    3882,  3738,  3884,  3742,  2450,  1822,  1823,  1935,  1936,  2876,
    3736,  4025,  2246,  2247,  2248,  3463,  2877,  3260,  2895,  2896,
    3749,  2441,  1937,  2883,  4118,  3891,  3892,  4219,  4218,  3893,
    3747,  3748,  3535,  3536,  3022,  3023,  3024,  2820,  1619,  1620,
    1627,  1284,  1285,  1573,  2327,  2782,  3729,  3875,  2269,  3505,
    3873,  4019,  2052,  2967,  2968,  2389,  2390,  2899,  3276,  3306,
    1391,  3695,  2784,  1896,  1897,  3659,  4410,  2908,  2595,  4194,
    2349,  2350,  4111,  4266,  4353,  4354,  4355,  3231,  3232,  3509,
    3510,  2391,  2831,  3233,  3730,  4024,    85,   511,    86,  1750,
    2284,  1233,  2296,  1016,  1314,  1559,  1560,   785,   524,  1226,
    1227,  1228,    87,   535,  2328,    88,   553,  1820,   837,   857,
    1315,  1316,  2373,  2807,  2814,  2374,  2819,  3496,  2809,  3208,
    3209,  2286,  2287,  2810,  3211,  3493,  3477,  3478,  3191,  3714,
      89,   576,  3271,  2890,  2891,  4088,  4089,   858,    90,   510,
    1061,  2661,  1565,  2136,  1062,  1063,  2139,   651,   652,    91,
     956,   573,  1413,  1414,  1415,  1912,    92,   567,   939,  2861,
    2867,  1891,   849,  1229,  1395,   942,  1396,  1877,  2419,  1377,
      93,   977,   976,  1460,    94,   596,  1461,    95,   798,  1250,
    1762,  2770,  3164,  1251,  1252,  2297,    96,   554,   862,   863,
    1319,  1825,    97,   548,   850,  1813,    98,   539,    99,   100,
     841,  3197,  4181,  4304,   543,  1796,  1293,  3408,  4113,  4209,
    4210,  4212,  4274,  4275,  4347,  4415,  4437,  4431,  4440,  4441,
    4444,  4449,  4450,   775,   963,   776,  3764,   777,   778,   779,
    2815,  2816,  3277,   780,  2817,   781,  2917,  1017,  1562,   532,
     482,  2584,   607,   964,  2790,   783,  3950,   984,  1032,   484,
     485,   101,   566,   901,  1372,  1362,  1371,  1865,  2413,  1869,
    2415,  2416,  3245,  2857,  3246,  2858,   943,  1861,  1866,  2859,
     904,  1854,  1855,  1856,  1857,  2850,  1851,  1875,   102,   842,
     489,  1295,  1296,  2338,   103,   575,   104,  1286,  1790,  1791,
    2324,  2781,  2325,   105,   870,   106,   824,  1784,   825,  1262,
     826,   827,  1276,  1270,  1279,  1273,  3854,  3706,  3707,  2312,
    1232,  1033,  1034,  1776,  2306,  2307,  3472,  3709,  3182,  3860,
    3861,   107,   132,   492,   628,  1023,  1340,   108,   109,   110,
     111,  1343,  1448,  2383,  1449,  2252,  1450,  1451,  1944,  1837,
    1694,  1695,  3151,  1168,  1169,  2255,  2739,  2740,   888,   637,
    1049,  1041,   125,   126,   127,   640,   641,   128,  1002,  1003,
    2578,  3019,  3381,  3628,  3629,  3817,  3955,  1043,  3823,  4246,
    4374,  1044,  1045,  3048,  3825,  4077,  4248,  4345,  1046,  2637,
    3394,  3956,  4172,   112,   965,   585,  1446,  1441,  1443,  1940,
    2457,   113,   114
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3809
static const int yypact[] =
{
    4536,  1894,    79, -3809,  -153,   760, 47001,   666,  1169,  1169,
     413,  2928, -3809, -3809, -3809, -3809, -3809,  2967, -3809, 47001,
      79,   937, -3809, 23252, -3809, -3809,   675,   915,    87,  1169,
      79, -3809, 47001, -3809,   657,  1712,    79, -3809, -3809, 40921,
   -3809,   413, 47001, -3809, -3809, -3809, 40921,  -126,   664,   626,
     776, -3809, -3809, 47001,  2539,  -127,  1172,  1038, -3809, -3809,
     954, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, 23864, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809,  1039, 47001,  1215, 47001, -3809,
    1250, 47001, 39097, 47001,  1002,  1402, -3809, -3809,  1553, -3809,
   -3809,  1169,   413, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809,  1053, -3809, -3809,  1141, -3809, -3809, -3809,
   -3809, -3809,  1703,  1515, -3809,  1624, 39097, -3809, 47001, -3809,
   -3809, -3809,   227, -3809,  1219, -3809,  1291,  1614,  1639,  1641,
     972, 10834,  1652,  1652,  1652, 47001,  1717,  1652,  1652, 47001,
   -3809,  1652, -3809,  1652,  1169, -3809, -3809, -3809,  1758,  4484,
   47001,  1538,   187,   642, 39097,   914, 47001, -3809, -3809, 10834,
   -3809,  1695, -3809, -3809, -3809,  1169,  1888,  1755,   212, 47001,
   -3809, -3809,  1169,   198,  1304,  1348, -3809, -3809,  1483, -3809,
    4847,   153, -3809, -3809, -3809,  1686, 25700,  5739,  1483,   -75,
     630,   -75, -3809, -3809, 47001,  1169,  1700, -3809, -3809,   215,
     215,   215, -3809,   215, -3809,   215, -3809,  -127,  1349, -3809,
   -3809,  1365, 47001,   985,  1846,  1455, -3809, -3809,  1366,   -61,
   -3809,  1426, 36057, -3809, 47001, -3809, -3809, -3809, -3809,  1646,
   -3809, -3809, -3809,  1868, -3809, 23252, 47001,  1519, -3809, -3809,
   -3809, 23252,  1398, 47001, -3809, 23252, 23252,   196,  1237,    65,
   47001, 47001,  1856, -3809,  2056, 36057,  1605, -3809,   142,  1835,
    1553,  2058, -3809,  1515, -3809, 47001, 47001, 47001, -3809, -3809,
   -3809, 41529,   972,  1449,  1461,  1465, 15237, -3809,  1467,  1479,
    1492, 10834,  1499,  1511,  1513,  1526,  1529,  1531,  1560,  1574,
    1576,  1576,  1588,  1590,  1616,  1622,  -190,  1630, -3809,  1643,
    1649,  1653, -3809, -3809,  1670,  1685,  1687,  1711, -3809,  1721,
    1728,  1733, 11463,  1736,  1757, -3809, 20188,  1764,  1774,  1777,
    1779,  1782,  1807,  1812,  1817,  1819, -3809, -3809, 10834,  1588,
   -3809, -3809,  1821, -3809,  1823,  1826,  1828,  1836,  1838,  1841,
    1855,  1860,  1863,  1885,  1890,  1916,  1923,  1940,  1945,  1950,
    1952,  1588, -3809,   521,  1956,  1963,   537,  1965, -3809,  1970,
   -3809,   224,  1972,  1576,  1588,  1588,  1990,  1995,  1998,  2001,
    2010,  2012, 15237, 15237, 15237, 10834, -3809, 47001, -3809, 47001,
   -3809,  1900,  3322, -3809,  2365, 15237,   890, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  1444,  1604, -3809, -3809, -3809, -3809,
   -3809, -3809,  2023,  1692,  2014, 47001, 47001, 47001,  1876, 47001,
   47001, 39097,   994, 47001, 36057, -3809,  1652,  1750,  2836, 28755,
    1976,  2041,  1480, -3809, -3809, -3809, -3809, -3809,  2110, -3809,
   -3809,  1969, -3809,  2144, -3809, -3809,   171, -3809,   211, -3809,
   -3809, -3809, -3809, -3809, -3809,  2151,  1892, -3809, -3809,   102,
   -3809, -3809, 47001, -3809, -3809, -3809, -3809,  2432,  2175,  1900,
    2619,   912, 23252, -3809,  1262, -3809,   469, -3809, -3809,  2400,
   -3809, -3809, 36057, 23252, -3809, -3809, -3809, 20800, -3809, -3809,
    2627, -3809,  2052, -3809, -3809,  1604,  2617, -3809,  1976,  2324,
   -3809,  2333,  2236,  1237,  2133, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809,  2091,  1686, -3809, -3809,   174,
    2262,  2086,   473,   680, 33625,   953,   706,    72, 26311, 34233,
    2118, -3809, -3809, -3809,   732, -3809,  2588, -3809,   683, -3809,
    2130,  2210,   683, 36665,  2501,  1325, -3809,   346, -3809,  2580,
   -3809, -3809, -3809, -3809,  2266,  2260, -3809, -3809,   414,  2242,
   -3809,  2634, -3809,    26, -3809,  2298,  2501,   683,  1325, -3809,
    2542,  2670,   466,   897, -3809, -3809, -3809, -3809,  2203, -3809,
     -83,  2752, -3809,  2209, -3809, -3809, 23252, -3809, -3809,  2432,
   -3809, -3809, -3809,  2218, -3809,  2484,  2323, -3809, -3809,    38,
   -3809,  2238,   743,  2715, -3809, 39097,  1904, 37273, -3809, -3809,
   -3809,  2748,  2764,  1576,  2240, -3809, -3809, -3809,  2877, -3809,
   -3809,  2263,  2782,  2782,  2782,  2886, -3809, -3809, -3809, -3809,
   -3809,  2428,  2300, -3809,  1519, 23252,  2663,  2275, -3809, -3809,
    2520, 10834, -3809, -3809,  3853,   492, -3809, -3809,  1074, -3809,
    2849,  2479, -3809, -3809, -3809, -3809,  2750, -3809, -3809,  2877,
    2804,  2782,  2698,  2290, -3809, -3809, -3809, -3809, -3809, -3809,
     199, -3809, -3809, -3809, -3809, -3809, -3809, -3809,   206, -3809,
   -3809, -3809, -3809, -3809,  1519, -3809, 23252, -3809, -3809, -3809,
   23252, -3809,  2292, -3809,  2287, -3809, 10834, 10834,   323,  2855,
    2915,  2915,  2915,  1900,  2328, 10834, 10834, 10834, 10834, 10834,
   10834, 10834,   335,  2303, -3809, -3809,   628, -3809,  2305, 10834,
   10834, -3809, 10834, 10834, 24476, -3809,  3359, 10834, 10834,   387,
    2806, 10834, 10834, 10834, 10834,  2570, 10834, 10834, 24476,  2939,
    2322, -3809,  2321,  1517, 10834, 10834,  1536, 10834, 10834, 10834,
   10834, 10834, -3809, -3809, 10834, 10834, 10834, 10834, 15237, 10834,
   10834, 10834, 10834, 10834, 10834,  2335, 10834,  2915,  2915, 10834,
   10834,  1613, -3809, -3809, 10834,  2544,  2544, -3809, 10834,  7689,
   10834, -3809, -3809, -3809,  2336, -3809, -3809, -3809, 24476,  2915,
    2915, 10834, 10834, 10834,  2855,  2855,  2855,   301,  2337,   555,
   10834, 26922,  2332, -3809, -3809, -3809, -3809, 10834, 10834, 10834,
   -3809, 15237, -3809, -3809,  1056, -3809, -3809, -3809, 12092, 15237,
   15237,  2346, 15237, 15237, 15237, 15237, 15237,  2712, 15237, 15237,
   15866, 16495, 15237, 15237, 15237, 15237,  1437,  2855, 39097, 15237,
   10834, -3809, -3809, 47001, -3809, -3809, -3809,  2340, 23252,   994,
   -3809, -3809, -3809, -3809, -3809, -3809,  2350,   994, -3809,  2827,
   -3809, -3809,  2363, 23252, -3809,  2359, -3809,  2723, -3809,  2724,
    2732,  2733, -3809, -3809, -3809,  2958,  2735, -3809,  2739, -3809,
   -3809,  2388, -3809, -3809, 17124, 39097, -3809,  2389, -3809,  2862,
   -3809, -3809, -3809, -3809, -3809, -3809,  2492, -3809, -3809, -3809,
    2399, -3809, 36057,  2399, -3809, -3809,  2399, -3809, -3809,  2399,
     917,  4599, -3809, -3809, 47001, -3809, 47609, -3809, 20800,  -153,
   -3809, -3809, -3809,  2758,   244,  2403, -3809, 23252, -3809,   107,
     107,  2643,   173, 39097, -3809, -3809,   167,  2406,  2485,  2411,
   -3809,  2496, 23252, 23252, -3809, -3809, -3809,  2665, -3809,  3041,
    1304, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  2427,  2900,  2436, 36057,  1052, -3809,
   47001, -3809,  1642, -3809, -3809, -3809,  2438, -3809, 10834, -3809,
   -3809, 47001, -3809, -3809, -3809, -3809, -3809,  2991, 10834, -3809,
   36057,   -52,  1061,   832,   732, -3809, -3809, -3809, -3809, -3809,
   47001, 42137,  2440,  8318,  2832,  -153, 10834, -3809,  2449,  1515,
   47001, 47001, 47001, 23252, 47001, 23252, -3809,    19,    19, -3809,
   34841, -3809, -3809, -3809, -3809,   683, 47001, 47001,   683, 36057,
   -3809,  1325, 47001,   683, -3809,  2833,  2545, -3809, -3809, -3809,
    2899, -3809, -3809,  2891,  2452, -3809,  2832, -3809, -3809,  1325,
   -3809, -3809, 23252, -3809, -3809,  1325, -3809,  1325,  1325,   683,
     683,  2500,   -75, -3809, -3809,  2593,   630, -3809,   831,   215,
    2696, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,    80, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809,    62, -3809, -3809, -3809,  1873,
    2954, -3809, 39097,  3288,  -113,  1549,  3288,  1254,  -153,   304,
   -3809,   304, -3809,  3403,  2745,   221, 23252, -3809,  2468, 42745,
   23252, -3809, -3809, -3809,  1380,  2475,  2487,  1900,  2956,  2957,
    2960,  2961,  2964,  2965,  2968,  2969,  2970,  2971,  2975,  2976,
    2977,  2979,  2980,  2982,  2983,  2984,  2986,  2988,  2990,  2994,
    2997,  3000,  2495, -3809, -3809, -3809, -3809, 23252, -3809, -3809,
   -3809, -3809,  2578, -3809, -3809, -3809, -3809,  2265, -3809, -3809,
   -3809,   179,  2744,  2552,  2579,   120, 36057,  2972, 47001, 47001,
    1515, 47001, 47001, -3809, -3809,   576,  2798,  2801,  2807,  2543,
   -3809,  2665, -3809,  1802, 47001,  2989, 30585, -3809,   422,   597,
   -3809,  2915,  2540, -3809,  2551,  2553,  2560, 10834,   271,   464,
     653,  1155,   949,   673,   424,   282, -3809,  2562,  2567, -3809,
    2565, -3809, -3809,   445,   486,   947,  1012,  2571,  2572, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,  3009,
   -3809,   526,  1320, -3809, -3809, -3809, -3809,  2574, -3809, -3809,
    1065,   572,   697,   311,  2583,   754,  1421,  1514,  2581, 24476,
   47001,  2915,  2584,  1067,  1105,  2915,  2587,   785,  1128,  1534,
    1662,  1664,  1161,  1224,   847,  1680,  2765,  1241,   852,   882,
    1245,   899,   901, -3809,  1271,  2590,  2592,   903,   366,  2915,
    2594,   386,  2595,  2596,  1273,  8947,  9576, 10205,   651,   920,
   -3809,  2598, -3809,  2321,  2601,  2602,   390,   248,  1280, -3809,
   10834, -3809, -3809,   667,  1293,  2636,   186,   832, -3809,  2729,
   47001,  2244,   160, -3809, -3809, -3809, -3809, -3809, -3809,  1059,
   -3809,  2589, -3809,  2604,  2011,  2624, 10834,  1093,  2624,  3191,
    1987,  1987, 15237,  3073,  2716, 11463,  1256, 11463,  1256,  2624,
    2624,  2624, -3809, 15237,  2625, 15237, 15237, -3809,  2855,  1900,
    2616,  -250, 47001, -3809,  2350,  1129, -3809,   732, 36057,   138,
   23252, 39097,  2626, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,  3333, 23252,  2681,  2711,  2717, -3809, 29366, -3809, -3809,
   -3809, -3809, 29366,   996, -3809, 47001, -3809,  2719, -3809, -3809,
   -3809, 21412, 21412, -3809, 21412, -3809, -3809,   294,   902,  3648,
    2651, -3809, -3809, -3809, 23252, -3809,  3038,  1102, 23252,  2468,
    2646, -3809, -3809, -3809, -3809, -3809,  2343,  2751, -3809,  2648,
   -3809, 10834,  -153, -3809, 36057, 36057, 23252, 23252,   872, -3809,
    1964,  2655, -3809, -3809, -3809, -3809, -3809,  2617, 17124,  3078,
    3094, 21412, 21412, 21412, -3809, -3809, -3809, -3809, -3809,  1305,
    1900, -3809,  2650, -3809, 37881, -3809,  1900,   732,  2659,  2661,
   -3809, -3809,  3030,   810, -3809,  2662,  2671, -3809,  2666,  2667,
    2668, 43353, 10834, -3809,  1061, -3809, -3809,   732, -3809, -3809,
   -3809, 15237,  1643, -3809,  1900, -3809,  -153,  3105, -3809,  1900,
    2680, 47001, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,     6, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809,   683, -3809, -3809, -3809, -3809,
   -3809,  2902,  2501,  2242,  3105,   683,  1325, 23252,   683,   683,
   -3809, -3809,  2682,  2736, -3809, -3809, -3809, -3809, -3809, 47001,
    2503,  2842, -3809,  2694, -3809, -3809, 23252, -3809,  2697, -3809,
    3139,  3280,  2501, -3809, -3809, -3809,   732,   732,  2993, -3809,
    -153,  2822,  2843,  2846,  2847,  2848,  2892, -3809, -3809,  -153,
    -153, -3809, -3809,   732, -3809,  1510, -3809, -3809, -3809, -3809,
    -153,  -153,  -153,  -153,  2385,  -153,  -153,  1688, -3809, -3809,
     732,   732, -3809,   147, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,  1163, -3809,  2161,   732,  3286,  2985,   732,   732,  3286,
     732,  2995,  3008,   732,   732,  2808,  3229,   732,  3117,  2839,
    2393,  3127,   732,  3024, -3809,  2860,  3249,   732,   732,   732,
     732,   732,  3286,  3025,  3364,   732, -3809,   732,   732,  3035,
    3028,   169,  3036,  3044,   732,   191, 47001,   732,  3051,   732,
   -3809, -3809,  3209, -3809, -3809, -3809, -3809, -3809, -3809,  -110,
   22026, -3809, -3809,   392, -3809,  3002, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,  2799, -3809,
   -3809, 10834,  2813,  2385,  -153,  2385,  2385,  -153,  -153,  1080,
    -153,  2385,  2385,  -153,  -153,  -153,  -153,  -153,  -153,  -153,
    2385,  2385,  -153,  1376,  -153,  2385,  3853, -3809, -3809, -3809,
   -3809,   200,   732,   732,   732,   732, -3809,  2577, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, 39097,  3177,  2443,   -29,
   39097, -3809, 47001, -3809,  1726, 47001,  2824,  -142,  4311,   941,
     941, -3809, 23252, 23252, 23252, 47001,  2868, -3809, 30585, -3809,
   -3809,   831, -3809,  2820, 12721, -3809,  2829, -3809, 10834, -3809,
   -3809, -3809,  1135, 10834, 10834,  3308,  1939, -3809, 38489, -3809,
   -3809, -3809, 10834, 38489,  1939, 10834, -3809,  2841, -3809,  3226,
    3236, -3809, -3809, -3809, -3809, 10834, 10834, -3809, 10834, 10834,
   -3809, 10834, 10834, 10834, 10834, 10834, -3809, -3809, 15237, -3809,
    2856,  2853, -3809, -3809, -3809,  2861, -3809, 10834, -3809, -3809,
   -3809, -3809, -3809, -3809, 10834, -3809, 10834, -3809, 10834, 10834,
   -3809, 10834, 10834, -3809, -3809, -3809, 13350, 10834, 10834,  2865,
   -3809, -3809, 10834, 10834, 10834, -3809, 10834,  1471, 10834,  1752,
   10834,  1789, 10834, -3809, 10834, -3809, -3809, -3809, -3809, 10834,
    1629,  2343,  2385,  2866, -3809,  1753, -3809, -3809,  2561, -3809,
     667,  2867, -3809, -3809,  1642, -3809, -3809, 39097, 10834, -3809,
   -3809, -3809, -3809, -3809, -3809, 15237,   432,  2869, 15237, -3809,
    3191,  2570,  2570,  2104, 10834,  1093,  3191, 10834,  2870,  2871,
   -3809, 10834, 47001, -3809, -3809, -3809, -3809, 39097, -3809, -3809,
   -3809, -3809,   138, -3809,  2359, -3809,  2468, -3809,  3320,  2874,
   -3809, -3809, -3809, -3809, -3809, -3809,  1767, -3809, 36057,  2864,
   -3809,  2872,  2931,  2937,  2955, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,  2501,  1964, -3809,
    2884, -3809, -3809,  2520,  2974,  2904,  3250, -3809, -3809, -3809,
   47001, 15237, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,  3470,  2894,  2896, 47001,  1900, -3809,  2978, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809,  1006, -3809, -3809,  2901,
    2901, 18962, -3809, -3809, -3809, 47001,  3375, -3809,  3164, 36057,
    3347,  3350,  3352,   797, -3809,   220, -3809,   913,  3311,  2501,
   -3809,  3354, 39705, -3809, 31193, -3809, -3809, -3809, -3809,   -52,
    3005,  3006,   -44, -3809, -3809,  3306,  3140, -3809, -3809, -3809,
     732,  1900, -3809,  2440,  8318,  2930, 27533, -3809,  1080, -3809,
      57, -3809, 34841, 34841, -3809,  3203, -3809, -3809, -3809, -3809,
    2651,  1325, -3809, -3809,  3409,  3410, -3809,  2941,  3411, -3809,
    3183, -3809,   889,  3331,  3334, -3809,  3201,    34,  3201,   889,
     889, 24476,   831,  2665, -3809,  2385,  3260, -3809, -3809, -3809,
   37881, 35449, -3809, -3809, -3809, -3809,  3476, -3809,  3478,  1321,
   -3809, -3809,  2049,  1749, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,  1254,
    2049,  2049,   685, -3809,   117, -3809, -3809, -3809, -3809, -3809,
   25088,    79, -3809,   247, -3809, 25088, -3809,  1380,  1380, -3809,
   43961, 25088,    79,  1080,  2385, 25088,  2385, 44569,    79,  -153,
    -153,  2117,   732,  2385, -3809, -3809,  3338, 47001,  3340, 25088,
   25088, -3809, 39097, 47001, -3809,   732,  1173,  2385, 45177,  1080,
    1080, 25088,    79, 24476,  2087, -3809,  -153,  2184,    79, -3809,
   -3809, -3809, -3809, 23252,    79,    79,  2728, -3809, -3809, -3809,
    2385, 44569, -3809, -3809,  6190, -3809, -3809, -3809, 18350, 47001,
     285,   181, -3809,  2973,    14,   309,  3039,   237,  2966,  2987,
   45785,  1900,  2385, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809,  -153,  2343,  2049,  2049,  1831, -3809,  3227,
    3393,   732, -3809,  2196, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809,  3057, -3809,  3580,  3152,  3003, -3809, -3809,
     115, -3809, -3809,  1087, 23252, 17738, -3809,  3219, -3809,  2632,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,  2999,
     831,  2651,  1901,  2651,  2996, -3809, 11463,  1286, -3809,  1900,
   10834,  1900,  1742, -3809,  3012,  3012,  3013, -3809,  3016,  3012,
    3369,  3013,  3376,  2992,  3001,  1317,  3017,  3018,  1444, -3809,
   10834, 10834,  1353,   452,  1379,  -117,   938,   945,   499, -3809,
    1410,  2777, -3809, -3809,  1429,  1433,  1442,  1446,   957,  1475,
    1786, 11463,  1481,   388,   503, -3809,  1537,   965,   979,  1567,
   10834,  1580, 10834,  1586, 10834,  1607,  1645,  1667,  3023,  3023,
     222, -3809,  3015, -3809, -3809, -3809,  3029, -3809, -3809,  2091,
    2561, -3809, -3809,  3031, -3809, -3809,  3022,  1900,  3032, -3809,
   -3809, 10834, -3809,   890, -3809, -3809, 15237,   559,  3033, -3809,
    1900, -3809, -3809,  3034,  1444, -3809, -3809, -3809, -3809, -3809,
    3010,  3545, 29366, -3809, 47001,  -229,  3043, 31801, 36057, 36057,
   36057,  3042, 10834, -3809, -3809,  3247, 23252, -3809,  3392, -3809,
   -3809, -3809, -3809,  3045,  3037, -3809, -3809, -3809,  3191,  3357,
    3237, -3809, -3809,  3046, 36057, -3809,  1686, 24476, -3809,  3047,
   -3809,  3047,  1870,  3049,  1793, -3809, -3809, -3809,  3050,  2133,
    1798, -3809, 17124,  3435,  2290, 36057, 36057, 36057, -3809,  2651,
    2651,   145,  3084,  3441, -3809, -3809, -3809, -3809, 46393, -3809,
   -3809, -3809, -3809,  1104, -3809,  3058,  3059,   140,  3272, -3809,
   -3809, -3809, -3809,  8318, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,  2501, -3809, -3809, -3809, -3809, -3809,  2501, -3809,   683,
    -153,  -153,  1486,  -153,  3533,  3576,  1098,  1293, -3809,   729,
   -3809, -3809, -3809,  3453,   889,  3201,  3201,  3454,  3341,   777,
    3075, -3809,   732, -3809,  1318, -3809,  1686, -3809, -3809, 10834,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  1163, -3809, -3809, -3809, -3809,  3079,
    3452,  3457,  1380, -3809, 25088, -3809, -3809, 25088, 25088, -3809,
   -3809,    77, 44569, -3809, -3809, -3809, -3809, -3809, -3809,  3080,
   -3809, -3809,  2343, -3809, -3809, 35449,  -153, -3809, 25088,  3080,
   -3809, -3809,   182, -3809,  3103,  -153, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, 44569,  3083, -3809,   337,
   -3809, -3809,  1888, -3809, -3809, -3809, 44569, -3809, -3809, -3809,
   44569, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
    3086,  2854,  2160, -3809,  3087,  3088, -3809, -3809, -3809, -3809,
   47001, -3809, -3809, 23252, -3809, -3809, -3809,  4889, 47001,  3316,
   -3809, 10834, 10834,  3356, 47001,  3358, -3809,  3646, 47001,  3703,
   44569, -3809,  3096, -3809,  3097, -3809,  1814, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  3098, 47001,  2049,  2004, -3809, -3809,
    -153,  1087, -3809, -3809, -3809, -3809,  3366,  3367, 47001, -3809,
   -3809, -3809, -3809,  3240, -3809, 23252, -3809,  3265, -3809,  3107,
     144,  3330, -3809,  3110,  3111,  3112, 30585,  2651,  3371, -3809,
   -3809,  2570, -3809,  1900, 10834,  1633, -3809, -3809,   213,  3382,
   -3809,  1725, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  3121,  2570,  2570, -3809, -3809, 10834,
   -3809,  3271, -3809, 10834, 10834, -3809, 10834, -3809,  1100,  3130,
    3150, -3809, -3809, -3809, -3809, 10834, -3809, -3809,  2570, -3809,
   10834, -3809, -3809, 10834, -3809, 10834, 10834, -3809,  1691, -3809,
    1693, -3809,  1697, -3809, -3809, -3809,  2343,  3131,  3501, -3809,
   -3809, -3809,  2343,  3313, -3809, -3809,  2343,  2385,  2438, -3809,
   -3809,   555, 47001, -3809, -3809,  1845, -3809, -3809, 10834, -3809,
   39705, -3809, -3809,  3346, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,  3566, -3809, -3809, -3809,  -144,  -144,  -144, 13979,  1900,
    3623, -3809, -3809, -3809,  3392,  3512, -3809,    58, -3809, 47001,
    3141,  1159, -3809,  1871, -3809, -3809, -3809,  2091,  3144, -3809,
     732, 13979,  2901,  3265, -3809, -3809,  1870, 24476, 31193, -3809,
   -3809, 47001, -3809, 36057,  2290,  2290,  2290,  2501,  3572,  2974,
    2974, -3809, 28144, -3809, -3809,  3300, -3809, -3809, 32409, -3809,
   -3809, -3809, -3809, -3809, -3809, 27533, 43353, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  -153,  3624,  3394,  1642,  2016, -3809,
     831, -3809,   889, -3809,  3537,  3539,   889, -3809, -3809, -3809,
   24476,  2651, 13979, -3809,  2091,  1900,  3161,   337, -3809,  -136,
   10834, 25088, -3809, -3809, -3809,  3166, -3809, -3809,  3673,  3675,
   -3809, 25088,  2265, 47001, -3809,  2991, -3809, -3809, -3809,  3262,
   -3809,  4889, -3809, 24476, -3809, -3809, -3809, -3809, -3809, 47001,
   -3809, 23252, -3809, 18350, -3809,  3172, -3809,  3012,  3012,  3012,
   -3809, -3809, -3809,  3013, -3809,  3016,  3402, -3809,  3016,  3016,
   -3809, -3809, -3809, -3809, -3809,   213,   332, -3809, -3809,   213,
   -3809, -3809, -3809,   136,  1019,  3016, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809,  3012,  3013,  3013, -3809, -3809,   213,  3012,
   -3809,  3012,  2778, -3809,   152,   141,  3012,  3012,  3012,  3174,
    3167, -3809,  1900,  2570,  3724, -3809, -3809,  3317,  -153,  3666,
   -3809,  1881, -3809,  3189, -3809, 45785, -3809,  2385,  1254, -3809,
   -3809, -3809, -3809,  3328,   952, -3809,  3365,  3194,  3202, -3809,
   -3809,  -153,  3204,  3205,  3209, -3809, -3809, -3809,  3815, -3809,
   47001, 47001, 47001,  2820, -3809,  3573,  1188,  1900,  3214,  3215,
    3216,  3217,  3811,   254, -3809,  3814, 38489, -3809, -3809, -3809,
    3222,  1891, -3809,  3223,  3225,  1706,   215,  3230,  1748,  1058,
    1912,  3526,  3603, -3809,  3449, -3809,  1769,  1307,  1780,  1785,
    1824,  1844, -3809, -3809, -3809, -3809, -3809,  3235, -3809, -3809,
     367, -3809,  3243,   908,  1293, -3809, -3809,  1919, -3809,  3594,
    3506,   998,  3270,  3270,  3270,  1643,  1900,  1927, -3809, -3809,
   -3809, -3809,  3643, -3809, -3809,  3252,  3253, 47001, -3809,  3237,
    2438, 24476, 13979,  3255,  3256, -3809,   743, -3809, -3809,  3251,
   -3809, -3809,  2290, -3809,  3836,  3680, -3809, -3809, 39097,  3259,
   -3809, -3809,  3562, -3809, -3809, -3809, -3809,  -153,  3734, -3809,
   -3809, -3809,  2694,  2963,  3307,   889,   889,  3423,  3309, 10834,
   10834,  3266, -3809,  3371, -3809, -3809,   397,  2438, 10834, -3809,
    2343,  3237, -3809,  1853,  3268,  3269, 47001,  3273,  3278, -3809,
    2701,   285, -3809, -3809, -3809, 23252,  2778,    79, -3809, -3809,
    3080,  1006,  3279, -3809, 47001,  3592, -3809, -3809, -3809, -3809,
    1555, -3809,  3281,  1555,  1555, -3809,  2262, -3809,  3303,   213,
   -3809, -3809,  3314, -3809, -3809, -3809,  1555,  3283,   213, -3809,
   -3809, -3809, -3809,  1555, -3809, 39097,  -153,  2556, -3809,  3327,
   -3809,  3789,  3662, -3809,  2778, -3809,  3663,  3557, -3809,   213,
   -3809, -3809,  3881, -3809,   213,  3881,  1555,  3559, -3809,  1555,
   47001, -3809, -3809, -3809, -3809, -3809, -3809, 47001, -3809,   974,
   -3809, -3809, -3809,  1941,  -153, -3809, -3809, -3809,  3294,  3296,
   -3809, -3809, -3809,   309, -3809, 47001,  4889, -3809, -3809, -3809,
    3219, -3809,   975,  1967,   337,  3299,  1977,  2018, 34841, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, 38489, -3809,
    3881, -3809,  3565, -3809, -3809, -3809, -3809, -3809, -3809, 10834,
   -3809, -3809,  3599,  3758, -3809, -3809, -3809, -3809, -3809, -3809,
    3302, -3809,  2385,   913,   913, -3809, -3809, -3809, -3809, -3809,
    3389,  3390, -3809, -3809,  3391, -3809, -3809,   137,  2641, -3809,
   -3809, -3809, -3809, 13979,  3684,  3399, -3809, -3809, 47001,  3349,
   -3809, -3809,   908, -3809, -3809, -3809, -3809, 10834, -3809,  3371,
    2117, -3809, 28144, -3809, -3809,  -153,   555, -3809,  3351, -3809,
   -3809, -3809,  3360,  1900,  1900, 47001,  3573, -3809,   828,   908,
     337, -3809,  2029, -3809, 47001, 47001,  2035, 47001, 47001,  2681,
    2711,  2717,  1376,  1376, -3809, -3809, -3809, -3809, -3809, -3809,
    3704, -3809, -3809,  2037, -3809,    70,  3577, -3809, -3809, -3809,
   -3809,  1555, -3809,   215, -3809, -3809, -3809, -3809, -3809,   215,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,  3604,  3372, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,  3318, -3809,
   -3809,  3444, -3809, 53081, -3809, -3809,  -127,  3361, -3809, -3809,
   -3809,  1194, 47001, 23252,  3356,  3511, -3809,  2991, -3809,   743,
     144,  3265, -3809,   322, 47001, -3809,  3606,   170,   238, -3809,
   -3809, -3809,  3337,  1857, -3809, -3809, -3809,  3339, -3809, -3809,
   -3809, -3809, -3809, -3809,   164,  3601,  2385,  2385,  2385,  2385,
    2641, -3809, -3809,  3400, 23252, 15237,  3445,  2043, -3809, -3809,
    1503,  3119, -3809,  1631,   337, 10834,  2501, 35449, -3809, -3809,
   -3809, -3809, 10834,  3345, 10834,  3353,  2051, -3809, -3809, -3809,
    1380,  1380, -3809,   828, -3809, -3809, -3809,  2080,  2083,   322,
    2090,  2105, -3809, -3809, -3809,   285,  3355, -3809, 47001, -3809,
   -3809, -3809,    98, -3809, -3809,  2113, -3809,  2116, -3809, -3809,
   10834,  3821,  3381, 47001,   757, -3809, 54297, 54297, 47001, -3809,
   -3809, -3809, -3809,  5649, -3809, -3809,   756, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,  3946, -3809,
    3348, -3809, -3809,  3362,  1152, -3809, -3809, -3809,  4889,  3799,
     237, -3809, -3809, -3809, -3809, -3809,  3363,  2133,  -153,   732,
   -3809,   322, -3809, -3809, -3809,   337,  3373,  3610, -3809,   170,
   -3809, -3809, -3809,   238, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, 24476,  2665, -3809,  2343,
   -3809, -3809, 47001, -3809,  3442,   732,  3854,  3856,   732,   732,
     732,   732,  3368,  3119, -3809,  3842, -3809, -3809, 10834, -3809,
   -3809,  1900,  3595, -3809,  3928,  1293,  1900, 47001,  1900, 47001,
   -3809,  3816,  3816, -3809,  3578,   322, -3809,   170,   238, -3809,
    3237, -3809,   958,   958,   213,   215,   213,  1900, 10834, -3809,
   10834,  3404, -3809, -3809,  3818, 47001, -3809, -3809, -3809, -3809,
   10834, -3809, 53081, 53081, -3809, -3809, -3809, -3809,  3972,   743,
    3942,  3638,  3948,  3505, -3809, -3809,  3646,  4889, -3809, -3809,
   -3809,  2385, -3809, -3809, -3809,   161, -3809, -3809,  3380, -3809,
     732, -3809,  3384, -3809,  3445, -3809,  3387, -3809,  -153,   732,
     732,  1634,  1634,  2343, 39097,  3490, -3809, -3809,   732,   337,
   47001, -3809,  1078,  3751, -3809,  2127,  2134,  1227, -3809, -3809,
   -3809, -3809, -3809, -3809,  2173, -3809,  4010, -3809,   883,  3654,
    3658, -3809, -3809, -3809,  1900,  1900, -3809,   274, -3809, -3809,
    3791,  3876, 10834,  1900, 50041,  3395, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, 53689,
   10834, -3809,   756,  3946, -3809,  3659, -3809,  3660, -3809, -3809,
   -3809,  3900, 53081, -3809,  3892, -3809,   743, -3809, -3809, 24476,
   13979,  2117, -3809, -3809,  3406, -3809, -3809,   719, -3809,  -153,
    -153, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
    2181, -3809, 39097, -3809, -3809,  3986,  3987,  3887,  3990,  1078,
   -3809,  -154, -3809, -3809, -3809,  3991, -3809,  3993,  3415,  3416,
   -3809, -3809, -3809, -3809,  3465,  3918,  3446, 10834, 53081, -3809,
    3895, -3809,  3827,  1880,  3771,  3419, -3809,  3417,  1357,  3933,
   54297, 54297, -3809, -3809, -3809, -3809,  3909, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  2198, -3809, 14608, -3809, -3809, -3809,
   -3809, -3809, 39097, -3809,  3490, -3809,  3429,   215,   215,  4009,
     215, -3809,  4011,  4012,  -154, -3809, -3809, -3809, 45785, 45785,
     958,   958, -3809,   283, -3809,  1900, 50649,  4004, 47001, -3809,
   -3809, -3809, -3809, 10834, -3809, 40313, 51257,  3428, -3809, -3809,
   -3809,  3602, -3809,  3505,  3605, -3809,  3406, -3809,  3436, -3809,
    3191,  3119, -3809, -3809,  3439, -3809, -3809,   215, -3809,   215,
     215, -3809,  3440,  2200, -3809, -3809, 10834, -3809,  3913,  3524,
   -3809,  3443, -3809, 53081,  1875, 53081, -3809, -3809,  3865,  3447,
    1547, -3809,  3448, -3809, -3809, 53081,  3855,  3928, -3809, 14608,
    3450, -3809, 10834,  3451,  3455, -3809, -3809, -3809, -3809, -3809,
   -3809,  1900,  4020, 53081, 47001, 48217,  3641, 51865,  3891, 47001,
    4889,  3896,  3899, -3809, 53081, -3809,  4038,  3751, -3809, -3809,
    1900, -3809, -3809,  3543, -3809, 48825, -3809,  2642, -3809,  3485,
   -3809, -3809,  3968,  1677, -3809, -3809,   215,  3870, -3809, -3809,
   53081, 53081, -3809, -3809, -3809, 33017, 10834, -3809, -3809, -3809,
   -3809, -3809,   797, -3809,  3735,  3467, 49433, 52473, -3809, -3809,
   -3809, 29977, -3809, -3809, -3809,  3904, -3809,  1900, -3809,   701,
   19574,  3618, 33017, -3809, -3809, -3809, -3809, -3809, -3809, 39097,
    2211, -3809, -3809, 24476, -3809, -3809, -3809, -3809, 22638,  3468,
   -3809,   732, -3809, 24476, -3809, -3809, 13979, -3809, -3809
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3809, -3809, -3809, -3809, -3809,   163, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  1800, -3809, -3809, -3809, -3809, -3809,
    2003, -3809,   710, -1832, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809,   712,  1612,  3463, -3809,   460, -3809,   146, -3809,
   -3809, -3809, -2912,    29,  -140, -3809, -3809,   228,    18,  3118,
    -138, -3808, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,   470,   467, -3809, -3809,   292, -3809, -3809, -2408, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,  -318,  -278,  1975,
   -3809, -3809, -3809,  4070, -3809,  3550, -3809, -1731,  2293, -3809,
   -3809, -3809, -3809, -3809,  2347, -1683, -3809, -3809, -3809,  1350,
   -3809, -3809, -3809,  -399,   308, -3809,   310, -3809,   313, -3809,
     314, -3809,   315,   316,   317,   318, -3809,   330, -3809, -3809,
    -249, -3809, -3809, -3809, -3809,   343, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809,  -159, -3809, -3809,    20, -3809, -3809,  -125,
     347, -3809,   -82,   348, -3809,   349, -3809,     0, -3809,     2,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809,  3136, -3809, -3809, -3809, -2030, -3809, -3809, -2415,
    2685, -3809, -1793, -3809, -3809, -1921, -3809, -3809, -1721,  1115,
   -3809, -3809,  1243,   910, -3809, -1407, -1909, -1889, -3809, -3809,
   -3809, -2026, -2022, -1402, -1388, -2172, -3809, -3809, -3809,   338,
   -3809, -3809, -2566,  2120,  2684, -3809, -1988, -3809, -3809,  1198,
   -3809, -3809,  1372,  1818, -3809,   976,  2876, -1220, -3809, -3809,
   -3809, -3809, -3809, -3809,   172,   319,    84, -3809, -3249,   690,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -2355, -3809,
   -3809, -3809,  -167, -3809, -3809,   -81, -3809, -3809,  -124, -3809,
     175, -2309, -3809, -3809, -3809, -3809,  2644, -1352, -3809,  3691,
   -3809,  -549,   782,  2156, -2128, -1400, -3809,  -903,  -895, -2484,
   -3809, -3809, -3809, -3349,  1158,  1557, -3809,   892,  2158, -1898,
   -3809,  1638, -3809, -3809,   919, -3809, -2785, -3809, -3809, -3809,
     877, -3809,   878, -3809, -3809, -3809,  -852,   850, -2511,  -351,
    -242, -3809,   441, -2377, -2520, -3809,   668, -3809,   619, -3485,
   -3319, -3809,  -558, -2097, -2396,    44, -3809, -3809,   631, -3112,
    1770, -3809, -3809, -3809, -3191, -3245,  1498, -3809, -3809,  1094,
   -3809, -1356,  1090, -3809, -3809, -3809,  1111, -3809,   217, -3809,
   -3809, -3809, -3809, -2576, -3809, -3809, -1476, -2278, -3809, -3809,
    4241,  4244, -1024, -2676, -2805,   223,   219, -3809, -3809, -3809,
    2704,  -607,   290,   284,   286,  2136,  -313,   434, -2401, -3809,
     480, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,  2221, -1012, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -2420, -2427, -3809, -3809,
    1707, -3809, -3809, -3809, -1896,  -500, -2181, -3360, -3809, -3809,
   -3809, -3809, -3809, -3809,  2838, -3809, -3809, -3809, -3809, -3809,
    3707, -3809,  2851, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
     718,  1920, -3809, -3809, -3809, -3809, -3809, -3809,   993,  2753,
   -3809, -3809, -3809,    24, -3809, -3809, -3809, -3809,  2471, -3809,
   -3809, -3809, -3809,  2809, -3809, -3809, -3809, -3809, -3809, -3809,
    1502, -3809,  1961, -3809, -1447, -3809, -3809,  1103,  -975,  1913,
    -580,  2048,   485, -3809,  3715, -3809, -3809, -3809, -1634, -2467,
   -3809,  3425,  -853, -2547,  2467,  -628, -1821,  1160,  -410,  3377,
   -3809, -1130, -1071, -3809, -3809,  -627, -3809, -3809, -3809,  -603,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809,  1559, -3809, -3809, -3809, -3809, -1202, -3809, -3809, -3809,
   -3809, -3809,  1862, -3809,  2162, -3809,  -484, -3809,  3220, -3809,
   -3809, -3809, -2342, -1935,  1877,  1062, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -1545, -3809, -2385, -3809, -3809,
   -3809, -3809, -3809,  2076, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -1614, -3809, -2007,   295, -3809,   437, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,    53,   948,    55, -3490, -1076,  1708,
   -3809, -3809, -1255,  3257, -2325, -3809, -3809, -3809,  2057, -3809,
   -3809, -3809, -3809, -3809,  1032, -2926, -1401, -3809, -3809, -3179,
    -894, -2268,  -873, -3809, -2353,   592, -1806, -1775,  -722,   239,
   -1243, -3809, -3809, -3809, -3809, -3809,   -42, -3809, -3809, -3809,
     610,  1955, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809,  -550,  -799, -3809, -3809,  2212,  2569, -3809,  3125,
   -3809, -1038,  3370, -3809, -3809,  3374, -3809, -3809, -3809, -3809,
    3060,  3040,  2017, -3809, -3809, -2366, -3809, -3809,  1979, -3809,
     860,  -890, -1800,  1140, -3809, -3809,  1144, -3205, -3809, -3809,
    3383, -3809, -3809, -3809,  1086, -3809,   183,  3781,  3385, -3809,
   -3809, -3809, -3809, -3809, -3809,  2796, -1043,  3712, -3809, -3809,
   -3809, -3809, -3809, -3809,  2453, -3809, -3809, -3809, -3809, -3809,
   -3809,  2998,  3798,  -561, -1263, -3809,  -593,  2951,  2454,  -863,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809,  2611,  1063, -3809, -3809, -3809,  3053,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,  1178,    30, -3809,
     176,    -1, -3809,   104, -3809, -3809, -3809, -3809, -3809,   -68,
   -3809, -3809,   -72, -3809,  -974, -1360,   786, -1229, -2047, -3809,
    1165,  3048, -3176,  -674, -1139, -1135, -1965,    49, -3809, -3809,
    3114,  1864,    11,   846,  -354,    -6, -2604,   -85,  -570, -3809,
   -1588, -3809, -3809, -3809, -3809, -3809, -3809, -3809, -3809,  1974,
   -3809, -3809, -3809,  1145, -3809,  3823, -3809,  2700,  1147,  3825,
   -1328,  2530,  1989,  1993, -3809, -3809,  2002, -2167, -3809, -3809,
     149, -3809,  2605, -3809, -3809, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,  3062,  3844,  3534,
   -3809,  3124, -3809, -3809, -3809, -3809, -3809,   552, -3809,   178,
   -3809, -2148,  2863,   573, -3809,  1636,  -309,  -588, -3809, -3809,
     547, -3809, -3809,  1436,  3847,  3538, -3809, -3809, -3809, -3809,
   -3809, -2763,  -862, -3809, -3387, -2806, -1666, -3809, -3809, -2165,
   -2990, -3809, -3809, -1040, -3809, -3809, -3809, -3809, -1954, -3809,
   -3809, -3809,    51,  3910,  3911, -3809, -3809,  -170, -3809,   -48,
   -3809, -3809, -3809, -3809, -3809, -3809, -3809,  3775, -3809, -3809,
   -3809, -3809,  3776, -3809, -3809, -3809, -3809, -3809,  3777, -3809,
   -3809, -3809, -3809, -3809,  1746, -3809, -3809, -3809, -3809, -3809,
   -3809, -3809, -3809
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2570
static const yytype_int16 yytable[] =
{
     483,  1455,  1026,  1462,  1358,  1361,   941,   971,   899,   937,
    1040,  1048,  1344,   525,  1373,   134,  2137,   533,  2068,  1681,
    2393,  1567,  1111,  1682,   481,  1769,   547,   774,  2253,  1634,
    1898,  2348,   985,   559,  1557,  1558,   562,   609,  2545,  1797,
     559,  1392,  1420,  1867,   526,  2065,  2609,   577,  2953,  1386,
    1942,  1704,  1768,  1069,   545,  1598,  3219,  1656,  1712,  2783,
     552,  2684,  2813,  1392,  2888,  2901,  2686,  3534,  1967,  2864,
    2865,  3259,   531,  1968,  1421,  1015,  1018,  1988,  1467,  1988,
    1805,  3060,  2497,  2042,  2298,  2572,  1468,  1969,   598,  2745,
    2436,  1989,  2629,  1989,  1056,  2502,  2630,  2377,  3539,  2511,
    2879,  3375,  2498,  2515,  2925,  2868,  2954,  2949,  2889,  3726,
     601,  2768,   483,  1945,  2530,   483,   608,   614,  1714,  1715,
    1282,  2836,  1718,  1719,  1720,  1721,  2541,  1723,  1724,  1726,
    1728,  1729,  1730,  1731,  1732,  2109,   603,  1206,  1905,   605,
    2114,  1980,  3415,   597,  3575,  3580,  2460,  2461,  3581,  1164,
    1165,  1166,  1036,  3853,  2115,  3078,  1915,  1437,   490,  3085,
    2775,  3464,  1207,  2472,  1918,  1919,  2119,  3591,  2485,   627,
    3087,  1980,  3422,  3610,  3611,  1173,  1174,  1800,   544,   618,
    2490,  2491,  1464,  3554,   551,  3423,  2618,  2550,  2289,  1746,
    2493,  3766,  3148,   540,  2510,  3582,  1811,  2513,  2514,  3424,
    2516,  1173,  1174,  2519,  2520,  2388,  2663,  2523,  3038,  2626,
     907,   890,  2532,  -885,  3241,  2862,  3288,  2536,  2537,  2538,
    2539,  2540,  3362,  4042,  1231,  2544,  3700,  2546,  2547,  2627,
    2928,  2824,  2289,  3422,  2556,  1274,  1417,  2560,   115,  2562,
    3043,  3139,  2919,  3968,  2474,   847,  3423,  2855,  3540,  3285,
     960,  1019,   830, -1488,  1941,  3886,   978,  1283,  3909,  1151,
    3424,  1085,  1282,  1173,  1174,  4169,  2240,  2583,   560,  2586,
    2587,   907,   890,  2026,  3666,  2597,  2598,  3405,  3794,  2884,
     619,  1433,  1308,  1444,  2606,  2607,  3229,  3724, -2453,  2611,
    2885,  1888,  3752,  3000,  2741,  -468,  3471,  1173,  1174,  1464,
   -1766,  3084,  2613,  2614,  2615,  2616,  2643,  1959,  2919,  1848,
     541,  3968,   907,   890, -2306,  1277,  1173,  1174,  2911,  2912,
    1464,   855,  2030,  2454,  2551,  2557,  1173,  1174,  1980, -1964,
    -561,  3011,   642,  1155,  1849,  1570,  3068,  1288,  3070,  3207,
     586,  1390,  1963,  2056,  3044,  1422,   129,  1570,  3140,   117,
    1091,  -562,  3422,  1889,   945,  4272,  3304,  2633,  1123,   569,
    2829,  1550,  3750,  3405,  3009,  3423,  2422,  3804,  1550,  3015,
    3806,  2847,  1963,  3872,  3181,  2281,   252,  1808,   254,  3424,
    1142,  1173,  1174,  2282,  3016,  4273,  3139,   133,  3786,  1551,
     907,  3576,  2848,  1156,  1157,  3968,  1552,  3790,  1546,  1283,
    3894,  1173,  1174,  1173,  1174,  1173,  1174,  3701,  1547,  1548,
    1549,   632,  3010,  1397,  1024,  1025,  2153,  3969,  3803,  4228,
    1597,  1809,   961,  3805,  1981,  3841,  2849,   570,  4228,  3274,
    2920,  1152,   946,   130,  1111,  1092,  2736,  1173,  1174,  1173,
    1174,  2887,  3964,  3031,  3032, -2384,  3214,  1173,  1174,   833,
    2830,  1941,  3910,  1960,  1981,  1488,  2057, -1766,  1571,  1438,
    1173,  1174,  3001,  3305,  2915,  1938,  2735,  1173,  1174,  2574,
    1586,  1055,  3012,  4074,  1862,  3835,   856,   979,  3918,  1173,
    1174,  1402,  2156,  1546,  1445,  3969,  2886, -2306,  1850,  3541,
     608,   623,   614,  3140,  1623,  4169,  3406,  1624,   587,  3263,
    1222,  1173,  1174,   980,  3227,  3228,  2241,  2558,  3862,   788,
    1210,  2634,   848,   614,  1173,  1174,  3556,  2564,  1173,  1174,
    3230,  3062, -1488,  3284,   828,  1434,  3286,  3287,   608,  1963,
     838,  1890,  1900,  2410,  2529,  1903,  1425,  4115,  1418,  4116,
    1907,  1173,  1174,   851,  1037,  4039,  2931,  3297,  1020,  3295,
    2935,  3874,  3289,  2217,  3911, -2384,  1175,  1709,  1967,  1176,
     900,  2977,  1467,  1968,  2951,  2952,  1920,  1921,   957,  3969,
    1468,  3895,  3120,  1471,  1173,  1174,  2965,  1969,  1943, -1448,
    1770,  1988,  3406,  2290,  2496,  2497,   974,  1173,  1174,  1717,
    1042,  1050,  4175,  1581,  1582,  1989,   608,  2629,   989,  1769,
     636,  2630,   831,  2572,  3003,  2498,  1738,  3746,  3545,   598,
     483,  1981,  1173,  1174,  1622,   598, -1448,  1013,  1175,   598,
     598,  1176,  3391,  1636,  1027,   989,  1768,  2290, -2099,   608,
    3185,  3186,  3187,  2423,  1000,  1649,  1650,  1651,  1467,  1057,
    1058,  1059,  2042,  1655,  3283,  1064,  1468,  2921,  1001,  2897,
   -1964,  2270,  1175,  2430,  2863,  1176,  1275,  1222,  3696, -1488,
    3490,  1525,  2273,   934,   999,  2276,  1173,  1174,  1173,  1174,
    1010,  1175,  3141,   796,  1176,  4043,  2267,  3224,  3225,  3226,
    2572,  1175,  4164,  1749,  1176,  3704,  3244,  1927,  1173,  1174,
    1112,  1054,  3045,  -885,   843,  4020,  3033,  1038,   542,  2913,
    2109,   854,  1777,  3242,   872,  2114,  1221,  2285,  2934,  1980,
    2936,  2625,  1173,  1174,  2626,  3963,  2631,  2947,  1812,  2115,
    2552,  3425,  2946,  2120,   958,  3067,  3583,  3537,  2097,   635,
    2632,  2960,  1801, -1488,  2627,  2955,  1175, -2569,  2971,  1176,
   -2453,  2975,  3414,  1223,  2914,  3608,  3881,  1799,  3403,  1945,
     794,  1170,  2909,  1172,  2988,   962,  1175,  2837,  1175,  1176,
    1175,  1176,  1818,  1176,  1153,  1527,  3075,  1830, -2453,  1173,
    1174,  3298,  1177,  3977,  2492,  -468,  3028,  3075,   852,  1215,
     483,  1217,  3425,   989,   483,   608,  3149,   483,   608,  4249,
    1847,  4124,  1175,  1260,  1175,  1176,  4083,  1176,  1177,  3568,
    1173,  1174,  1175,  3876,  1216,  1176,  1278, -1964,  1220,  1359,
    -561,  1230,  3569,  1364,  1369,  1175,  2256,  3141,  1176,  2922,
     934,  3036,  1175,  3667,  2443,  1176,  1287,  2878,  1389,  1904,
    1881,  -562,  1917,  3588,  1175, -2121,   598,  1176,  2232,  3030,
    3142,  3593,  4109,  3589,  3590,  1928,   608,   598,  3616,  1929,
    3497,   598, -1488,  4131,  2575,  4133,  1175,  1305,  1398,  1176,
    1177, -2240,  1173,  1174,  3390,  2163,  3553,  1173,  1174,  1175,
    1426,  2154,  1176,  1175,  4136,  2242,  1176,  3524,  3264,  3265,
    3544,  3528,  2129,  4282,  3278,  4392,  2788,  1354,   608,  3560,
    1454,  1294,   608,   608,  1177, -2384,  1175,  1173,  1174,  1176,
    1223,  3425,  1311,  1526,  2813,  2130,  1317,   608,  2894,  2164,
    1963,  1947,  3961,  1177,  1173,  1174,  1173,  1174,  1173,  1174,
    3523,  3577,  3360,  1177,  3527, -2384,  1403,  1689,  1690,  1175,
    4203,  1625,  1176,  3409,  1626,  1173,  1174,  1689,  2183,  3160,
    3566,  3567,  1175,  1375,  4053,  1176,  3533,  1253,  3084, -2099,
     598,  3084,  3084,  1173,  1174,  2444,  1487,  2399,  1208,  3503,
    1173,  1174,  1173,  1174,  4435,  2189,   486,  1175,  3084,   608,
    1176,  1463,  1173,  1174,  2445,  4251,  3200,  2414,  1177, -1448,
    1173,  1174,  3592,   135,  1590,  2446,  2650,  3609,  3612,  3614,
    3615,  1291,  1981,  2218,  1173,  1174,   537,  1427,  1177,   598,
    1177,  2125,  1177,  4222, -2517,  2497,  1553, -1936,  4125,   133,
    3888,  2629,  2221,  2222,  3121,  2630,  2238,  2239,  2426,   491,
    1428,  1175,  1692,  1175,  1176,  2498,  1176,  1173,  1174,  1858,
    4257,  2926,  2926,  4062,  1177,   527,  1177,   834,  1222,  1392,
    3252,  2361,  2424,  1175,  1177,   950,  1176,  3889,  2459,  2144,
     598,  2162,  2429, -2385,  1563,  2432,  2433,  1177,  2750,  2751,
    3700,  1143,  1898,  1898,  1177,   536,  1967,  1175,  2447,  1392,
    1176,  1968,  2169,  1173,  1174,  3502,  1177,  1147,  3098,  3099,
    1173,  1174,  1173,  1174,  3830,  1969,  1699,  2496,  1112,  2298,
    1988,  3222,  3520,  2502,  4036,  2385,  2530,  2832,  1177,  1859,
    2665,  1303,  1112,  4054,  1989,  1554, -2099,  1781,  1354,  1561,
   -1793,  1177,  2277,  2170, -2517,  1177,  2447,  2701,   549,  1527,
    1173,  1174,   835,  1737,  1175,  3105,  3106,  1176,  2626,  3122,
    3123,  1529,  2275,  2802,  2249,  2749,  2129,  1360,  1177,  3268,
    3739,  3740,  3441,  1173,  1174,  2651,  1144, -1766,  2627,   571,
    1173,  1174,  1683,  2176,  1770,  1175, -2121,  4436,  1176,  2130,
     572,  1208,  1148, -2385,  2042,   608,   574,  3294,  2869,  1390,
    1771,  1177,   589,  2341,  2403,  2361,  1173,  1174,  2288,  3635,
    1693,  2448, -2240,  2833,  1177,  3157,  3158,  1980,  3636,   590,
    1292,   648,   836,  4063,   599,  2754,  2755,  2590,  1467,  2181,
    2292,   934,   608,  4070,  4079,  3049,  1468,  1741,  1355,  1177,
    2109,  2253,   598,  4071, -1793,  2114,  2625,  1175,  1810,  4114,
    1176,  2631,  1175,  2145,  2748,  1176,  4205,   598,  1705,  2115,
    4121,  2260,  3500,   951,  2758,  2632,  1682,  4206,  4223,  1173,
    1174,  3701,  1831,  1530,  2357,  2358,  2449,  1531,  1112,   608,
     649,  4457,  1175,  2268,  1591,  1176,  1173,  1174,  1532,  2591,
    1173,  1174,  1209,  1177,    43,  1177,   608,  1743,  1069,  1175,
    2798,  1175,  1176,  1175,  1176,   832,  1176,  2233,  1786,  2157,
    1789,  1223,   598,  2362,  1376,  1177,  1173,  1174,  1173,  1174,
    1175,   598,  2250,  1176,  3102,  1173,  1174,   608,  1927,  2161,
    1793,  1173,  1174,  1852,  1860,  3839,   598,   598,  1175,  1177,
    4126,  1176,  2892, -2121,  1342,  1175,  1682,  1175,  1176,  1782,
    1176,  3050,  4057,  4058,  2182,   538,  2572,  1175,  3637,  3670,
    1176,   608,  1173,  1174,  1834,  1175,  1282,  1317,  1176, -2240,
    3194,  3462,  1842,  3832,  4253,  1843,  3702,  1222,  2572,  1175,
    2956,   592,  1176,  2302,   608,  2592,  1927,  1970,  4064,  3261,
    3269,  3455,  1317,  3485,  1863,   900,  1177,  2735,  1173,  1174,
     602,  2735,  1173,  1174,   483,   483,   483,   598,   483,   598,
    2335,  2185,  1175,   650,  1899,  1176,  1878,  1949,  1963,  1533,
    1901,   483,  1190,   608,  1173,  1174,   483,  1177,  1882,  1883,
    1884,  2652,  1886,  4127,  2969,  1024,  1025,  3486,  1682,  1429,
    3890,  1706,  2197, -1488,  2261,  1902,   598,  2362,  2404,  4072,
    1906,  3635,    55, -1793,  2957,  1173,  1174,  4215,  1175,  1355,
    3636,  1176,  1885,  4128,  1887,  1175,  2593,  1175,  1176,  3442,
    1176,  3815,  2367,  2904,  1173,  1174,  2926,  4207,  1173,  1174,
     604,  1783, -1793,  2363,  1832,  2303,  1928,  1173,  1174,  1177,
    1929,  1173,  1174,  1971,  1177,  1209,   608,  4130,  1733, -1488,
    1981,  1916,  4216,  1283,  2204,  1175,  1853,   561,  1176,  2208,
     598,  4023,  1222,  2061,   598,  1534,  1173,  1174,  1430,  1979,
    1173,  1174,  2385,   678,  1177,  4294,  1173,  1174,  1175,  1527,
   -1488,  1176, -1488, -2385,  3051,  1175,  3703,  2496,  1176,  2209,
     934,  1177,  1393,  1177,  1928,  1177,  2529,  2336, -1488,  3704,
    2853,   598,  3966, -1488,  1298,  2958,  2211,  1299,  2212,  1570,
    2216,  1175,  1177, -2385,  1176,  2058,   615, -1488,  2386,  2063,
     608,  1029,   483,   483, -1488,  2127,   483,  2234,  1570,  2989,
    1177, -1488,  1173,  1174, -2517,   683,  2905,  1177,  1064,  1177,
    2143,  1394, -1793, -1488,   616,  3103,  2123,  2124,   620,  1177,
    3637,  3840,  3104,  2171, -1488,  2160,  1210,  1177,  -203, -1488,
   -1794,  3028,  1173,  1174,  3115,  1193,  1783,  2363, -1488,  1021,
    1223,  1177,  3125,  1769,  1175,  1173,  1174,  1176,  4217,  3816,
    3831,  1173,  1174,  2066,   859,  3052,  3126,  3705,  4022,  3584,
   -1793,  1175,  3585,  1707,  1176,  1175,  2262,  4208,  1176,  3069,
    1768,  1211,  1173,  1174,  1177,  1570,  3156,  4371,  2067,  1708,
    2625,  1972,  2263,  1112,  2190,  2631,  4299,  4299,  2172,  3273,
    1973,  1175,  2594,  1175,  1176,   934,  1176,  4372,  1974,  2632,
    1175,   695,  1641,  1176,  1835,  4159,  1175, -1488,  2720,  1176,
    1173,  1174,  2728, -1766, -2517,  2753,  2293,  1022,  3210,  3257,
    1177,  1645,  1682,  1734,  1300,   117,  1941,  1177,  2670,  1177,
   -1488,  2688,  1173,  1174, -1794,  3679,   623,  1175,  2729, -1488,
    1176,  2180,   624,  2193,  2259,  2695,  2860,  1735,   875,  1219,
     487,  1527, -1766,   488,  4324,  4325,  1173,  1174,  1173,  1174,
    2337,  1321,  1173,  1174,   860,  3902,  3903,  1177,  4265,   627,
   -1488,  1173,  1174,  1175,  3258,  1223,  1176,  1175,  2710,  2281,
    1176,  2194,   711,   629,  2638,  1963,  2283,  3238,  2158,  4003,
    1177,   634,   608,  1975,   598,   608,  2788,  1177,  1669,  1175,
    3418,  2342,  1176,   643,  2198,  2639,   598,  1173,  1174,  2398,
    4004,  1260,   792,  1173,  1174,  3751,  1260,  1173,  1174,  2305,
   -1488,  1504,  1505,  1177,  1963,  2311,  2311,  1836,  2311,  3904,
    1175,  2159,  1210,  1176,  1173,  1174,  3458,  2202,   598,   861,
    3460,  2933,   598, -1488,  2479,  1173,  1174,  2764,  2253,  1175,
    1173,  1174,  1176,  1175,  1173,  1174,  1176,  2184,   608,   608,
     598,   598,  1175,  2343,  3660,  1176,  1175,  2963,  2964,  1176,
    4286,   876,  1112,  2356,   631,  2311,  2311,  2311,   499,  4255,
    2310,  2310,  4259,  2310,  1976, -1488,  1177,   645,   608,  1173,
    1174,  1175,  3418,  2333,  1176,  1175,  1778,  1294,  1176,  1779,
    2203,  1175,  1780,  1177,  1176,   900,  2480,  1177,   899,  1173,
    1174,  1736,   646,  1222,   647,  1311,  2360,  2207,  1173,  1174,
     784,  2210,  1173,  1174,   992,  2421,  1202,  1203,  1204,  1205,
    2310,  2310,  2310,  1177,  2481,  1177,  3847,  2417,   799, -1488,
    1173,  1174,  1177, -1794,   877,  1173,  1174,  2213,  1177,  2225,
   -1488, -1488,  1222,   829,  2102,   115,  2244,  1175,  3419,  4191,
    1176,   598,  3072,  1520,  1521,  1173,  1174,   789,  1867, -1488,
    3290, -1488, -1794,  2442,   993,  4365,  2184,  4367,   840,  1177,
     598,   907,   890,  3685,   844,  1264,   864,  1175,   740,  2722,
    1176,  1946,   846,  3091, -1488, -1488,  2177,  1210, -1488, -1488,
    1175,  4348,  2482,  1176,  3302,  4385,  1175,  1344,   866,  1176,
    2313,  2463,  2314,  2945,  3308,  1177,  2431,  3247,  3310,  1177,
    2470,  2471,  2674,  3248,  1963,   972,  2724,  1175,   856,  3097,
    1176,  2475,  2476,  2477,  2478,  2453,  2486,  2487,  1392,  3420,
    4192,  1177,  4416,  4417,  1392,  3416,   973,   116,  2675,   832,
    3419,   975,  3272,  3521,   982,  3100,  3249,   994,  3383,  2380,
    2381,  2382,  1265,   991,   556,  1175,   117,  1266,  1176,  3433,
    3434,   556,  1177,  1011,  4366,  1001,   934,  2265,  1980,    13,
    2559,  2619, -1794,  2483,  1282,  2635,  3107,  1175,  3777,  1030,
    1176,  1177,  3447,  1035,  2573,  1177,  2676,  2186,  1210,  2677,
    3991,  3992,  3993,  3994,  1177,  3111,  1963,  2678,  1177,  3112,
    1267,  1175,  1031,  1175,  1176,   934,  1176,  1175,  3113,   115,
    1176,  1210,  3114,  1359,  1066,  1268,  1175,  2102,  1359,  1176,
   -1794,  3431,  1682,  1177,   118,  2585,  1067,  1177,  2585,  2585,
    1068,  2585,  1070,  1177,  2585,  2585,  2585,  2585,  2585,  2585,
    2585,  3116,  1222,  2585,  1071,  2585,  1223,  3119,  1480,  1481,
     608, -1488,  1175,   119,   608,  1176,  2636,  1072,  1175,   483,
    2756,  1176,  1175,  1190,  1075,  1176,   598,   598,   598,  2659,
    3778,  2892,  2662,    25,  2277,  1682,  1076,  2473,  1077,  1175,
    2187,  1639,  1176,  2641,   962,  1223,  1544,  1190,  1770,  1177,
    1175,  1078,   608,  1176,  1079,  1175,  1080,   608,  1176,  1175,
    2199,  1210,  1176,  3124,  2969,   120,  2342, -1488,  1682,  4081,
    3779,  1283,  2746,   555,  2621,   907,   890,  4092,  2103,  1177,
    1214,  2655,  2656,  2657,  1222,  1081,   878,   879,   880,   881,
     882,   883,  1177,  3127,  1175,  3421,  4193,  1176,  1177,  1082,
   -1488,  1083,  2767,   884,  2479,  4098,  3129,  2970,  4101,  4102,
    4103,  4104,  3131,  1086,  1175,  1088, -1488,  1176,   995,  1177,
    1980, -1488,  -643,  1175,  4093,  3951,  1176,  1175,  2343,  1963,
    1176,  2499,  2499,  3133,  3206,  4016,  4017,  1037,  1218,  2484,
    1190,  1089, -1488,   487,  2500,  1175,   488,  1090,  1176, -1488,
    1175,   608,  2104,  1176,  1404,  1093,  2344,  1177,  4018,  1173,
    1174, -1488,  3547,  3548,  2906,   934,  2480,  3155,  1094,  2102,
    1175,  3134, -1488,  1176,  1095,  4177,  2765, -1488,  1096,  1177,
    2679,   608,   996,  1405,   997,  3074, -1488,  3421,  2200,  1210,
    2201,  1210,   550,  3135,  2481,  1097,   121,  3621,  1898,  4189,
    4190,  2479,   608,  1177,  2974,  1177,  2205,  1210,  4202,  1177,
    1098,  1981,  1099,  1379,  2488,  2489,  1193,  3452,  1177,  3453,
    3492,  3765,  1529,  3454,  2345,  1213,   966,   967,  4197,   968,
    1406,   969,  3675,  1235,  2796,  1407,  1100,  2367,  3951,  3951,
    1193,  1001,    37,  2526,  -643,  1223,  1101,   934,  2796, -1766,
     494,  2103,  3210,  1102,  1177, -1488,  1682,  1222,  1103,  2253,
    1177,  1106,  2482,  2480,  1177,  2818,  2621,   122,  3765,  2821,
    3069,    43,  1380,   608,  3678,  2398,  1359,  1261, -1488,  2738,
    1210,  1177,  1107,  2066,  2066, -1686,  2841, -1488,  2843,  1113,
    1038,  2481,  1177,  2773,  2774,  3684,  1189,  1177,  2105,  1114,
    1381,  1177,  1115,  2840,  1116,  2346,  3686,  1117,  2067,  2067,
     900,  3687,  3117,  1210,  4031,  4032,  1899,  1899, -1488,  3216,
    3217,  1963,  2680,  4290,  3220,  3221,   123,  1223,  -979, -1686,
   -2569,  2367,  1118,  1193,  1530,  2138,  1177,  1119,  1531,  2368,
    3386,  3387,  1120,  2483,  1121,  1683,  1124,  2767,  1125,  1532,
    3688,  1126,  4091,  1127,   608,   608,  1177,  2369,  2370,  2482,
    2342,  1128,  3676,  1129,  2499,  1177,  1130,  1980, -1488,  1177,
    3689,  3466,  1210,  3570,  3951,  3951,  3573,  3574,  1269,  3753,
    1131,    52,  1408,  3987, -1686,  1132,  2681,  1177,  1133,  1195,
    1196, -1488,  1177,  3586,  2573,  3213,  1263,  3488,  3489,  2573,
    1271,  1190,  2479,  1981,  2930,  2573,  1272,  3626,  3627,  2573,
    1134,  2941,  1177,  1280,  2682,  1135,  2102,  3663,  3672,  1281,
     934,  2941,  2343,  2573,  2573,  2918,   608,  2941, -1686,    55,
    2943,  2944,  2962, -1488,  2664,  2573,  2932,  1683,  3680,  1210,
    2483,  1136,  2942,  2103,  2501,  3697,  1210,   598,  1137,  1222,
    2344,  2369,  2370,  3712,  3713,  2941,  3951,  2973,  1409,  4398,
    2528,  -643,  2573,  2999,  2480,  1138,  2966,  3818,  2489,   578,
    1139,  3951,  2976,   875,  3025,  1140,  2526,  1141,  2979,  2980,
    1533,  1145,  1195,  1196,  3951,  1173,  1174, -1488,  1146,  2371,
    1149,   657,  2481,  3833,  3834,  1150, -1766,  1154,  2443, -1488,
    1223,  1191,  2978,  3837,  3834,  1200,  1201,  1202,  1203,  1204,
    1205,  2347,  1382,  2621,   579,  1158,  2066, -1488,  2345, -1488,
    1159,  1410,  3440,  1160,  3029,  1192,  1161,  1198,  1199,  1200,
    1201,  1202,  1203,  1204,  1205,  1162,  4458,  1163,   598,  2573,
    3951,  2067, -1488, -1488,  3838,  3834, -1488, -1488,  1212,  2484,
    2102,   119,  3951,  3951,   497,  3896,  3489,  1997,  1998,  1603,
    2482,  3899,  3834,  3907,  3908,  1289,  3759,  1290,  1963,  4001,
    4002,  1322,  1306,   678,  3467,  1318,  1534,  4030,  3221,  1320,
    1323,  1599,  1600,  1601,  1602,  1603,  1337,   899,   580,  1324,
    -775,  -775,  2000,  3054,  1193,  1338,   876,  1339,  3951,  2346,
    -775,  1325,  1326,  1327,  1342,  2003,  4034,  3834,  3951,  4035,
    3834,  1345,   934,  2004,  1024,  1025,  4037,  3834,  1328,  1351,
    1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,   682,  2444,
   -1766,  4038,  3834,  -643,  1411,   683,   657,  1350,  2006,  4044,
    4045,  2483,  4046,  4045,  1383,  3951,  2484,  3951,  2445,  1374,
    1981,  1370,  1464,  4213,  3221,  1378,  2007,  3951,  1607,  2446,
    4214,  3221,  1390,   688,  1399,  1384,  1260,  3642,  2305,   877,
    1412,  1287,   608,   608,   608,  3951,  2527,  3951,  1400,  3951,
     598,  1604,  1605,  1606,  1607,  2012,  3951,  4401,  4402,  1194,
    2103,  1401,  1223,  2528,  2798,  1416,  1222,  3951,   608,  4220,
    3489,  1683,  1963,  3594,  2981,  1385,  2982,  4263,  4264,  3916,
    1419,  3759,  3951,  3951,  1423,  3916,  1112,  2102,   678,   608,
     608,   608,  1424,  3037,  4305,  4306,  4360,  3385,  3951,  3951,
    1432,   695,  3237,  3951,  1435,  3193,  1436,  4447,  4448,  3855,
    3848,  3849,  2447,  1195,  1196,  1439,  3595,  1440,  2983,  3236,
    1442,  3596,  1190,  1672,  1673,  2016,  1197,  4090,  4195,  4195,
    1359,  1682,  2017,  1608,  1447,  3668,  1452,  1611,  1464,  1237,
    1470,  2984,  1472,   682,  1612,  3506,  3507,  3473,  3474,  2018,
     683,  3250,  3251,  1474,  3253,  3710,  3711,  1478,  1477,  1608,
    1482,  1609,  1610,  1611,  1485,  1486,   706, -1766,  3597,  1489,
    1612,  1190,  1490,  1491,  1538,  2347,  2985,   709,   688,  1539,
    1543,   710,   711,  1190,  1545,  -643,  1540,  1546,  2573,  1564,
    1566,  2573,  2573,  1208,  2103,  2499,  2941,  1570,  1577,  1589,
    1222,  1592,  1574,  1575,  1576,  1329,   581,  2500,  2020,   608,
    1175,  1628,  2573,  1176,  1587,  3856,  3857,  2484,  1638,  1639,
    3858,  3859,  1330,  1613,  1640,  2448,  2021,  3296,   582,   934,
    2941,  1663,  1680,  1691,  1238,  1700,  3300,  1504,  1505,  1963,
    2941,  1716,  1722,  1742,  2941,  1642,   695,  1745,  1646,  1613,
    1747,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,  1239,
    1748,  1751,   583,  1240,  3314,  1754,  1755,   598,  2104,  1665,
    1666,  2206,  3370,  1670,  1756,  1757,  1758,  1759,   483,  1615,
    2025,  1760,  3380,  3108,  2941,  1761,  1772,  1773,  2027,  2028,
    2449,  1684,  1685,  1774,  1775,  1795,  -810,  1806,  1241,  3389,
    1798,   493,  3376,  1814,  1614,  1615,  1815,  -643,  1816,  1223,
    4090,   706,  3400,   494,  1682,  1193,  1242,  1817,  1821,   598,
     584,  3392,  3315,  1824,  1827,  1828,   710,   711,  2443,  1844,
    3413,   878,   879,  1829,   881,  1838,   883,  1868,  1876,  1880,
     512,  4132,  1908,  1910,  1909,  1911,  1922,  2066,   884,  1913,
    1331,  1925,   786,   787,  1939,  1948,   790,   791,  3865,  2034,
     793,  2103,   795,   934,  1193,  1527,   732,  1222,  3656,  3657,
    3760,  2070,  2067,  3761,  3402,  1344,  1193,  2053,  1243,  1520,
    1521,  2072,  2073,   738,  2071,  2074,  2075,   494,   740,  2076,
    2077,   741,  2096,  2078,  2079,  2080,  2081,  1024,  1025,   513,
    2082,  2083,  2084,  3598,  2085,  2086,  1332,  2087,  2088,  2089,
    3599,  2090,  1616,  2091,  2105,  2092,  3465,  3511,  2035,  2093,
    2986,  -841,  2094,  1333,  2841,  2095,  2098,   514,  1618,  2116,
    2132,  2117,  2122,  2133,  2036,  2104,  2147,  2037,  1616,  2134,
    2135,  2840,  3877,  1223,  3762,  3763,  2141,  2149,  3600,  2150,
    2434,  2435,  1177,  1617,  1618,  4310,  2151,  2167,  2166,  2444,
     515,  2168,  4005,  2796,  1195,  1196,  2175,  2173,  2174,   495,
    4180,  2178,  2184,  2039,  2617,  2258,  2188,  2254,  2445,  1190,
    2192,  2818,  3499,  2196, -1195,  3501,  2214,   608,  2215,  2446,
    2220,  1091,  2223,  2224,  2235,  4006,   608,  2236,  2237,  2264,
    3980,  3984,  2765,  3756,  1997,  1998,  3953,  1244,   516,   900,
     900,   732, -1317,  1195,  1196,  3760,  1245,  1205,  3761,  3601,
    2274,  1143,  2326,  2294,  -643,  1195,  1196,  1147,   738,  3061,
     934,  1246,  2334,   740,  1683,  3516,   741,  -775,  -775,  2000,
    2308,  2340, -1766,  2354,  2351,  2573,  2378,  -775,  4310,  1247,
    2375,  2379,  2003,  2394,  2400,  2573,  2401,  2941,  2402,  2405,
    2004,  4442,  2418,  4315,  4316,  1682,  4318,  1683,  2406,  2407,
    2408,  2409,  2447,  2941,  4451,   598,  2420,  2573,  1682,  4442,
    4015,  2105,  2425,  1682,  4451,  2006,  2438,  2451,  1682,  3762,
    3763,  2452,  1248,  2456,  2455,  3737,  2458,  1190,  2464,  1464,
    2462,  3784,  3785,  2007,  1200,  1201,  1202,  1203,  1204,  1205,
    1223,  1359,  4007,  4356,  3788,  4357,  4358,   497,  1249,  2465,
    3602,  3791,  2466,  2467,  2468,  1997,  1998,  2499,  2469,  2521,
    2522,  1950,  2012,  2524,   -64,  1234,  1237,   487,  2512,   517,
     488,  2525,  3980,  2531,  3807,  1951,  3984,  3809,  2517,  3025,
    2535,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,  3623,
    2000,  2518,  2534,  1198,  1199,  1200,  1201,  1202,  1203,  1204,
    1205,   496,  1193,  2003,  3655,  3655,  3655,  2533,  2542,  1993,
    2543,  2004,  3647,  2549,  1994,  2448,  1995,  1996,  2548,  2554,
     608,   497,  4413,  3731,  2580,  4008,  -643,  2555,  1997,  1998,
    3980,  3984,  2016,  2146,  2561,  2576,  2006,  4428,  2582,  2017,
     518,  3897,  3898,  4009,  3900,  3901,  4171,  4173,  2620,  2642,
    1464,  2660,  4015,  2664,  2007,  2668,  2018,  2673,  2690,  1999,
     498,  1238,  -567,  2000,  2001,   499,  4010,  2689,  2691,  2002,
    1599,  1600,  1601,  1602,  1603,  2771,  2003,  1180,  1181,  2702,
    2449,  3720,  2778,  2012,  2004,  1683,  1239,  2703,  2779,  2282,
    1240,  2715,  2737,  2744,  2005,  2752,  2761,  2776,  2762,   519,
     500,  2772,   608,  2191,   520,  2777,  2780,  2195,   501,  2006,
    2398,  2786,  2791,  1182,  2789,  2020,  2799,  2792,  2443,  2800,
    1193,  1801,   521,  1464,  1183,  1241,  2808,  2007,  3734,  2804,
    2822,  2219,  2823,  2021,  2825,  2008,  2009,  2826,  1952,  2827,
    3655,  2385,  2010,  1242,  2386,  2845,  2846,   522,  1852,   598,
    2011,  1195,  1196,  2016,  -912,  1853,  2012,  2856,  3774,  2866,
    2017,  4454,   523,  1184,  2870,  2871,  2873,  2013,  2872,  2874,
    1604,  1605,  1606,  1607,  1185,  2882,  2880,  2018,  1950,  2881,
    2898,  3769,  2902,  1359,  2903,  2014,  2948,  2025,  2950,   608,
    3014,  3018,  1951,  3035,  3034,  2027,  2028,  3039,  3040,  3165,
    3041,  1186,  2026,  3086,  3767,  1243,  3008,  3793,  3166,  3190,
    3088,  3195,  3020,  3163,  3810,  1953,  2142,  3167,  3089,  1298,
    3202,  3814,  3223,  3877,  2015,   782,  2016,  3090,  3042,  3168,
    3169,  3170,  3066,  2017,  4168,   934,  2020,  3075,  3079,  3400,
    1954,  3081,  3146,  3092,  3093,  3819,  3171,  3511,  3136,  2444,
    2018,  4011,  1899,   782,  2021,  3152,  3147,  3150,  3154,  3159,
    3162,  3234,   608,  3183,  3199,  1187,  2034,  3188,  2445,  1195,
    1196,  3198,  3205,  2019,  3212,  3215,  4171,  3235,  1608,  2446,
    1609,  1610,  1611,  3218,  3239,  3240,  4352,  3243,  3254,  1612,
    1199,  1200,  1201,  1202,  1203,  1204,  1205,  3255,  3262,  3266,
    3281,  1955,  3270,  3267,  3280,  3282,  3299,  3293,  2025,  2020,
    3303,  3311,  3869,  3312,  3371,  3313,  2027,  2028,  3374,  3378,
    3377,  3382,  3384,  3388,  3385,  2035,   608,  2021,  3395,  3396,
    3401,  2022,  2367,  3404,  1244,  3410,  3411,  3412,  3430,  2821,
    3436,  2036,  1941,  1245,  2037,  4235,  3880,  3432,  3655,  3655,
    4015,  3655,  3655,  3444,  4352,  1952,  3443,  3456,  1246,  2241,
    4235,  3469,  2447,  3141,  3470,  3479,  3481,  3484,  1613,  2023,
     782,  3491,  3504,  4245,  2024,   782,  1247,  3512,  4425,  3517,
    2039,  2025,  3525,  3518,  3526,  3741,  2026,  2034,  3538,  2027,
    2028,  3546,  1359,  3549,  1956,  3550,  3555,  3564,  3571,  3617,
    3620,  2574,  3622,  2315,  3624,  4425,   782,  1198,  1199,  1200,
    1201,  1202,  1203,  1204,  1205,  3630,  3958,   598,  3634,  1248,
    3644,  2029,   782,  1614,  1615,  2316,  4456,  3643,  3655,  3645,
    3648,  3649,  1953,  3651,  3658,  2030,  2031,  2032,  2033,  2317,
    3661,  3662,  3663,  3664,  3665,  1249,  2035,  3669,  3671,  3673,
    2318,  3674,  3681,  3682,  1024,  1025,  3677,  1954,   598,  3683,
    2034,  3691,  2036,  3172,  3698,  2037,   782,   782,   782,   782,
    3692,   608,  3959,  3708,  3699,  2448,  3715,  3716,  3718,   782,
    3173,  3725,  3727,  3713,  3238,  3728,  3732,  4235,  3733,  3735,
   -1400,  3745, -1405,  3754,  3755,  3775,  3608,  4342,  3757,  2319,
    2320,  2039,  4041,  3758,  3797,  3772,  3783,  3787,  3789,  3798,
    3799,  3801,  3802,  3997,  3611,  3808,   839,  4052,  1955,  2035,
    3820,  3842,  4059,  3821,  3836,  3844,  3845,  2321,  3846,  3850,
    3851,  3852,  3863,  3864,  3883,  2036,  3870,  3906,  2037,  3912,
    2449,  2588,  2589,  3885,  2596,  3672,  4375,  2599,  2600,  2601,
    2602,  2603,  2604,  2605,  3920,   709,  2608,  1616,  2610,  3962,
    3919,  2038,  3976,  3986,  3954,  3988,  4235,  3999,  4235,  3990,
    4027,  4048,  1617,  1618,  2039,  4395,  4066,  3996,  4029,  4080,
    4040,  -343,  4068,  4075,  4097,  4099,  4235,  4100,  4069,  4078,
    1683,  4085,  3174,  4105,  2322,  4108,  3869,  4110,  4112,  4084,
    4117,  3003,  -361,  4165,  4136,  4139,  4166,  4179,  3175,  4167,
    4182,  1956,  4184,  4199,  4211,  4221,  4224,  4235,  4235,  4198,
    4225,  2821,  4433,  2821,  4231,  4232,  4236,  4242,  4243,  4244,
    4247,  4253,  4267,  4268,  -912,  4269,  4270,  4276,  1073,  4277,
    4278,  4279,  4280,  4281,  4287,  4289,  4282,  2323,  4291,  4140,
    4292, -2288,  4295,  4301,  4314,  4317,  4330,  4319,  4320,  4343,
    4344,  4346,  4362,  4349,  3176, -1561,  4359,  4363,  4368,  1105,
    4364,  4376,  4384,  1498,  4369,  4390,  4379,  4381,  4388,  4373,
    4393,  3177,  4382,  4394,  4396,  1122,  4400,  4404,  4406,  4414,
    4434,  4429,  4430,  4443,  2769,  4453,  4061,  3632,   608,  2612,
    3633,  2910,  1047,  3824,  4204,  4174,  4076,  4302,  1476,  4188,
    4303,  3822,  3826,  3957,  4445,  4408,   568,  2767,   944,  2301,
    2376,  3931,  3179,  3932,  4327,   782,  3934,  3935,  3937,  3938,
    3939,  3940,  1167,  1499,  1500,  1501,  1502,  1503,  1504,  1505,
    1506,  1507,  1508,  3941,  1509,  1510,  1511,  1512,  1513,  1514,
    1515,  1516,  1517,  4418,  1518,  1519,  3942,  4229,  4328,  4300,
    3945,  3946,  3947,  4241,  4240,  1542,  1992,  2040,  3965,  2565,
    3307,  3201,  2803,  1683,  4095,  3483,  1804,  4312,  4183,  3721,
     782,   782,  4378,  4313,  3998,  2101,  3650,  4351,  4107,   782,
     782,   782,   782,   782,   782,   782,   608,   644,  2563,  3393,
    4260,  4261,  3059,   782,   782,  3563,   782,   782,  2570,  3005,
    3551,   782,   782,  3578,  3579,   782,   782,   782,   782,  3618,
     782,   782,  3914,  3800,  3768,  4252,  3792,  3138,   782,   782,
    2900,   782,   782,   782,   782,   782,  3461,  3459,   782,   782,
     782,   782,   782,   782,   782,   782,   782,   782,   782,  3457,
     782,  4120,   508,   782,   782,   509,   608,  4123,   782,  2131,
    4122,  4082,   782,   782,   782,  4086,  2654,  4087,  3975,  3917,
    2567,  2993,  3025,  3025,  1926,   782,   782,   782,   955,  3771,
    1520,  1521,  4332,  1924,   782,  3552,  2805,  2359,  3192,  4340,
    2099,   782,   782,   782,  2787,   782,  2828,  3480,  2743,  2062,
    3952,   970,   782,   782,   782,  2384,   782,   782,   782,   782,
     782,  1349,   782,   782,   782,   782,   782,   782,   782,   782,
    3468,  3161,  3522,   782,   782,  2742,  2687,  4119,  1637,  2893,
    4033,  4322,  2759,  3631,  4323,  3558,  1997,  1998,  3887,  1588,
    4399,  4196,  3879,  2835,  1744,  2785,  1456,  2658,  1792,  2811,
    1457,  3723,  3495,  1819,  4446,  3494,  3532,   959,  4386,  1458,
    2140,  1459,  4250,  4391,  1065,   940,  2427,  1914,  2428,  -775,
    -775,  2000,  2295,  1826,  3562,  3482,  4397,  4377,  4321,  -775,
    4452,  4455,  3498,  3796,  2003,  4271,  1892,  2854,  1497,   902,
    3514,   903,  2004,  3515,  2412,  2852,  1841,  2257,  2851,  4426,
    1833,  2844,  1336,  2339,   871,  1785,  3989,  3995,   873,  2121,
    3180,  1341,   638,   639,  1051,  1052,  1053,  2006,     0,     0,
       0,     0,     0,     0,  1683,     0,  4426,     0,     0,     0,
       0,  1464,     0,   608,     0,  2007,     0,  1683,     0,     0,
       0,     0,  1683,  1568,  1569,     0,     0,  1683,     0,     0,
       0,     0,  1579,  1580,     0,     0,  1583,  1584,  1585,     0,
       0,     0,   782,     0,  2012,     0,  1593,  1594,     0,  1595,
    1596,     0,   782,     0,  1621,     0,     0,     0,  1630,  1631,
    1632,  1633,     0,  1635,     0,     0,     0,   782,     0,     0,
     782,  1643,  1644,     0,  1647,  1648,   800,   801,     0,     0,
       0,  1652,  1653,  1654,     0,     0,  1657,  1658,  1659,  1660,
    1661,  1662,     0,  1664,     0,     0,  1667,  1668,     0,     0,
       0,  1671,     0,     0,     0,  1674,  1678,  1679,     0,     0,
       0,     0,     0,     0,  2016,     0,     0,     0,  1686,  1687,
    1688,  2017,     0,     0,     0,     0,     0,  1696,     0,     1,
       2,     0,     0,     0,  1701,  1702,  1703,     0,  2018,     0,
       0,     0,     0,     0,     0,     0,     3,     0,     0,     0,
       4,  2644,     0,     0,     0,     0,     0,     0,   802,     0,
       0,     0,     0,     0,     5,     6,     0,  1739,     0,     0,
       0,     0,     7,     0,     0,     0,     8,     9,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   803,
       0,    10,   801,     0,     0,     0,     0,  2020,     0,     0,
       0,     0,     0,   804,     0,     0,     0,     0,     0,     0,
      11,     0,     0,     0,     0,  2021,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   805,     0,     0,   806,
       0,     0,    12,     0,     0,     0,     0,     0,     0,     0,
     807,    13,    14,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,   808,     0,     0,     0,     0,    18,     0,  2025,
       0,   782,     0,   802,     0,     0,     0,  2027,  2028,     0,
       0,    19,     0,     0,     0,     0,     0,   809,     0,     0,
       0,     0,     0,   810,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,   803,  1840,     0,     0,     0,     0,
       0,     0,    21,     0,    22,  1846,     0,     0,   804,    23,
       0,     0,    24,     0,     0,     0,     0,     0,     0,     0,
    1874,     0,     0,  1879,   811,     0,     0,     0,     0,     0,
       0,   805,     0,     0,   806,    25,     0,    26,  2034,     0,
       0,     0,     0,     0,     0,   807,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    27,     0,     0,     0,   782,
     782,   782,     0,     0,     0,     0,     0,   808,     0,     0,
       0,     0,    28,     0,   782,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   809,     0,     0,     0,     0,  2035,   810,     0,
     782,     0,     0,     0,     0,     0,   782,     0,     0,   782,
       0,   782,     0,  2036,     0,     0,  2037,   782,     0,   782,
     782,     0,     0,     0,     0,     0,     0,     0,     0,   868,
     801,     0,     0,     0,     0,     0,     0,     0,     0,   811,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2039,     0,     0,     0,     0,   812,     0,     0,
       0,   813,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,   814,     0,     0,
       0,     0,     0,     0,     0,   815,     0,     0,     0,    31,
       0,  3316,  3317,   816,     0,   782,     0,  3318,     0,  3319,
       0,  3320,  3321,    32,     0,     0,  2645,     0,     0,     0,
       0,   802,     0,     0,    33,     0,     0,     0,  3322,     0,
       0,   817,     0,     0,  2152,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   818,   819,    34,     0,     0,    35,
       0,    36,   803,     0,    37,     0,   782,    38,    39,     0,
       0,     0,     0,     0,     0,   782,   804,    40,     0,    41,
       0,     0,     0,     0,     0,     0,  3323,    42,     0,  3324,
       0,     0,   812,    43,     0,     0,     0,  3325,     0,   805,
     820,    44,   806,     0,     0,     0,    45,     0,    46,     0,
       0,     0,   814,   807,     0,     0,  3326,     0,     0,     0,
     815,     0,     0,     0,     0,     0,     0,     0,   816,   821,
       0,     0,     0,  3327,     0,   808,     0,    47,     0,     0,
       0,    48,  2227,  2229,  2231,     0,     0,     0,     0,     0,
       0,   822,     0,   823,     0,     0,   817,  3328,     0,  3329,
     809,     0,     0,     0,     0,     0,   810,     0,     0,   818,
     819,     0,  3330,  3331,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2266,    49,     0,     0,     0,     0,     0,
       0,     0,  2271,     0,  2272,     0,    50,     0,     0,     0,
      51,     0,     0,    52,     0,     0,     0,   811,    53,     0,
       0,     0,     0,  3332,     0,   820,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    54,     0,     0,     0,
       0,     0,     0,  3333,   821,     0,     0,     0,     0,     0,
       0,    55,  3334,  3335,     0,  3336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   822,     0,   823,     0,
       0,     0,     0,     0,     0,   782,     0,     0,  2355,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3337,  3338,  3339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3340,  3341,  3342,     0,     0,     0,     0,  3343,     0,     0,
    3344,     0,     0,     0,     0,     0,     0,     0,     0,  2411,
       0,     0,     0,     0,     0,     0,     0,  3345,  3346,     0,
     812,     0,     0,     0,   869,     0,     0,     0,   782,     0,
       0,     0,   782,     0,     0,     0,     0,   782,   782,     0,
     814,     0,     0,     0,     0,     0,   782,     0,   815,   782,
       0,  3347,  3348,     0,     0,     0,   816,     0,     0,   782,
     782,     0,   782,   782,     0,   782,   782,   782,   782,   782,
       0,     0,   782,     0,     0,     0,  3349,     0,     0,     0,
       0,   782,     0,     0,   817,     0,     0,     0,   782,     0,
     782,     0,   782,   782,     0,   782,   782,   818,   819,     0,
     782,   782,   782,     0,     0,     0,   782,   782,   782,     0,
     782,     0,   782,     0,   782,     0,   782,     0,   782,     0,
       0,     0,     0,   782,     0,     0,     0,     0,     0,     0,
    3350,     0,     0,     0,  3351,     0,     0,     0,     0,     0,
       0,     0,   782,   820,     0,     0,  3352,     0,     0,   782,
       0,     0,   782,     0,     0,     0,     0,     0,   782,     0,
       0,   782,     0,     0,     0,   782,     0,     0,     0,     0,
       0,     0,   821,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   822,     0,   823,     0,     0,     0,
    3353,     0,     0,  3354,     0,     0,  3355,  3356,  3357,  3358,
       0,     0,     0,     0,     0,     0,     0,     0,  2581,     0,
       0,     0,     0,     0,     0,   782,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3359,  3360,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3361,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2667,     0,     0,     0,  2669,     0,     0,   782,     0,
    2671,  2672,     0,     0,     0,     0,     0,     0,     0,  2685,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2692,  2693,     0,  2694,     0,     0,  2696,  2697,
    2698,  2699,  2700,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2704,     0,     0,     0,     0,     0,
       0,  2705,     0,  2706,     0,  2707,  2708,     0,  2709,     0,
       0,     0,     0,  2712,  2713,  2714,     0,     0,     0,  2716,
    2717,  2718,     0,  2719,     0,  2721,     0,  2723,     0,  2725,
       0,  2726,     0,     0,     0,     0,  2727,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2747,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2757,     0,     0,  2760,     0,     0,     0,     0,     0,
       0,     0,     1,     2,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     4,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     5,     6,     0,
       0,     0,     0,     0,     0,     7,     0,     0,     0,     8,
       9,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    10,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    11,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   905,     0,     0,    12,     0,     0,     0,     0,
       0,     0,   847,   906,    13,    14,    15,     0,     0,     0,
     782,     0,     0,     0,   782,     0,     0,    16,    17,     0,
       0,  1874,     0,     0,     0,     0,     0,   907,   890,     0,
       0,     0,     0,     0,   782,   782,     0,     0,   908,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   782,     0,     0,     0,   909,
      20,   910,     0,   911,   782,     0,   782,     0,   782,     0,
       0,     0,     0,   912,     0,    21,     0,    22,     0,     0,
       0,     0,    23,     0,     0,    24,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   782,     0,     0,     0,     0,
     782,     0,     0,     0,     0,     0,     0,     0,    25,     0,
      26,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1766,   913,     0,     0,     0,   782,   914,    27,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,   916,     0,   917,
       0,     0,     0,     0,     0,     0,   918,     0,   919,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   920,   921,     0,     0,     0,     0,   782,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   922,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   923,     0,     0,     0,
       0,     0,     0,   782,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,   924,
       0,     0,     0,  3071,     0,     0,    32,  3073,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3095,  3096,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,    35,     0,    36,     0,     0,    37,  3118,     0,
      38,    39,     0,     0,     0,     0,     0,  3128,     0,  3130,
      40,  3132,    41,     0,   925,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,    43,     0,     0,     0,
       0,     0,     0,     0,    44,   782,   782,     0,     0,    45,
     926,    46,     0,     0,     0,     0,     0,     0,     0,     0,
     927,   928,     0,     0,   929,   930,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3189,
      47,     0,     0,     0,    48,   931,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   782,     0,
       0,     0,     0,     0,     0,     0,  2991,     0,     0,     0,
       0,  1994,     0,  1995,     0,     0,     0,    49,     0,     0,
       0,   932,     0,   782,     0,  1997,  1998,   782,   782,    50,
     782,     0,     0,    51,   933,     0,    52,     0,     0,   782,
    1874,    53,     0,     0,   782,     0,     0,   782,     0,   782,
     782,     0,     0,     0,     0,     0,  1999,     0,     0,     0,
    2000, -2325,     0,     0,     0,   934,     0,     0,     0,    54,
       0,     0,     0,  2003,     0,     0,     0,     0,     0,     0,
       0,  2004,   782,   935,    55,     0,  3275,     0,     0,     0,
       0,  2005,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2006,     0,     0,     0,
       0,     0,   782,     0,     0,     0,     0,     0,     0,     0,
    1464,     0,     0,     0,  2007,     0,     0,     0,     0,     0,
       0,     0,  2008,     0,     0,   782,     0,     0,     0,  2992,
   -2325,     0,     0,     0,     0,     0,   936,  2011,     0,     0,
       0,     0,     0,  2012,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2014,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   782,     0,  3372,  3373,
       0,     0,     0,     0,   782,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2016,     0,     0,     0,     0,     0,     0,
    2017,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2018,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3417,     0,     0,     0,     0,     0,     0,     0,     0,
    2019,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3435,     0,     0,     0,
    3438,  3439,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3446,     0,     0,     0,  2020,  3448,     0,     0,
    3449,     0,  3450,  3451,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2021,     0,     0,     0,  2022,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2024,     0,     0,     0,  3476,     0,     0,  2025,     0,
       0,     0,     0,     0,     0,     0,  2027,  2028,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3476,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   782,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2031,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   782,   782,     0,     0,  2034,     0,  3476,
       0,     0,   782,     0,     0,     0,     0,  3543,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2035,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2036,     0,     0,  2037,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2039,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   782,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   782,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   782,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3476,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3743,  3744,     0,     0,
       0,     0,     0,     0,     0,  3275,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3949,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   782,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   782,
       0,     0,     0,     0,     0,     0,   782,     0,   782,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   782,     0,     0,     0,     0,     0,
    3949,  3949,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3843,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3476,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3275,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   782,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   782,     0,   782,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   782,     0,  3949,  3949,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4178,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4021,     0,     0,     0,   782,     0,  3949,  4026,
       0,  4028,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3949,   782,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3949,     0,     0,     0,
       0,     0,     0,     0,   782,     0,     0,  4047,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   782,  3949,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3949,  3949,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     782,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3275,     0,     0,     0,     0,
    3949,     0,     0,     0,     0,     0,     0,   782,     0,     0,
    3949,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4134,     0,  4135,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4143,     0,     0,
     782,     0,     0,     0,     0,     0,     0,  3949,     0,  3949,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3949,
       0,     0,     0,   782,     0,     0,   782,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3949,     0,  3949,
       0,  3949,     0,     0,     0,     0,     0,     0,  3949,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3949,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3949,  3949,     0,     0,     0,  4233,
     782,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3949,  3949,     0,     0,     0,  3949,     0,  4238,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3476,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     782,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4285,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4334,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   136,     0,   653,   138,   139,   140,
     141,     0,     0,  4361,     0,     0,   142,     0,     0,   654,
       0,   144,   145,   146,   147,   148,   655,   150,     0,   151,
       0,     0,   656,   152,   657,   658,   659,   153,   660,  4380,
     154,   155,   156,  1675,   157,     0,   158,   159,     0,     0,
     160,   661,   662,   161,   162,     0,   163,   663,   664,   165,
       0,   166,   167,   168,   169,   665,   171,     0,   666,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   667,   188,     0,   189,
     668,   669,   190,  4427,     0,   191,   670,   192,   671,     0,
     193,   672,   673,     0,   194,   195,   196,   674,   675,   676,
       0,     0,     0,     0,   677,   199,   678,     0,     0,   679,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,  3476,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,   680,     0,   227,   228,   229,
     681,   682,   230,   231,     0,   232,   233,   234,   683,     0,
     235,     0,     0,     0,   684,   237,     0,   238,     0,   239,
       0,   240,   685,   242,   686,     0,   244,     0,   245,     0,
     687,     0,   246,   247,     0,   248,   688,     0,   249,   250,
       0,     0,     0,   689,   252,   253,   254,   690,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,   691,   259,
     260,   692,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,  1676,   269,     0,   693,   270,   271,     0,     0,
       0,     0,     0,   694,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,   695,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,   696,   299,   300,   301,   302,   697,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   698,   310,
       0,     0,   699,   312,   700,   313,     0,   314,   701,   702,
     703,   704,   705,   319,   320,   321,   322,   323,     0,   706,
     324,   325,     0,     0,   326,   327,   328,   329,   707,   708,
     709,   330,   331,     0,   710,   711,   332,     0,   333,   334,
     712,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,   713,
     343,   344,     0,   345,   346,   714,   348,   349,   350,   351,
     352,   715,   716,   355,   717,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   718,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,   719,   720,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   721,
       0,   722,   392,   393,   394,   395,   396,   723,   724,   399,
     400,   401,   402,     0,   725,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,   726,   727,   427,   428,     0,   429,   430,   728,
     432,   433,   434,   729,   730,   435,   436,   437,   438,   731,
     439,   440,     0,     0,   441,   442,   443,   444,     0,   732,
     445,   446,     0,   733,   734,   735,   736,     0,     0,     0,
       0,  1677,   451,   452,     0,   737,   738,   739,   454,   455,
     456,   740,   457,   458,   741,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   742,
     467,     0,     0,   743,   744,   745,   746,   468,     0,     0,
     469,   747,     0,   748,   470,   471,   472,   749,   750,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   751,     0,     0,     0,   752,   753,     0,
       0,     0,     0,   754,   755,     0,     0,   756,   757,     0,
       0,   758,   759,   136,     0,   653,   138,   139,   140,   141,
    1870,     0,     0,     0,     0,   142,     0,     0,   654,     0,
     144,   145,   146,   147,   148,   655,   150,     0,   151,     0,
       0,  1871,   152,   657,   658,   659,   153,   660,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     661,   662,   161,   162,     0,   163,   663,   664,   165,     0,
     166,   167,   168,   169,   665,   171,     0,   666,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   667,   188,     0,   189,   668,
     669,   190,     0,     0,   191,   670,   192,   671,     0,   193,
     672,   673,     0,   194,   195,   196,   674,   675,   676,     0,
       0,     0,     0,   677,   199,   678,     0,     0,  1872,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   680,     0,   227,   228,   229,   681,
     682,   230,   231,     0,   232,   233,   234,   683,     0,   235,
       0,     0,     0,   684,   237,     0,   238,     0,   239,     0,
     240,   685,   242,   686,     0,   244,     0,   245,     0,   687,
       0,   246,   247,     0,   248,   688,     0,   249,   250,     0,
       0,     0,   689,   252,   253,   254,   690,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,   691,   259,   260,
     692,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,   693,   270,   271,     0,     0,     0,
       0,     0,   694,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,   695,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,   696,   299,   300,   301,   302,   697,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   698,   310,     0,
       0,   699,   312,   700,   313,     0,   314,   701,   702,   703,
     704,   705,   319,   320,   321,   322,   323,     0,   706,   324,
     325,     0,     0,   326,   327,   328,   329,   707,   708,   709,
     330,   331,     0,   710,   711,   332,     0,   333,   334,   712,
    1873,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,   713,   343,
     344,     0,   345,   346,   714,   348,   349,   350,   351,   352,
     715,   716,   355,   717,     0,   356,   357,   358,     0,   359,
       0,   360,   361,   362,   363,   364,     0,   718,   366,   367,
       0,     0,   368,     0,     0,     0,   369,   370,   371,   372,
     373,     0,     0,   374,   375,   376,   377,   378,     0,   379,
     380,     0,   381,   382,   383,   719,   720,   384,     0,   385,
       0,   386,   387,     0,   388,   389,   390,     0,   721,     0,
     722,   392,   393,   394,   395,   396,   723,   724,   399,   400,
     401,   402,     0,   725,   404,     0,     0,     0,   405,   406,
     407,   408,     0,     0,     0,   409,     0,     0,     0,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,     0,     0,     0,     0,     0,     0,     0,     0,   420,
     421,     0,   422,     0,     0,   423,     0,     0,   424,   425,
     426,   726,   727,   427,   428,     0,   429,   430,   728,   432,
     433,   434,   729,   730,   435,   436,   437,   438,   731,   439,
     440,     0,     0,   441,   442,   443,   444,     0,   732,   445,
     446,     0,   733,   734,   735,   736,     0,     0,     0,     0,
       0,   451,   452,     0,   737,   738,   739,   454,   455,   456,
     740,   457,   458,   741,   459,   460,     0,   461,   462,     0,
       0,   463,     0,     0,   464,     0,   465,     0,   742,   467,
       0,     0,   743,   744,   745,   746,   468,     0,     0,   469,
     747,     0,   748,   470,   471,   472,   749,   750,     0,     0,
       0,     0,     0,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   751,     0,     0,     0,   752,   753,     0,     0,
       0,     0,   754,   755,     0,     0,   756,   757,     0,     0,
     758,   759,   136,     0,   653,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   654,     0,   144,
     145,   146,   147,   148,   655,   150,     0,   151,     0,     0,
     656,   152,   657,   658,   659,   153,   660,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,   661,
     662,   161,   162,     0,   163,   663,   664,   165,     0,   166,
     167,   168,   169,   665,   171,     0,   666,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   667,   188,     0,   189,   668,   669,
     190,     0,     0,   191,   670,   192,   671,     0,   193,   672,
     673,     0,   194,   195,   196,   674,   675,   676,     0,     0,
       0,     0,   677,   199,   678,     0,     0,   679,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,   680,     0,   227,   228,   229,   681,   682,
     230,   231,     0,   232,   233,   234,   683,     0,   235,     0,
       0,     0,   684,   237,  2226,   238,     0,   239,     0,   240,
     685,   242,   686,     0,   244,     0,   245,     0,   687,     0,
     246,   247,     0,   248,   688,     0,   249,   250,     0,     0,
       0,   689,   252,   253,   254,   690,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,   691,   259,   260,   692,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,   693,   270,   271,     0,     0,     0,     0,
       0,   694,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,   695,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     696,   299,   300,   301,   302,   697,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   698,   310,     0,     0,
     699,   312,   700,   313,     0,   314,   701,   702,   703,   704,
     705,   319,   320,   321,   322,   323,     0,   706,   324,   325,
       0,     0,   326,   327,   328,   329,   707,   708,   709,   330,
     331,     0,   710,   711,   332,     0,   333,   334,   712,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,   713,   343,   344,
       0,   345,   346,   714,   348,   349,   350,   351,   352,   715,
     716,   355,   717,     0,   356,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   718,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,   380,
       0,   381,   382,   383,   719,   720,   384,     0,   385,     0,
     386,   387,     0,   388,   389,   390,     0,   721,     0,   722,
     392,   393,   394,   395,   396,   723,   724,   399,   400,   401,
     402,     0,   725,   404,     0,     0,     0,   405,   406,   407,
     408,     0,     0,     0,   409,     0,     0,     0,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,   425,   426,
     726,   727,   427,   428,     0,   429,   430,   728,   432,   433,
     434,   729,   730,   435,   436,   437,   438,   731,   439,   440,
       0,     0,   441,   442,   443,   444,     0,   732,   445,   446,
       0,   733,   734,   735,   736,     0,     0,     0,     0,     0,
     451,   452,     0,   737,   738,   739,   454,   455,   456,   740,
     457,   458,   741,   459,   460,     0,   461,   462,     0,     0,
     463,     0,     0,   464,     0,   465,     0,   742,   467,     0,
       0,   743,   744,   745,   746,   468,     0,     0,   469,   747,
       0,   748,   470,   471,   472,   749,   750,     0,     0,     0,
       0,     0,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   751,     0,     0,     0,   752,   753,     0,     0,     0,
       0,   754,   755,     0,     0,   756,   757,     0,     0,   758,
     759,   136,     0,   653,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   654,     0,   144,   145,
     146,   147,   148,   655,   150,     0,   151,     0,     0,   656,
     152,   657,   658,   659,   153,   660,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,   661,   662,
     161,   162,     0,   163,   663,   664,   165,     0,   166,   167,
     168,   169,   665,   171,     0,   666,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   667,   188,     0,   189,   668,   669,   190,
       0,     0,   191,   670,   192,   671,     0,   193,   672,   673,
       0,   194,   195,   196,   674,   675,   676,     0,     0,     0,
       0,   677,   199,   678,     0,     0,   679,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   680,     0,   227,   228,   229,   681,   682,   230,
     231,     0,   232,   233,   234,   683,     0,   235,     0,     0,
       0,   684,   237,  2228,   238,     0,   239,     0,   240,   685,
     242,   686,     0,   244,     0,   245,     0,   687,     0,   246,
     247,     0,   248,   688,     0,   249,   250,     0,     0,     0,
     689,   252,   253,   254,   690,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,   691,   259,   260,   692,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,   693,   270,   271,     0,     0,     0,     0,     0,
     694,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,   695,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,   696,
     299,   300,   301,   302,   697,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   698,   310,     0,     0,   699,
     312,   700,   313,     0,   314,   701,   702,   703,   704,   705,
     319,   320,   321,   322,   323,     0,   706,   324,   325,     0,
       0,   326,   327,   328,   329,   707,   708,   709,   330,   331,
       0,   710,   711,   332,     0,   333,   334,   712,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,   713,   343,   344,     0,
     345,   346,   714,   348,   349,   350,   351,   352,   715,   716,
     355,   717,     0,   356,   357,   358,     0,   359,     0,   360,
     361,   362,   363,   364,     0,   718,   366,   367,     0,     0,
     368,     0,     0,     0,   369,   370,   371,   372,   373,     0,
       0,   374,   375,   376,   377,   378,     0,   379,   380,     0,
     381,   382,   383,   719,   720,   384,     0,   385,     0,   386,
     387,     0,   388,   389,   390,     0,   721,     0,   722,   392,
     393,   394,   395,   396,   723,   724,   399,   400,   401,   402,
       0,   725,   404,     0,     0,     0,   405,   406,   407,   408,
       0,     0,     0,   409,     0,     0,     0,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,     0,
       0,     0,     0,     0,     0,     0,     0,   420,   421,     0,
     422,     0,     0,   423,     0,     0,   424,   425,   426,   726,
     727,   427,   428,     0,   429,   430,   728,   432,   433,   434,
     729,   730,   435,   436,   437,   438,   731,   439,   440,     0,
       0,   441,   442,   443,   444,     0,   732,   445,   446,     0,
     733,   734,   735,   736,     0,     0,     0,     0,     0,   451,
     452,     0,   737,   738,   739,   454,   455,   456,   740,   457,
     458,   741,   459,   460,     0,   461,   462,     0,     0,   463,
       0,     0,   464,     0,   465,     0,   742,   467,     0,     0,
     743,   744,   745,   746,   468,     0,     0,   469,   747,     0,
     748,   470,   471,   472,   749,   750,     0,     0,     0,     0,
       0,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     751,     0,     0,     0,   752,   753,     0,     0,     0,     0,
     754,   755,     0,     0,   756,   757,     0,     0,   758,   759,
     136,     0,   653,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   654,     0,   144,   145,   146,
     147,   148,   655,   150,     0,   151,     0,     0,   656,   152,
     657,   658,   659,   153,   660,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,   661,   662,   161,
     162,     0,   163,   663,   664,   165,     0,   166,   167,   168,
     169,   665,   171,     0,   666,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   667,   188,     0,   189,   668,   669,   190,     0,
       0,   191,   670,   192,   671,     0,   193,   672,   673,     0,
     194,   195,   196,   674,   675,   676,     0,     0,     0,     0,
     677,   199,   678,     0,     0,   679,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,   680,     0,   227,   228,   229,   681,   682,   230,   231,
       0,   232,   233,   234,   683,     0,   235,     0,     0,     0,
     684,   237,  2230,   238,     0,   239,     0,   240,   685,   242,
     686,     0,   244,     0,   245,     0,   687,     0,   246,   247,
       0,   248,   688,     0,   249,   250,     0,     0,     0,   689,
     252,   253,   254,   690,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,   691,   259,   260,   692,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,   693,   270,   271,     0,     0,     0,     0,     0,   694,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
     695,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,   696,   299,
     300,   301,   302,   697,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   698,   310,     0,     0,   699,   312,
     700,   313,     0,   314,   701,   702,   703,   704,   705,   319,
     320,   321,   322,   323,     0,   706,   324,   325,     0,     0,
     326,   327,   328,   329,   707,   708,   709,   330,   331,     0,
     710,   711,   332,     0,   333,   334,   712,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,   713,   343,   344,     0,   345,
     346,   714,   348,   349,   350,   351,   352,   715,   716,   355,
     717,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   718,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,   719,   720,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   721,     0,   722,   392,   393,
     394,   395,   396,   723,   724,   399,   400,   401,   402,     0,
     725,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,   726,   727,
     427,   428,     0,   429,   430,   728,   432,   433,   434,   729,
     730,   435,   436,   437,   438,   731,   439,   440,     0,     0,
     441,   442,   443,   444,     0,   732,   445,   446,     0,   733,
     734,   735,   736,     0,     0,     0,     0,     0,   451,   452,
       0,   737,   738,   739,   454,   455,   456,   740,   457,   458,
     741,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   742,   467,     0,     0,   743,
     744,   745,   746,   468,     0,     0,   469,   747,     0,   748,
     470,   471,   472,   749,   750,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   751,
       0,     0,     0,   752,   753,     0,     0,     0,     0,   754,
     755,     0,     0,   756,   757,     0,     0,   758,   759,   136,
       0,   653,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   654,     0,   144,   145,   146,   147,
     148,   655,   150,     0,   151,     0,     0,   656,   152,   657,
     658,   659,   153,   660,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,   661,   662,   161,   162,
       0,   163,   663,   664,   165,     0,   166,   167,   168,   169,
     665,   171,     0,   666,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   667,   188,     0,   189,   668,   669,   190,     0,     0,
     191,   670,   192,   671,     0,   193,   672,   673,     0,   194,
     195,   196,   674,   675,   676,     0,     0,     0,     0,   677,
     199,   678,     0,     0,   679,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
     680,     0,   227,   228,   229,   681,   682,   230,   231,     0,
     232,   233,   234,   683,     0,   235,     0,     0,     0,   684,
     237,     0,   238,     0,   239,     0,   240,   685,   242,   686,
       0,   244,     0,   245,     0,   687,     0,   246,   247,     0,
     248,   688,     0,   249,   250,     0,     0,     0,   689,   252,
     253,   254,   690,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,   691,   259,   260,   692,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
     693,   270,   271,     0,     0,     0,     0,     0,   694,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,   695,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,   696,   299,   300,
     301,   302,   697,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   698,   310,     0,     0,   699,   312,   700,
     313,     0,   314,   701,   702,   703,   704,   705,   319,   320,
     321,   322,   323,     0,   706,   324,   325,     0,     0,   326,
     327,   328,   329,   707,   708,   709,   330,   331,     0,   710,
     711,   332,     0,   333,   334,   712,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,   713,   343,   344,     0,   345,   346,
     714,   348,   349,   350,   351,   352,   715,   716,   355,   717,
       0,   356,   357,   358,     0,   359,     0,   360,   361,   362,
     363,   364,     0,   718,   366,   367,     0,     0,   368,     0,
       0,     0,   369,   370,   371,   372,   373,     0,     0,   374,
     375,   376,   377,   378,     0,   379,   380,     0,   381,   382,
     383,   719,   720,   384,     0,   385,     0,   386,   387,     0,
     388,   389,   390,     0,   721,     0,   722,   392,   393,   394,
     395,   396,   723,   724,   399,   400,   401,   402,     0,   725,
     404,     0,     0,     0,   405,   406,   407,   408,     0,     0,
       0,   409,     0,     0,     0,   410,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,     0,     0,     0,
       0,     0,     0,     0,     0,   420,   421,     0,   422,     0,
       0,   423,     0,     0,   424,   425,   426,   726,   727,   427,
     428,     0,   429,   430,   728,   432,   433,   434,   729,   730,
     435,   436,   437,   438,   731,   439,   440,     0,     0,   441,
     442,   443,   444,     0,   732,   445,   446,     0,   733,   734,
     735,   736,     0,     0,     0,     0,     0,   451,   452,     0,
     737,   738,   739,   454,   455,   456,   740,   457,   458,   741,
     459,   460,     0,   461,   462,     0,     0,   463,     0,     0,
     464,     0,   465,     0,   742,   467,     0,     0,   743,   744,
     745,   746,   468,     0,     0,   469,   747,     0,   748,   470,
     471,   472,   749,   750,     0,     0,     0,     0,     0,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   751,     0,
       0,     0,   752,   753,     0,     0,     0,     0,   754,   755,
       0,     0,   756,   757,     0,     0,   758,   759,   136,     0,
     653,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   654,     0,   144,   145,   146,   147,   148,
     655,   150,     0,   151,     0,     0,   656,   152,   657,   658,
     659,   153,   660,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,   661,   662,   161,   162,     0,
     163,   663,   664,   165,     0,   166,   167,   168,   169,   665,
     171,     0,   666,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     667,   188,     0,   189,   668,   669,   190,     0,     0,   191,
     670,   192,   671,     0,   193,   672,   673,     0,   194,   195,
     196,   674,   675,   676,     0,     0,     0,     0,   677,   199,
     678,     0,     0,   679,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,   680,
       0,   227,   228,   229,   681,   682,   230,   231,     0,   232,
     233,   234,   683,     0,   235,     0,     0,     0,   684,   237,
       0,   238,     0,   239,     0,   240,   685,   242,   686,     0,
     244,     0,   245,     0,   687,     0,   246,   247,     0,   248,
     688,     0,   249,   250,     0,     0,     0,   689,   252,   253,
     254,   690,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,   691,   259,   260,   692,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,   693,
     270,   271,     0,     0,     0,     0,     0,   694,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,   695,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,   696,   299,   300,   301,
     302,   697,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   698,   310,     0,     0,   699,   312,   700,   313,
       0,   314,   701,   702,   703,   704,   705,   319,   320,   321,
     322,   323,     0,   706,   324,   325,     0,     0,   326,   327,
     328,   329,   707,   708,   709,   330,   331,     0,   710,   711,
     332,     0,   333,   334,   712,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,   713,   343,   344,     0,   345,   346,   714,
     348,   349,   350,   351,   352,   715,   716,   355,   717,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   718,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
     719,   720,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   721,     0,   722,   392,   393,   394,   395,
     396,   723,   724,   399,   400,   401,   402,     0,   725,   404,
       0,     0,     0,   405,   406,   407,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,   726,   727,   427,   428,
       0,   429,   430,   728,   432,   433,   434,   729,   730,   435,
     436,   437,   438,   731,   439,   440,     0,     0,   441,   442,
     443,   444,     0,   732,   445,   446,     0,   733,   734,   735,
     736,     0,     0,     0,     0,     0,   451,   452,     0,   737,
     738,   739,   454,   455,   456,   740,   457,   458,   741,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   742,   467,     0,     0,   743,   744,   745,
     746,   468,     0,     0,   469,   747,     0,   748,   470,   471,
     472,   749,   750,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   751,     0,     0,
       0,   752,   753,     0,     0,     0,     0,   754,  1104,     0,
       0,   756,   757,     0,     0,   758,   759,   136,     0,   653,
     138,   139,   140,   141,  1710,     0,     0,     0,     0,  1711,
       0,     0,   654,     0,   144,   145,   146,   147,   148,   655,
     150,     0,   151,     0,     0,   656,   152,   657,   658,   659,
     153,   660,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,   661,   662,   161,   162,     0,   163,
     663,   664,   165,     0,   166,   167,   168,   169,   665,   171,
       0,   666,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   667,
     188,     0,   189,   668,   669,   190,     0,     0,   191,   670,
     192,   671,     0,   193,   672,   673,     0,   194,   195,   196,
     674,   675,   676,     0,     0,     0,     0,   677,   199,   678,
       0,     0,   679,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,   680,     0,
     227,   228,   229,   681,   682,   230,   231,     0,   232,   233,
     234,   683,     0,   235,     0,     0,     0,   684,   237,     0,
     238,     0,   239,     0,   240,   685,   242,   686,     0,   244,
       0,   245,     0,   687,     0,   246,   247,     0,   248,   688,
       0,   249,   250,     0,     0,     0,   689,   252,   253,   254,
     690,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,   691,   259,   260,   692,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,   693,   270,
     271,     0,     0,     0,     0,     0,   694,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,   695,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,   696,   299,   300,   301,   302,
     697,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   698,   310,     0,     0,   699,   312,   700,   313,     0,
     314,   701,   702,   703,   704,   705,   319,   320,   321,   322,
     323,     0,   706,   324,   325,     0,     0,   326,   327,   328,
     329,   707,     0,   709,   330,   331,     0,   710,   711,   332,
       0,   333,   334,   712,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,   713,   343,   344,     0,   345,   346,   714,   348,
     349,   350,   351,   352,   715,   716,   355,   717,     0,   356,
     357,   358,     0,   359,     0,   360,   361,   362,   363,   364,
       0,   718,   366,   367,     0,     0,   368,     0,     0,     0,
     369,   370,   371,   372,   373,     0,     0,   374,   375,   376,
     377,   378,     0,   379,   380,     0,   381,   382,   383,   719,
     720,   384,     0,   385,     0,   386,   387,     0,   388,   389,
     390,     0,   721,     0,   722,   392,   393,   394,   395,   396,
     723,   724,   399,   400,   401,   402,     0,   725,   404,     0,
       0,     0,   405,   406,   407,   408,     0,     0,     0,   409,
       0,     0,     0,   410,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,     0,     0,     0,     0,     0,
       0,     0,     0,   420,   421,     0,   422,     0,     0,   423,
       0,     0,   424,   425,   426,   726,   727,   427,   428,     0,
     429,   430,   728,   432,   433,   434,   729,   730,   435,   436,
     437,   438,   731,   439,   440,     0,     0,   441,   442,   443,
     444,     0,   732,   445,   446,     0,   733,   734,   735,   736,
       0,     0,     0,     0,     0,   451,   452,     0,   737,   738,
     739,   454,   455,   456,   740,   457,   458,   741,   459,   460,
       0,   461,   462,     0,     0,   463,     0,     0,   464,     0,
     465,     0,   742,   467,     0,     0,   743,   744,   745,   746,
     468,     0,     0,   469,   747,     0,   748,   470,   471,   472,
     749,   750,     0,     0,     0,     0,     0,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   751,     0,     0,     0,
     752,   753,     0,     0,     0,     0,   754,   755,     0,     0,
     756,   757,     0,     0,   758,   759,   136,     0,   653,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   654,     0,   144,   145,   146,   147,   148,   655,   150,
       0,   151,     0,     0,   656,   152,   657,   658,   659,   153,
     660,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,   661,   662,   161,   162,     0,   163,   663,
     664,   165,     0,   166,   167,   168,   169,   665,   171,     0,
     666,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   667,   188,
       0,   189,   668,   669,   190,     0,     0,   191,   670,   192,
     671,     0,   193,   672,   673,     0,   194,   195,   196,   674,
     675,   676,     0,     0,     0,     0,   677,   199,   678,     0,
       0,   679,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,   680,     0,   227,
     228,   229,   681,   682,   230,   231,     0,   232,   233,   234,
     683,     0,   235,     0,     0,     0,   684,   237,     0,   238,
       0,   239,     0,   240,   685,   242,   686,     0,   244,     0,
     245,     0,   687,     0,   246,   247,     0,   248,   688,     0,
     249,   250,     0,     0,     0,   689,   252,   253,   254,   690,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
     691,   259,   260,  2666,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,   693,   270,   271,
       0,     0,     0,     0,     0,   694,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,   695,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,   696,   299,   300,   301,   302,   697,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     698,   310,     0,     0,   699,   312,   700,   313,     0,   314,
     701,   702,   703,   704,   705,   319,   320,   321,   322,   323,
       0,   706,   324,   325,     0,     0,   326,   327,   328,   329,
     707,   708,   709,   330,   331,     0,   710,   711,   332,     0,
     333,   334,   712,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,   713,   343,   344,     0,   345,   346,   714,   348,   349,
     350,   351,   352,   715,   716,   355,   717,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     718,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,   719,   720,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   721,     0,   722,   392,   393,   394,   395,   396,   723,
     724,   399,   400,   401,   402,     0,   725,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,   726,   727,   427,   428,     0,   429,
     430,   728,   432,   433,   434,   729,   730,   435,   436,   437,
     438,   731,   439,   440,     0,     0,   441,   442,   443,   444,
       0,   732,   445,   446,     0,   733,   734,   735,   736,     0,
       0,     0,     0,     0,   451,   452,     0,   737,   738,   739,
     454,   455,   456,   740,   457,   458,   741,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   742,   467,     0,     0,   743,   744,   745,   746,   468,
       0,     0,   469,   747,     0,   748,   470,   471,   472,   749,
     750,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   751,     0,     0,     0,   752,
     753,     0,     0,     0,     0,   754,   755,     0,     0,   756,
     757,     0,     0,   758,   759,   136,     0,   653,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     654,     0,   144,   145,   146,   147,   148,   655,   150,     0,
     151,     0,     0,   656,   152,   657,   658,   659,   153,   660,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,   661,   662,   161,   162,     0,   163,   663,   664,
     165,     0,   166,   167,   168,   169,   665,   171,     0,   666,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   667,   188,     0,
     189,   668,   669,   190,     0,     0,   191,   670,   192,   671,
       0,   193,   672,   673,     0,   194,   195,   196,   674,   675,
     676,     0,     0,     0,     0,   677,   199,   678,     0,     0,
     679,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,   680,     0,   227,   228,
     229,   681,   682,   230,   231,     0,   232,   233,   234,   683,
       0,   235,     0,     0,     0,   684,   237,     0,   238,     0,
     239,     0,   240,   685,   242,   686,     0,   244,     0,   245,
       0,   687,     0,   246,   247,     0,   248,   688,     0,   249,
     250,     0,     0,     0,   689,   252,   253,   254,   690,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,   691,
     259,   260,  2711,     0,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,     0,     0,   269,     0,   693,   270,   271,     0,
       0,     0,     0,     0,   694,   273,     0,   274,     0,   275,
       0,   276,   277,     0,     0,   695,     0,     0,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,   696,   299,   300,   301,   302,   697,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   698,
     310,     0,     0,   699,   312,   700,   313,     0,   314,   701,
     702,   703,   704,   705,   319,   320,   321,   322,   323,     0,
     706,   324,   325,     0,     0,   326,   327,   328,   329,   707,
     708,   709,   330,   331,     0,   710,   711,   332,     0,   333,
     334,   712,     0,   336,   337,   338,     0,   339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,   341,   342,
     713,   343,   344,     0,   345,   346,   714,   348,   349,   350,
     351,   352,   715,   716,   355,   717,     0,   356,   357,   358,
       0,   359,     0,   360,   361,   362,   363,   364,     0,   718,
     366,   367,     0,     0,   368,     0,     0,     0,   369,   370,
     371,   372,   373,     0,     0,   374,   375,   376,   377,   378,
       0,   379,   380,     0,   381,   382,   383,   719,   720,   384,
       0,   385,     0,   386,   387,     0,   388,   389,   390,     0,
     721,     0,   722,   392,   393,   394,   395,   396,   723,   724,
     399,   400,   401,   402,     0,   725,   404,     0,     0,     0,
     405,   406,   407,   408,     0,     0,     0,   409,     0,     0,
       0,   410,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,     0,     0,     0,     0,     0,     0,     0,
       0,   420,   421,     0,   422,     0,     0,   423,     0,     0,
     424,   425,   426,   726,   727,   427,   428,     0,   429,   430,
     728,   432,   433,   434,   729,   730,   435,   436,   437,   438,
     731,   439,   440,     0,     0,   441,   442,   443,   444,     0,
     732,   445,   446,     0,   733,   734,   735,   736,     0,     0,
       0,     0,     0,   451,   452,     0,   737,   738,   739,   454,
     455,   456,   740,   457,   458,   741,   459,   460,     0,   461,
     462,     0,     0,   463,     0,     0,   464,     0,   465,     0,
     742,   467,     0,     0,   743,   744,   745,   746,   468,     0,
       0,   469,   747,     0,   748,   470,   471,   472,   749,   750,
       0,     0,     0,     0,     0,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   751,     0,     0,     0,   752,   753,
       0,     0,     0,     0,   754,   755,     0,     0,   756,   757,
       0,     0,   758,   759,   136,     0,   653,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   654,
       0,   144,   145,   146,   147,   148,   655,   150,     0,   151,
       0,     0,   656,   152,   657,   658,   659,   153,   660,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,   661,   662,   161,   162,     0,   163,   663,   664,   165,
       0,   166,   167,   168,   169,   665,   171,     0,   666,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   667,   188,     0,   189,
     668,   669,   190,     0,     0,   191,   670,   192,   671,     0,
     193,   672,   673,     0,   194,   195,   196,   674,   675,   676,
       0,     0,     0,     0,   677,   199,   678,     0,     0,  3475,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,   680,     0,   227,   228,   229,
     681,   682,   230,   231,     0,   232,   233,   234,   683,     0,
     235,     0,     0,     0,   684,   237,     0,   238,     0,   239,
       0,   240,   685,   242,   686,     0,   244,     0,   245,     0,
     687,     0,   246,   247,     0,   248,   688,     0,   249,   250,
       0,     0,     0,   689,   252,   253,   254,   690,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,   691,   259,
     260,   692,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,   693,   270,   271,     0,     0,
       0,     0,     0,   694,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,   695,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,   696,   299,   300,   301,   302,   697,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   698,   310,
       0,     0,   699,   312,   700,   313,     0,   314,   701,   702,
     703,   704,   705,   319,   320,   321,   322,   323,     0,   706,
     324,   325,     0,     0,   326,   327,   328,   329,   707,   708,
     709,   330,   331,     0,   710,   711,   332,     0,   333,   334,
     712,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,   713,
     343,   344,     0,   345,   346,   714,   348,   349,   350,   351,
     352,   715,   716,   355,   717,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   718,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,   719,   720,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   721,
       0,   722,   392,   393,   394,   395,   396,   723,   724,   399,
     400,   401,   402,     0,   725,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,   726,   727,   427,   428,     0,   429,   430,   728,
     432,   433,   434,   729,   730,   435,   436,   437,   438,   731,
     439,   440,     0,     0,   441,   442,   443,   444,     0,   732,
     445,   446,     0,   733,   734,   735,   736,     0,     0,     0,
       0,     0,   451,   452,     0,   737,   738,   739,   454,   455,
     456,   740,   457,   458,   741,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   742,
     467,     0,     0,   743,   744,   745,   746,   468,     0,     0,
     469,   747,     0,   748,   470,   471,   472,   749,   750,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   751,     0,     0,     0,   752,   753,     0,
       0,     0,     0,   754,   755,     0,     0,   756,   757,     0,
       0,   758,   759,   136,     0,   653,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   654,     0,
     144,   145,   146,   147,   148,   655,   150,     0,   151,     0,
       0,   656,   152,   657,   658,   659,   153,   660,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     661,   662,   161,   162,     0,   163,   663,   664,   165,     0,
     166,   167,   168,   169,   665,   171,     0,   666,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   667,   188,     0,   189,   668,
     669,   190,     0,     0,   191,   670,   192,   671,     0,   193,
     672,   673,     0,   194,   195,   196,   674,   675,   676,     0,
       0,     0,     0,   677,   199,   678,     0,     0,   679,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   680,     0,   227,   228,   229,   681,
     682,   230,   231,     0,   232,   233,   234,   683,     0,   235,
       0,     0,     0,   684,   237,     0,   238,     0,   239,     0,
     240,   685,   242,   686,     0,   244,     0,   245,     0,   687,
       0,   246,   247,     0,   248,   688,     0,   249,   250,     0,
       0,     0,   689,   252,   253,   254,   690,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,   691,   259,   260,
     692,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,   693,   270,   271,     0,     0,     0,
       0,     0,   694,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,   695,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,   696,   299,   300,   301,   302,   697,   303,   304,  4307,
       0,     0,     0,   305,   306,   307,   308,   698,   310,     0,
       0,   699,   312,   700,   313,     0,   314,   701,   702,   703,
     704,   705,   319,   320,   321,   322,   323,     0,   706,   324,
     325,     0,     0,   326,   327,   328,   329,   707,     0,   709,
     330,   331,     0,   710,   711,   332,     0,   333,   334,   712,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,   713,   343,
     344,     0,   345,   346,   714,   348,   349,   350,   351,   352,
     715,   716,   355,   717,     0,   356,   357,   358,     0,   359,
       0,   360,   361,   362,   363,   364,     0,   718,   366,   367,
       0,     0,   368,     0,     0,     0,   369,   370,   371,   372,
     373,     0,     0,   374,   375,   376,   377,   378,     0,   379,
     380,     0,   381,   382,   383,   719,   720,   384,     0,   385,
       0,   386,   387,     0,   388,   389,   390,     0,   721,     0,
     722,   392,   393,   394,   395,   396,   723,   724,   399,   400,
     401,   402,     0,   725,   404,     0,     0,     0,   405,   406,
     407,   408,     0,     0,     0,   409,     0,     0,     0,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,     0,     0,     0,     0,     0,     0,     0,     0,   420,
     421,     0,   422,     0,     0,   423,     0,     0,   424,   425,
     426,   726,   727,   427,   428,     0,   429,   430,   728,   432,
     433,   434,   729,   730,   435,   436,   437,   438,   731,   439,
     440,     0,     0,   441,   442,   443,   444,     0,   732,   445,
     446,     0,   733,   734,   735,   736,     0,     0,     0,     0,
       0,   451,   452,     0,   737,   738,   739,   454,   455,   456,
     740,   457,   458,   741,   459,   460,     0,   461,   462,     0,
       0,   463,     0,     0,   464,     0,   465,     0,   742,   467,
       0,     0,   743,   744,   745,   746,   468,     0,     0,   469,
     747,     0,   748,   470,   471,   472,   749,   750,     0,     0,
       0,     0,     0,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   751,     0,     0,     0,   752,   753,     0,     0,
       0,     0,   754,   755,     0,     0,   756,   757,     0,     0,
     758,   759,   136,     0,   653,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   654,     0,   144,
     145,   146,   147,   148,   655,   150,     0,   151,     0,     0,
     656,   152,   657,   658,   659,   153,   660,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,   661,
     662,   161,   162,     0,   163,   663,   664,   165,     0,   166,
     167,   168,   169,   665,   171,     0,   666,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   667,   188,     0,   189,   668,   669,
     190,     0,     0,   191,   670,   192,   671,     0,   193,   672,
     673,     0,   194,   195,   196,   674,   675,   676,     0,     0,
       0,     0,   677,   199,   678,     0,     0,   679,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,   680,     0,   227,   228,   229,   681,   682,
     230,   231,     0,   232,   233,   234,   683,     0,   235,     0,
       0,     0,   684,   237,     0,   238,     0,   239,     0,   240,
     685,   242,   686,     0,   244,     0,   245,     0,   687,     0,
     246,   247,     0,   248,   688,     0,   249,   250,     0,     0,
       0,   689,   252,   253,   254,   690,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,   691,   259,   260,   692,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,   693,   270,   271,     0,     0,     0,     0,
       0,   694,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,   695,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     696,   299,   300,   301,   302,   697,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   698,   310,     0,     0,
     699,   312,   700,   313,     0,   314,   701,   702,   703,   704,
     705,   319,   320,   321,   322,   323,     0,   706,   324,   325,
       0,     0,   326,   327,   328,   329,   707,     0,   709,   330,
     331,     0,   710,   711,   332,     0,   333,   334,   712,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,   713,   343,   344,
       0,   345,   346,   714,   348,   349,   350,   351,   352,   715,
     716,   355,   717,     0,   356,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   718,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,   380,
       0,   381,   382,   383,   719,   720,   384,     0,   385,     0,
     386,   387,     0,   388,   389,   390,     0,   721,     0,   722,
     392,   393,   394,   395,   396,   723,   724,   399,   400,   401,
     402,     0,   725,   404,     0,     0,     0,   405,   406,   407,
     408,     0,     0,     0,   409,     0,     0,     0,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,   425,   426,
     726,   727,   427,   428,     0,   429,   430,   728,   432,   433,
     434,   729,   730,   435,   436,   437,   438,   731,   439,   440,
       0,     0,   441,   442,   443,   444,     0,   732,   445,   446,
       0,   733,   734,   735,   736,     0,     0,     0,     0,     0,
     451,   452,     0,   737,   738,   739,   454,   455,   456,   740,
     457,   458,   741,   459,   460,     0,   461,   462,     0,     0,
     463,     0,     0,   464,     0,   465,     0,   742,   467,     0,
       0,   743,   744,   745,   746,   468,     0,     0,   469,   747,
       0,   748,   470,   471,   472,   749,   750,     0,     0,     0,
       0,     0,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   751,     0,     0,     0,   752,   753,     0,     0,     0,
       0,   754,   755,     0,     0,   756,   757,     0,     0,   758,
     759,   136,     0,   653,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   654,     0,   144,   145,
     146,   147,   148,   655,   150,     0,   151,     0,     0,   656,
     152,   657,   658,   659,   153,   660,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,   661,   662,
     161,   162,     0,   163,   663,   664,   165,     0,   166,   167,
     168,   169,   665,   171,     0,   666,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   667,   188,     0,   189,   668,   669,   190,
       0,     0,   191,   670,   192,   671,     0,   193,   672,   673,
       0,   194,   195,   196,   674,   675,   676,     0,     0,     0,
       0,   677,   199,   678,     0,     0,   679,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   680,     0,   227,   228,   229,   681,   682,   230,
     231,     0,   232,   233,   234,   683,     0,   235,     0,     0,
       0,   684,   237,     0,   238,     0,   239,     0,   240,   685,
     242,   686,     0,   244,     0,   245,     0,   687,     0,   246,
     247,     0,   248,   688,     0,   249,   250,     0,     0,     0,
     689,   252,   253,   254,   690,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,   691,   259,   260,  1725,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,   693,   270,   271,     0,     0,     0,     0,     0,
     694,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,   695,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,   696,
     299,   300,   301,   302,   697,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   698,   310,     0,     0,   699,
     312,   700,   313,     0,   314,   701,   702,   703,   704,   705,
     319,   320,   321,   322,   323,     0,   706,   324,   325,     0,
       0,   326,   327,   328,   329,   707,     0,   709,   330,   331,
       0,   710,   711,   332,     0,   333,   334,   712,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,   713,   343,   344,     0,
     345,   346,   714,   348,   349,   350,   351,   352,   715,   716,
     355,   717,     0,   356,   357,   358,     0,   359,     0,   360,
     361,   362,   363,   364,     0,   718,   366,   367,     0,     0,
     368,     0,     0,     0,   369,   370,   371,   372,   373,     0,
       0,   374,   375,   376,   377,   378,     0,   379,   380,     0,
     381,   382,   383,   719,   720,   384,     0,   385,     0,   386,
     387,     0,   388,   389,   390,     0,   721,     0,   722,   392,
     393,   394,   395,   396,   723,   724,   399,   400,   401,   402,
       0,   725,   404,     0,     0,     0,   405,   406,   407,   408,
       0,     0,     0,   409,     0,     0,     0,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,     0,
       0,     0,     0,     0,     0,     0,     0,   420,   421,     0,
     422,     0,     0,   423,     0,     0,   424,   425,   426,   726,
     727,   427,   428,     0,   429,   430,   728,   432,   433,   434,
     729,   730,   435,   436,   437,   438,   731,   439,   440,     0,
       0,   441,   442,   443,   444,     0,   732,   445,   446,     0,
     733,   734,   735,   736,     0,     0,     0,     0,     0,   451,
     452,     0,   737,   738,   739,   454,   455,   456,   740,   457,
     458,   741,   459,   460,     0,   461,   462,     0,     0,   463,
       0,     0,   464,     0,   465,     0,   742,   467,     0,     0,
     743,   744,   745,   746,   468,     0,     0,   469,   747,     0,
     748,   470,   471,   472,   749,   750,     0,     0,     0,     0,
       0,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     751,     0,     0,     0,   752,   753,     0,     0,     0,     0,
     754,   755,     0,     0,   756,   757,     0,     0,   758,   759,
     136,     0,   653,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   654,     0,   144,   145,   146,
     147,   148,   655,   150,     0,   151,     0,     0,   656,   152,
     657,   658,   659,   153,   660,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,   661,   662,   161,
     162,     0,   163,   663,   664,   165,     0,   166,   167,   168,
     169,   665,   171,     0,   666,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   667,   188,     0,   189,   668,   669,   190,     0,
       0,   191,   670,   192,   671,     0,   193,   672,   673,     0,
     194,   195,   196,   674,   675,   676,     0,     0,     0,     0,
     677,   199,   678,     0,     0,   679,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,   680,     0,   227,   228,   229,   681,   682,   230,   231,
       0,   232,   233,   234,   683,     0,   235,     0,     0,     0,
     684,   237,     0,   238,     0,   239,     0,   240,   685,   242,
     686,     0,   244,     0,   245,     0,   687,     0,   246,   247,
       0,   248,   688,     0,   249,   250,     0,     0,     0,   689,
     252,   253,   254,   690,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,   691,   259,   260,  1727,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,   693,   270,   271,     0,     0,     0,     0,     0,   694,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
     695,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,   696,   299,
     300,   301,   302,   697,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   698,   310,     0,     0,   699,   312,
     700,   313,     0,   314,   701,   702,   703,   704,   705,   319,
     320,   321,   322,   323,     0,   706,   324,   325,     0,     0,
     326,   327,   328,   329,   707,     0,   709,   330,   331,     0,
     710,   711,   332,     0,   333,   334,   712,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,   713,   343,   344,     0,   345,
     346,   714,   348,   349,   350,   351,   352,   715,   716,   355,
     717,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   718,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,   719,   720,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   721,     0,   722,   392,   393,
     394,   395,   396,   723,   724,   399,   400,   401,   402,     0,
     725,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,   726,   727,
     427,   428,     0,   429,   430,   728,   432,   433,   434,   729,
     730,   435,   436,   437,   438,   731,   439,   440,     0,     0,
     441,   442,   443,   444,     0,   732,   445,   446,     0,   733,
     734,   735,   736,     0,     0,     0,     0,     0,   451,   452,
       0,   737,   738,   739,   454,   455,   456,   740,   457,   458,
     741,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   742,   467,     0,     0,   743,
     744,   745,   746,   468,     0,     0,   469,   747,     0,   748,
     470,   471,   472,   749,   750,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   751,
       0,     0,     0,   752,   753,     0,     0,     0,     0,   754,
     755,     0,     0,   756,   757,     0,     0,   758,   759,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,     0,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,   657,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,  1763,     0,     0,     0,     0,   198,
     199,   678,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,   682,   230,   231,     0,
     232,   233,   234,   683,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,   688,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,   695,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,   706,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,   710,
     711,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,   358,     0,   359,     0,   360,   361,   362,
     363,   364,     0,   365,   366,   367,     0,     0,   368,     0,
       0,     0,   369,   370,   371,   372,   373,     0,     0,   374,
     375,   376,   377,   378,     0,   379,   380,     0,   381,   382,
     383,     0,     0,   384,     0,   385,     0,   386,   387,     0,
     388,   389,   390,     0,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,     0,   403,
     404,     0,     0,     0,   405,   406,   407,   408,     0,     0,
       0,   409,     0,     0,     0,   410,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,     0,     0,     0,
       0,     0,     0,     0,     0,   420,   421,     0,   422,     0,
       0,   423,     0,     0,   424,   425,   426,     0,     0,   427,
     428,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,     0,   732,   445,   446,     0,  1764,   448,
     449,  1765,     0,     0,     0,     0,     0,   451,   452,     0,
       0,   738,   453,   454,   455,   456,   740,   457,   458,   741,
     459,   460,     0,   461,   462,     0,     0,   463,     0,     0,
     464,     0,   465,     0,   466,   467,     0,     0,     0,     0,
       0,     0,   468,     0,     0,   469,     0,     0,     0,   470,
     471,   472,   473,   474,     0,     0,     0,     0,     0,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,     0,
       0,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,   758,   759,   143,     0,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,  2500,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,     0,   238,   494,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,  2066,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,  2067,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,  3055,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,  2026,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,   358,     0,   359,
       0,   360,   361,   362,   363,   364,     0,   365,   366,   367,
       0,     0,   368,     0,     0,     0,   369,   370,   371,   372,
     373,     0,     0,   374,   375,   376,   377,   378,     0,   379,
     380,     0,   381,   382,   383,     0,     0,   384,     0,   385,
       0,   386,   387,     0,   388,   389,   390,     0,   391,     0,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,     0,   403,   404,  -474,     0,     0,   405,   406,
     407,   408,     0,     0,     0,   409,     0,     0,     0,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   497,     0,     0,     0,     0,     0,     0,     0,   420,
     421,     0,   422,     0,     0,   423,     0,     0,   424,   425,
     426,     0,     0,   427,   428,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,     0,     0,   445,
     446,     0,   447,   448,   449,   450,     0,     0,     0,     0,
       0,   451,   452,     0,     0,     0,   453,   454,   455,   456,
       0,   457,   458,     0,   459,   460,     0,   461,   462,     0,
       0,   463,     0,     0,   464,     0,   465,     0,   466,   467,
       0,     0,     0,     0,     0,     0,   468,     0,     0,   469,
       0,     0,     0,   470,   471,   472,   473,   474,     0,     0,
       0,     0,     0,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,     0,     0,   136,     0,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     143,  2569,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,  2500,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,   237,     0,   238,   494,
     239,     0,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,     0,   246,   247,     0,   248,     0,     0,   249,
     250,     0,     0,     0,   251,   252,   253,   254,     0,     0,
     255,   256,   257,  2066,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,     0,     0,     0,   266,  2067,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
       0,     0,     0,     0,   272,   273,     0,   274,     0,   275,
       0,   276,   277,     0,     0,     0,     0,     0,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,     0,   299,   300,   301,   302,     0,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   309,
     310,     0,     0,   311,   312,     0,   313,     0,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
       0,   324,   325,     0,     0,   326,   327,   328,   329,     0,
       0,     0,   330,   331,     0,     0,     0,   332,     0,   333,
     334,   335,     0,   336,   337,   338,     0,   339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,   341,   342,
       0,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,   358,
       0,   359,     0,   360,   361,   362,   363,   364,     0,   365,
     366,   367,     0,     0,   368,     0,     0,     0,   369,   370,
     371,   372,   373,     0,     0,   374,   375,   376,   377,   378,
       0,   379,   380,     0,   381,   382,   383,     0,     0,   384,
       0,   385,     0,   386,   387,     0,   388,   389,   390,     0,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,     0,   403,   404,     0,     0,     0,
     405,   406,   407,   408,     0,     0,     0,   409,     0,     0,
       0,   410,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   497,     0,     0,     0,     0,     0,     0,
       0,   420,   421,     0,   422,     0,     0,   423,     0,     0,
     424,   425,   426,     0,     0,   427,   428,     0,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,     0,
       0,   445,   446,     0,   447,   448,   449,   450,     0,     0,
       0,     0,     0,   451,   452,     0,     0,     0,   453,   454,
     455,   456,     0,   457,   458,     0,   459,   460,     0,   461,
     462,     0,     0,   463,     0,     0,   464,     0,   465,     0,
     466,   467,     0,     0,     0,     0,     0,     0,   468,     0,
       0,   469,     0,     0,     0,   470,   471,   472,   473,   474,
       0,     0,     0,     0,     0,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,     0,     0,   136,     0,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,  2569,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,   358,     0,   359,     0,   360,   361,   362,   363,   364,
       0,   365,   366,   367,     0,     0,   368,     0,     0,     0,
     369,   370,   371,   372,   373,     0,     0,   374,   375,   376,
     377,   378,     0,   379,   380,     0,   381,   382,   383,     0,
       0,   384,     0,   385,     0,   386,   387,     0,   388,   389,
     390,     0,   391,     0,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,     0,   403,   404,  2367,
       0,     0,   405,   406,   407,   408,     0,     0,     0,   409,
       0,     0,     0,   410,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,     0,     0,     0,     0,     0,
       0,     0,     0,   420,   421,     0,   422,     0,     0,   423,
       0,     0,   424,   425,   426,     0,     0,   427,   428,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,     0,     0,   445,   446,     0,   447,   448,   449,   450,
       0,     0,     0,     0,     0,   451,   452,     0,     0,     0,
     453,   454,   455,   456,     0,   457,   458,     0,   459,   460,
       0,   461,   462,     0,     0,   463,     0,     0,   464,     0,
     465,     0,   466,   467,     0,     0,     0,     0,     0,     0,
     468,     0,     0,   469,     0,     0,     0,   470,   471,   472,
     473,   474,     0,     0,     0,     0,     0,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,     0,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,  2812,     0,
       0,   142,     0,     0,   143,   759,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,   358,     0,   359,     0,   360,   361,   362,
     363,   364,     0,   365,   366,   367,     0,     0,   368,     0,
       0,     0,   369,   370,   371,   372,   373,     0,     0,   374,
     375,   376,   377,   378,     0,   379,   380,     0,   381,   382,
     383,     0,     0,   384,     0,   385,     0,   386,   387,     0,
     388,   389,   390,     0,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,     0,   403,
     404,     0,     0,     0,   405,   406,   407,   408,     0,     0,
       0,   409,     0,     0,     0,   410,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,     0,     0,     0,
       0,     0,     0,     0,     0,   420,   421,     0,   422,     0,
       0,   423,     0,     0,   424,   425,   426,     0,     0,   427,
     428,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,     0,     0,   445,   446,     0,   447,   448,
     449,   450,     0,     0,     0,     0,     0,   451,   452,     0,
       0,     0,   453,   454,   455,   456,     0,   457,   458,     0,
     459,   460,     0,   461,   462,     0,     0,   463,     0,     0,
     464,     0,   465,     0,   466,   467,     0,     0,     0,     0,
       0,     0,   468,     0,     0,   469,     0,     0,     0,   470,
     471,   472,   473,   474,     0,     0,     0,     0,     0,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,     0,
       0,     0,     0,   136,     0,   137,   138,   139,   140,   141,
    4438,     0,     0,     0,     0,   142,  4439,   759,   143,     0,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,     0,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,   358,     0,   359,
       0,   360,   361,   362,   363,   364,     0,   365,   366,   367,
       0,     0,   368,     0,     0,     0,   369,   370,   371,   372,
     373,     0,     0,   374,   375,   376,   377,   378,     0,   379,
     380,     0,   381,   382,   383,     0,     0,   384,     0,   385,
       0,   386,   387,     0,   388,   389,   390,     0,   391,     0,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,     0,   403,   404,     0,     0,     0,   405,   406,
     407,   408,     0,     0,     0,   409,     0,     0,     0,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,     0,     0,     0,     0,     0,     0,     0,     0,   420,
     421,     0,   422,     0,     0,   423,     0,     0,   424,   425,
     426,     0,     0,   427,   428,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,     0,     0,   445,
     446,     0,   447,   448,   449,   450,     0,     0,     0,     0,
       0,   451,   452,     0,     0,     0,   453,   454,   455,   456,
       0,   457,   458,     0,   459,   460,     0,   461,   462,     0,
       0,   463,     0,     0,   464,     0,   465,     0,   466,   467,
       0,     0,     0,     0,     0,     0,   468,     0,     0,   469,
       0,     0,     0,   470,   471,   472,   473,   474,     0,     0,
       0,     0,     0,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,     0,     0,   136,     0,   137,   138,   139,
     140,   141,     0,  1108,     0,     0,     0,   142,     0,     0,
     143,   759,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,   237,     0,   238,     0,
     239,     0,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,     0,   246,   247,     0,   248,     0,     0,   249,
     250,     0,     0,     0,   251,   252,   253,   254,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,  1313,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
       0,     0,     0,     0,   272,   273,     0,   274,     0,   275,
       0,   276,   277,     0,     0,     0,     0,     0,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,     0,   299,   300,   301,   302,     0,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   309,
     310,     0,     0,   311,   312,     0,   313,     0,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
       0,   324,   325,     0,     0,   326,   327,   328,   329,     0,
       0,     0,   330,   331,     0,     0,     0,   332,     0,   333,
     334,   335,     0,   336,   337,   338,     0,   339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,   341,   342,
       0,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,   358,
       0,   359,     0,   360,   361,   362,   363,   364,     0,   365,
     366,   367,     0,     0,   368,     0,     0,     0,   369,   370,
     371,   372,   373,     0,     0,   374,   375,   376,   377,   378,
       0,   379,   380,     0,   381,   382,   383,     0,     0,   384,
       0,   385,     0,   386,   387,     0,   388,   389,   390,     0,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,     0,   403,   404,     0,     0,     0,
     405,   406,   407,   408,     0,     0,     0,   409,     0,     0,
       0,   410,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,     0,     0,     0,     0,     0,     0,     0,
       0,   420,   421,     0,   422,     0,     0,   423,     0,     0,
     424,   425,   426,     0,     0,   427,   428,     0,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,     0,
       0,   445,   446,     0,   447,   448,   449,   450,     0,     0,
       0,     0,     0,   451,   452,     0,     0,     0,   453,   454,
     455,   456,     0,   457,   458,     0,   459,   460,     0,   461,
     462,     0,     0,   463,     0,     0,   464,     0,   465,     0,
     466,   467,     0,     0,     0,     0,     0,     0,   468,     0,
       0,   469,     0,     0,     0,   470,   471,   472,   473,   474,
       0,     0,     0,     0,     0,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,     0,     0,   136,     0,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,   530,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,   358,     0,   359,     0,   360,   361,   362,   363,   364,
       0,   365,   366,   367,     0,     0,   368,     0,     0,     0,
     369,   370,   371,   372,   373,     0,     0,   374,   375,   376,
     377,   378,     0,   379,   380,     0,   381,   382,   383,     0,
       0,   384,     0,   385,     0,   386,   387,     0,   388,   389,
     390,     0,   391,     0,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,     0,   403,   404,     0,
       0,     0,   405,   406,   407,   408,     0,     0,     0,   409,
       0,     0,     0,   410,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,     0,     0,     0,     0,     0,
       0,     0,     0,   420,   421,     0,   422,     0,     0,   423,
       0,     0,   424,   425,   426,     0,     0,   427,   428,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,     0,     0,   445,   446,     0,   447,   448,   449,   450,
       0,     0,     0,     0,     0,   451,   452,     0,     0,     0,
     453,   454,   455,   456,     0,   457,   458,     0,   459,   460,
       0,   461,   462,     0,     0,   463,     0,     0,   464,     0,
     465,     0,   466,   467,     0,     0,     0,     0,     0,     0,
     468,     0,     0,   469,     0,     0,     0,   470,   471,   472,
     473,   474,     0,     0,     0,     0,     0,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,     0,     0,     0,
       0,   136,  2309,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,   530,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,   237,     0,   238,     0,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,   246,
     247,     0,   248,     0,     0,   249,   250,     0,     0,     0,
     251,   252,   253,   254,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,     0,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,   330,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,     0,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,   358,     0,   359,     0,   360,
     361,   362,   363,   364,     0,   365,   366,   367,     0,     0,
     368,     0,     0,     0,   369,   370,   371,   372,   373,     0,
       0,   374,   375,   376,   377,   378,     0,   379,   380,     0,
     381,   382,   383,     0,     0,   384,     0,   385,     0,   386,
     387,     0,   388,   389,   390,     0,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
       0,   403,   404,     0,     0,     0,   405,   406,   407,   408,
       0,     0,     0,   409,     0,     0,     0,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,     0,
       0,     0,     0,     0,     0,     0,     0,   420,   421,     0,
     422,     0,     0,   423,     0,     0,   424,   425,   426,     0,
       0,   427,   428,     0,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,     0,     0,   445,   446,     0,
     447,   448,   449,   450,     0,     0,     0,     0,     0,   451,
     452,     0,     0,     0,   453,   454,   455,   456,     0,   457,
     458,     0,   459,   460,     0,   461,   462,     0,     0,   463,
       0,     0,   464,     0,   465,     0,   466,   467,     0,     0,
       0,     0,     0,     0,   468,     0,     0,   469,     0,     0,
       0,   470,   471,   472,   473,   474,     0,     0,     0,     0,
       0,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,  2568,     0,     0,     0,   142,     0,     0,   143,  2569,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,     0,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,   358,     0,   359,
       0,   360,   361,   362,   363,   364,     0,   365,   366,   367,
       0,     0,   368,     0,     0,     0,   369,   370,   371,   372,
     373,     0,     0,   374,   375,   376,   377,   378,     0,   379,
     380,     0,   381,   382,   383,     0,     0,   384,     0,   385,
       0,   386,   387,     0,   388,   389,   390,     0,   391,     0,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,     0,   403,   404,     0,     0,     0,   405,   406,
     407,   408,     0,     0,     0,   409,     0,     0,     0,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,     0,     0,     0,     0,     0,     0,     0,     0,   420,
     421,     0,   422,     0,     0,   423,     0,     0,   424,   425,
     426,     0,     0,   427,   428,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,     0,     0,   445,
     446,     0,   447,   448,   449,   450,     0,     0,     0,     0,
       0,   451,   452,     0,     0,     0,   453,   454,   455,   456,
       0,   457,   458,     0,   459,   460,     0,   461,   462,     0,
       0,   463,     0,     0,   464,     0,   465,     0,   466,   467,
       0,     0,     0,     0,     0,     0,   468,     0,     0,   469,
       0,     0,     0,   470,   471,   472,   473,   474,     0,     0,
       0,     0,     0,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,     0,     0,     0,     0,   136,     0,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
    4439,   759,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,   358,     0,   359,     0,   360,   361,   362,   363,   364,
       0,   365,   366,   367,     0,     0,   368,     0,     0,     0,
     369,   370,   371,   372,   373,     0,     0,   374,   375,   376,
     377,   378,     0,   379,   380,     0,   381,   382,   383,     0,
       0,   384,     0,   385,     0,   386,   387,     0,   388,   389,
     390,     0,   391,     0,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,     0,   403,   404,     0,
       0,     0,   405,   406,   407,   408,     0,     0,     0,   409,
       0,     0,     0,   410,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,     0,     0,     0,     0,     0,
       0,     0,     0,   420,   421,     0,   422,     0,     0,   423,
       0,     0,   424,   425,   426,     0,     0,   427,   428,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,     0,     0,   445,   446,     0,   447,   448,   449,   450,
       0,     0,     0,     0,     0,   451,   452,     0,     0,     0,
     453,   454,   455,   456,     0,   457,   458,     0,   459,   460,
       0,   461,   462,     0,     0,   463,     0,     0,   464,     0,
     465,     0,   466,   467,     0,     0,     0,     0,     0,     0,
     468,     0,     0,   469,     0,     0,     0,   470,   471,   472,
     473,   474,     0,     0,     0,     0,     0,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,     0,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,   530,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   593,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   594,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   595,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,   358,     0,   359,     0,   360,   361,   362,
     363,   364,     0,   365,   366,   367,     0,     0,   368,     0,
       0,     0,   369,   370,   371,   372,   373,     0,     0,   374,
     375,   376,   377,   378,     0,   379,   380,     0,   381,   382,
     383,     0,     0,   384,     0,   385,     0,   386,   387,     0,
     388,   389,   390,     0,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,     0,   403,
     404,     0,     0,     0,   405,   406,   407,   408,     0,     0,
       0,   409,     0,     0,     0,   410,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,     0,     0,     0,
       0,     0,     0,     0,     0,   420,   421,     0,   422,     0,
       0,   423,     0,     0,   424,   425,   426,     0,     0,   427,
     428,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,     0,     0,   445,   446,     0,   447,   448,
     449,   450,     0,     0,     0,     0,     0,   451,   452,     0,
       0,     0,   453,   454,   455,   456,     0,   457,   458,     0,
     459,   460,     0,   461,   462,     0,     0,   463,     0,     0,
     464,     0,   465,     0,   466,   467,     0,     0,     0,     0,
       0,     0,   468,     0,     0,   469,     0,     0,     0,   470,
     471,   472,   473,   474,     0,     0,     0,     0,     0,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,     0,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   143,   530,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,   237,     0,   238,     0,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,   246,
     247,     0,   248,     0,     0,   249,   250,     0,     0,     0,
     251,   252,   253,   254,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,     0,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,   330,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,     0,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,   358,     0,   359,     0,   360,
     361,   362,   363,   364,     0,   365,   366,   367,     0,     0,
     368,     0,     0,     0,   369,   370,   371,   372,   373,     0,
       0,   374,   375,   376,   377,   378,     0,   379,   380,     0,
     381,   382,   383,     0,     0,   384,     0,   385,     0,   386,
     387,     0,   388,   389,   390,     0,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
       0,   403,   404,     0,     0,     0,   405,   406,   407,   408,
       0,     0,     0,   409,     0,     0,     0,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,     0,
       0,     0,     0,     0,     0,     0,     0,   420,   421,     0,
     422,     0,     0,   423,     0,     0,   424,   425,   426,     0,
       0,   427,   428,     0,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,     0,     0,   445,   446,     0,
     447,   448,   449,   450,     0,     0,     0,     0,     0,   451,
     452,     0,     0,     0,   453,   454,   455,   456,     0,   457,
     458,     0,   459,   460,     0,   461,   462,     0,     0,   463,
       0,     0,   464,     0,   465,     0,   466,   467,     0,     0,
       0,     0,     0,     0,   468,     0,     0,   469,     0,     0,
       0,   470,   471,   472,   473,   474,     0,     0,     0,     0,
       0,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,   759,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,     0,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,     0,     0,   356,   357,   358,     0,   359,
       0,   360,   361,   362,   363,   364,     0,   365,   366,   367,
       0,     0,   368,     0,     0,     0,   369,   370,   371,   372,
     373,     0,     0,   374,   375,   376,   377,   378,     0,   379,
     380,     0,   381,   382,   383,     0,     0,   384,     0,   385,
       0,   386,   387,     0,   388,   389,   390,     0,   391,     0,
       0,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,     0,   403,   404,     0,     0,     0,   405,   406,
     407,   408,     0,     0,     0,   409,     0,     0,     0,   410,
       0,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,     0,     0,     0,     0,     0,     0,     0,     0,   420,
     421,     0,   422,     0,     0,   423,     0,     0,   424,   425,
     426,     0,     0,   427,   428,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,     0,     0,   445,
     446,     0,   447,   448,   449,   450,     0,     0,     0,     0,
       0,   451,   452,     0,     0,     0,   453,   454,   455,   456,
       0,   457,   458,     0,   459,   460,     0,   461,   462,     0,
       0,   463,     0,     0,   464,     0,   465,     0,   466,   467,
       0,     0,     0,     0,     0,     0,   468,     0,     0,   469,
       0,     0,     0,   470,   471,   472,   473,   474,     0,     0,
       0,     0,     0,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,     0,     0,   136,     0,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     143,  2569,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   889,   890,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
     891,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,   237,     0,   238,     0,
     239,     0,   240,   241,   242,   243,     0,   892,     0,   245,
       0,     0,     0,   246,   247,     0,   248,     0,     0,   249,
     250,     0,     0,     0,   251,   252,   253,   254,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
       0,     0,     0,     0,   272,   273,     0,   893,     0,   275,
       0,   276,   277,     0,     0,     0,     0,     0,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,     0,   299,   300,   301,   302,     0,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   309,
     310,     0,     0,   311,   312,     0,   313,     0,   314,     0,
     315,   316,   317,   318,   319,   320,   894,   322,   323,     0,
       0,   324,   325,     0,     0,   326,   327,   328,   329,     0,
       0,     0,   330,   331,     0,     0,     0,   332,     0,   333,
     334,   335,     0,   336,   337,   338,     0,   339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,   341,   342,
       0,   343,   344,     0,   345,   346,   895,   348,   349,   350,
     351,   352,   353,   354,   355,     0,     0,   356,   357,   358,
       0,   359,     0,   360,   361,   362,   363,   364,     0,   365,
     366,   367,     0,     0,   368,     0,     0,     0,   369,   370,
     371,   372,   373,     0,     0,   374,   375,   376,   377,   378,
       0,   379,   380,     0,   381,   382,   383,     0,     0,   384,
       0,   385,     0,   386,   387,     0,   388,   389,   390,     0,
     391,     0,     0,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,     0,   403,   404,     0,     0,     0,
     405,   406,   896,   408,     0,     0,     0,   409,     0,     0,
       0,   410,     0,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,     0,     0,     0,     0,     0,     0,     0,
       0,   420,   421,     0,   422,     0,     0,   423,     0,     0,
     424,   425,   426,     0,     0,   427,   428,     0,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,     0,
       0,   445,   446,     0,   447,   448,   449,   450,     0,     0,
       0,     0,     0,   897,   452,     0,     0,     0,   453,   454,
     455,   456,     0,   457,   458,     0,   459,   460,     0,   461,
     462,     0,     0,   463,     0,     0,   464,     0,   465,     0,
     466,   467,     0,     0,     0,     0,     0,     0,   468,     0,
       0,   469,     0,     0,     0,   470,   471,   472,   473,   474,
       0,     0,     0,     0,     0,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,     0,   136,     0,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,   898,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
     606,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,     0,     0,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,     0,     0,   427,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,   133,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,   453,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,     0,   136,     0,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,  1363,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,   606,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,     0,     0,   356,
     357,   358,     0,   359,     0,   360,   361,   362,   363,   364,
       0,   365,   366,   367,     0,     0,   368,     0,     0,     0,
     369,   370,   371,   372,   373,     0,     0,   374,   375,   376,
     377,   378,     0,   379,   380,     0,   381,   382,   383,     0,
       0,   384,     0,   385,     0,   386,   387,     0,   388,   389,
     390,     0,   391,     0,     0,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,     0,   403,   404,     0,
       0,     0,   405,   406,   407,   408,     0,     0,     0,   409,
       0,     0,     0,   410,     0,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,     0,     0,     0,     0,     0,
       0,     0,     0,   420,   421,     0,   422,     0,     0,   423,
       0,     0,   424,   425,   426,     0,     0,   427,   428,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,     0,   133,   445,   446,     0,   447,   448,   449,   450,
       0,     0,     0,     0,     0,   451,   452,     0,     0,     0,
     453,   454,   455,   456,     0,   457,   458,     0,   459,   460,
       0,   461,   462,     0,     0,   463,     0,     0,   464,     0,
     465,     0,   466,   467,     0,     0,     0,     0,     0,     0,
     468,     0,     0,   469,     0,     0,     0,   470,   471,   472,
     473,   474,     0,     0,     0,     0,     0,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,     0,   136,     0,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,  1697,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   889,   890,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,   891,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     892,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     893,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   894,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   895,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
       0,     0,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,     0,   403,   404,
       0,     0,     0,   405,   406,   896,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,     0,     0,   427,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,     0,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,   453,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,   898,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,   606,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,     0,
       0,   356,   357,   358,     0,   359,     0,   360,   361,   362,
     363,   364,     0,   365,   366,   367,     0,     0,   368,     0,
       0,     0,   369,   370,   371,   372,   373,     0,     0,   374,
     375,   376,   377,   378,     0,   379,   380,     0,   381,   382,
     383,     0,     0,   384,     0,   385,     0,   386,   387,     0,
     388,   389,   390,     0,   391,     0,     0,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,     0,   403,
     404,     0,     0,     0,   405,   406,   407,   408,     0,     0,
       0,   409,     0,     0,     0,   410,     0,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,     0,     0,     0,
       0,     0,     0,     0,     0,   420,   421,     0,   422,     0,
       0,   423,     0,     0,   424,   425,   426,     0,     0,   427,
     428,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,     0,   133,   445,   446,     0,   447,   448,
     449,   450,     0,     0,     0,     0,     0,   451,   452,     0,
       0,     0,   453,   454,   455,   456,     0,   457,   458,     0,
     459,   460,     0,   461,   462,     0,     0,   463,     0,     0,
     464,     0,   465,     0,   466,   467,     0,     0,     0,     0,
       0,     0,   468,     0,     0,   469,     0,     0,     0,   470,
     471,   472,   473,   474,     0,     0,     0,     0,     0,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,  3508,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,  1254,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,     0,     0,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,     0,
     403,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,     0,     0,
     427,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,     0,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,   453,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   143,  1255,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,   237,     0,   238,     0,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,   246,
     247,     0,   248,     0,     0,   249,   250,     0,     0,     0,
     251,   252,   253,   254,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,     0,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,   330,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,     0,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,     0,     0,   356,   357,   358,     0,   359,     0,   360,
     361,   362,   363,   364,     0,   365,   366,   367,     0,     0,
     368,     0,     0,     0,   369,   370,   371,   372,   373,     0,
       0,   374,   375,   376,   377,   378,     0,   379,   380,     0,
     381,   382,   383,     0,     0,   384,     0,   385,     0,   386,
     387,     0,   388,   389,   390,     0,   391,     0,     0,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
       0,   403,   404,     0,     0,     0,   405,   406,   407,   408,
       0,     0,     0,   409,     0,     0,     0,   410,     0,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,     0,
       0,     0,     0,     0,     0,     0,     0,   420,   421,     0,
     422,     0,     0,   423,     0,     0,   424,   425,   426,     0,
       0,   427,   428,     0,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,     0,     0,   445,   446,     0,
     447,   448,   449,   450,     0,     0,     0,     0,     0,   451,
     452,     0,     0,     0,   453,   454,   455,   456,     0,   457,
     458,     0,   459,   460,     0,   461,   462,     0,     0,   463,
       0,     0,   464,     0,   465,     0,   466,   467,     0,     0,
       0,     0,     0,     0,   468,     0,     0,   469,     0,     0,
       0,   470,   471,   472,   473,   474,     0,     0,     0,     0,
       0,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,     0,   136,     0,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,     0,  1255,   144,
     145,   146,   147,   148,   149,     0,     0,  -363,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,     0,     0,     0,     0,   160,  3922,
       0,   161,   162,     0,   163,     0,     0,     0,     0,   166,
     167,   168,  3923,   170,   171,     0,   172,   173,     0,   174,
       0,   176,     0,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,     0,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,     0,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,     0,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,     0,     0,     0,   227,   228,   229,     0,     0,
     230,   231,  3924,   232,   233,   234,     0,     0,     0,     0,
       0,     0,     0,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
       0,   247,     0,     0,     0,     0,     0,   250,     0,     0,
       0,   251,   252,   253,   254,  3925,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,  3926,     0,     0,   266,     0,     0,     0,   268,     0,
       0,   269,  3927,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,  -318,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,  3928,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   341,   342,     0,     0,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,     0,     0,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,     0,
       0,   381,     0,   383,  -318,     0,   384,     0,     0,     0,
     386,     0,     0,   388,   389,   390,  3929,   391,     0,     0,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,     0,   403,     0,     0,     0,     0,   405,   406,   407,
       0,     0,     0,     0,   409,     0,     0,     0,   410,     0,
       0,   412,     0,   414,     0,   415,     0,     0,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,     0,   426,
       0,     0,     0,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,     0,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,     0,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,     0,     0,     0,     0,
     463,     0,     0,   464,     0,     0,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,  -318,
       0,     0,     0,   475,     0,     0,   477,     0,   479,     0,
     136,   480,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,  4432,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,     0,     0,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,     0,
     403,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,     0,     0,
     427,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,     0,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,   453,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,   136,   480,
     137,   138,   139,   140,   141,  2142,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
       0,     0,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,     0,   403,   404,
       0,     0,     0,   405,   406,   407,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,     0,     0,   427,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,     0,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,   453,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,   136,   480,   137,   138,
     139,   140,   141,  2842,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,     0,     0,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,     0,     0,   427,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,     0,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,   453,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,   136,   480,   137,   138,   139,   140,
     141,  3184,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,     0,     0,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,     0,   403,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,     0,     0,   427,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,     0,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,   453,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,   136,   480,   137,   138,   139,   140,   141,  3513,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,  2479,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,  2480,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,  2481,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,  2482,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,  1024,  1025,     0,   330,
     331,     0,     0,  2483,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,     0,   356,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,   380,
       0,   381,   382,   383,     0,     0,   384,     0,   385,     0,
     386,   387,     0,   388,   389,   390,     0,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   404,     0,     0,     0,   405,   406,   407,
     408,     0,     0,     0,   409,     0,     0,     0,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
       0,     0,  4419,   555,  4420,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,   425,   426,
       0,     0,   427,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,     0,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,   453,   454,   455,   456,  2484,
     457,   458,     0,   459,   460,     0,   461,   462,     0,     0,
     463,     0,     0,   464,     0,   465,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,     0,
       0,     0,     0,   475,   476,     0,   477,   478,   479,     0,
     136,   480,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,  1352,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,  1353,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
    1354,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,   606,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,     0,     0,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,     0,
     403,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,  1355,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,     0,     0,
     427,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,   133,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,   453,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,   136,   480,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,  1365,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,  1366,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,   606,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
       0,     0,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,     0,   403,   404,
       0,     0,     0,   405,   406,   407,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,     0,     0,   427,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,   133,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,   453,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,   136,   480,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,  1893,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,  1894,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,   713,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,     0,     0,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,     0,     0,   427,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,     0,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,   453,
     454,   455,   456,  1895,   457,   458,     0,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,   136,   480,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,  1352,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,  1353,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,   606,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,     0,     0,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,     0,   403,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,     0,     0,   427,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,   133,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,   453,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,   136,   480,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,   983,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,   606,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,     0,   356,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,   380,
       0,   381,   382,   383,     0,     0,   384,     0,   385,     0,
     386,   387,     0,   388,   389,   390,     0,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   404,     0,     0,     0,   405,   406,   407,
     408,     0,     0,     0,   409,     0,     0,     0,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,   425,   426,
       0,     0,   427,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,   133,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,   453,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,   461,   462,     0,     0,
     463,     0,     0,   464,     0,   465,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,     0,
       0,     0,     0,   475,   476,     0,   477,   478,   479,     0,
     136,   480,   137,   138,   139,   140,   141,  1387,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,   606,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,     0,     0,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,     0,
     403,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,     0,     0,
     427,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,   133,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,   453,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,   136,   480,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,   960,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
     961,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
       0,     0,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,     0,   403,   404,
       0,     0,     0,   405,   406,   407,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,     0,     0,   427,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,   962,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,   453,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,   136,   480,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,  2395,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
     606,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,     0,     0,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,     0,     0,   427,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,   133,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,   453,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,   136,   480,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,  1352,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,   606,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,     0,     0,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,     0,   403,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,     0,     0,   427,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,   133,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,   453,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,   136,   480,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,   606,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,     0,   356,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,   380,
       0,   381,   382,   383,     0,     0,   384,     0,   385,     0,
     386,   387,     0,   388,   389,   390,     0,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   404,     0,     0,     0,   405,   406,   407,
     408,     0,     0,     0,   409,     0,     0,     0,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,   425,   426,
       0,     0,   427,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,   133,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,   453,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,   461,   462,     0,     0,
     463,     0,     0,   464,     0,   465,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,     0,
       0,     0,     0,   475,   476,     0,   477,   478,   479,     0,
     136,   480,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,  2838,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,     0,     0,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,     0,
     403,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,     0,     0,
     427,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,   133,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,   453,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,   136,   480,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,  4336,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
    4337,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
       0,     0,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,     0,   403,   404,
       0,     0,     0,   405,   406,   407,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,     0,     0,   427,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,     0,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,   453,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,   136,   480,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,     0,     0,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,   555,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,     0,     0,   427,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,     0,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,   453,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,   136,   480,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,  1060,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,     0,     0,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,     0,   403,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,     0,     0,   427,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,     0,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,   453,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,   136,   480,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,   891,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,     0,   356,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,   380,
       0,   381,   382,   383,     0,     0,   384,     0,   385,     0,
     386,   387,     0,   388,   389,   390,     0,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   404,     0,     0,     0,   405,   406,   407,
     408,     0,     0,     0,   409,     0,     0,     0,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,   425,   426,
       0,     0,   427,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,     0,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
    1864,   452,     0,     0,     0,   453,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,   461,   462,     0,     0,
     463,     0,     0,   464,     0,   465,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,     0,
       0,     0,     0,   475,   476,     0,   477,   478,   479,     0,
     136,   480,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,  2059,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,     0,     0,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,     0,
     403,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,     0,     0,
     427,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,     0,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,   453,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,   136,   480,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,   891,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
       0,     0,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,     0,   403,   404,
       0,     0,     0,   405,   406,   407,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,     0,     0,   427,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,     0,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,   453,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,   136,   480,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,  2929,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,     0,     0,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,     0,     0,   427,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,     0,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,   453,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,   136,   480,   137,   138,   139,   140,
     141,  2937,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,     0,     0,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,     0,   403,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,     0,     0,   427,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,     0,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,   453,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,   136,   480,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,  2961,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,     0,     0,   356,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,   380,
       0,   381,   382,   383,     0,     0,   384,     0,   385,     0,
     386,   387,     0,   388,   389,   390,     0,   391,     0,     0,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   404,     0,     0,     0,   405,   406,   407,
     408,     0,     0,     0,   409,     0,     0,     0,   410,     0,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,   425,   426,
       0,     0,   427,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,     0,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,   453,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,   461,   462,     0,     0,
     463,     0,     0,   464,     0,   465,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,     0,
       0,     0,     0,   475,   476,     0,   477,   478,   479,     0,
     136,   480,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
       0,     0,   356,   357,   358,  3021,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,   380,     0,   381,
     382,   383,     0,     0,   384,     0,   385,     0,   386,   387,
       0,   388,   389,   390,     0,   391,     0,     0,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,     0,
     403,   404,     0,     0,     0,   405,   406,   407,   408,     0,
       0,     0,   409,     0,     0,     0,   410,     0,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,   425,   426,     0,     0,
     427,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,     0,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,   453,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,   461,   462,     0,     0,   463,     0,
       0,   464,     0,   465,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,     0,     0,     0,
       0,   475,   476,     0,   477,   478,   479,     0,   136,   480,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,     0,     0,
     356,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,   380,     0,   381,   382,   383,
       0,     0,   384,     0,   385,     0,   386,   387,     0,   388,
     389,   390,     0,   391,     0,     0,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,     0,   403,   404,
       0,     0,     0,   405,   406,   407,   408,     0,     0,     0,
     409,     0,     0,     0,   410,     0,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,   425,   426,     0,     0,   427,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,   133,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,   453,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,   461,   462,     0,     0,   463,     0,     0,   464,
       0,   465,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,     0,     0,     0,     0,   475,
     476,     0,   477,   478,   479,     0,   136,   480,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,     0,     0,   356,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,   380,     0,   381,   382,   383,     0,     0,
     384,     0,   385,     0,   386,   387,     0,   388,   389,   390,
       0,   391,     0,     0,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   404,     0,     0,
       0,   405,   406,   407,   408,     0,     0,     0,   409,     0,
       0,     0,   410,     0,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,   425,   426,     0,     0,   427,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,     0,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,   453,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
     461,   462,     0,     0,   463,     0,     0,   464,     0,   465,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,     0,     0,     0,     0,   475,   476,     0,
     477,   478,   479,     0,   136,   480,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,  1787,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,  1788,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,     0,     0,   356,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,   380,     0,   381,   382,   383,     0,     0,   384,     0,
     385,     0,   386,   387,     0,   388,   389,   390,     0,   391,
       0,     0,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,     0,   403,   404,     0,     0,     0,   405,
     406,   407,   408,     0,     0,     0,   409,     0,     0,     0,
     410,     0,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
     425,   426,     0,     0,   427,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,     0,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,   453,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,   461,   462,
       0,     0,   463,     0,     0,   464,     0,   465,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,     0,     0,     0,     0,   475,   476,     0,   477,   478,
     479,     0,   136,   480,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,     0,     0,   144,
     145,   146,   147,   148,   149,     0,     0,  -363,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,     0,     0,     0,     0,   160,  3922,
       0,   161,   162,     0,   163,     0,     0,     0,     0,   166,
     167,   168,  3923,   170,   171,     0,   172,   173,     0,   174,
       0,   176,     0,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,     0,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,     0,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,     0,     0,     0,   210,   211,
     212,     0,  -333,  -333,   213,     0,  -333,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,     0,     0,     0,   227,   228,   229,     0,     0,
     230,   231,  3924,   232,   233,   234,     0,     0,     0,     0,
       0,     0,     0,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
       0,   247,     0,     0,     0,     0,     0,   250,     0,     0,
       0,   251,   252,   253,   254,  3925,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,  3926,     0,     0,   266,     0,     0,     0,   268,     0,
       0,   269,  3927,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,  -318,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,  3928,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   341,   342,     0,     0,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,     0,     0,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,     0,
       0,   381,     0,   383,  -318,     0,   384,     0,     0,     0,
     386,     0,     0,   388,   389,   390,  3929,   391,     0,     0,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,     0,   403,     0,     0,     0,     0,   405,   406,   407,
       0,     0,     0,     0,   409,     0,     0,     0,   410,     0,
       0,   412,     0,   414,     0,   415,     0,     0,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,     0,   426,
       0,     0,     0,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,     0,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,     0,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,     0,     0,     0,     0,
     463,     0,     0,   464,     0,     0,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,  -318,
       0,     0,     0,   475,     0,     0,   477,     0,   479,     0,
     136,   480,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,     0,     0,   144,   145,   146,
     147,   148,   149,     0,     0,  -363,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,     0,     0,     0,     0,   160,  3922,     0,   161,
     162,     0,   163,     0,     0,     0,     0,   166,   167,   168,
    3923,   170,   171,     0,   172,   173,     0,   174,     0,   176,
       0,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,     0,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,     0,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,     0,     0,     0,   210,   211,   212,     0,
    -354,     0,   213,     0,  -354,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
       0,     0,     0,   227,   228,   229,     0,     0,   230,   231,
    3924,   232,   233,   234,     0,     0,     0,     0,     0,     0,
       0,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,     0,   247,
       0,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,   254,  3925,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,  3926,
       0,     0,   266,     0,     0,     0,   268,     0,     0,   269,
    3927,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,  -318,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
    3928,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   341,   342,     0,     0,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,     0,     0,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,     0,     0,   381,
       0,   383,  -318,     0,   384,     0,     0,     0,   386,     0,
       0,   388,   389,   390,  3929,   391,     0,     0,     0,   393,
     394,   395,   396,   397,   398,   399,     0,   401,   402,     0,
     403,     0,     0,     0,     0,   405,   406,   407,     0,     0,
       0,     0,   409,     0,     0,     0,   410,     0,     0,   412,
       0,   414,     0,   415,     0,     0,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,     0,   426,     0,     0,
       0,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,     0,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,     0,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,     0,     0,     0,     0,   463,     0,
       0,   464,     0,     0,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,  -354,     0,  -318,     0,     0,
       0,   475,     0,     0,   477,     0,   479,     0,   136,   480,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,     0,     0,   144,   145,   146,   147,   148,
     149,     0,     0,  -363,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
       0,     0,     0,     0,   160,  3922,     0,   161,   162,     0,
     163,     0,     0,     0,     0,   166,   167,   168,  3923,   170,
     171,     0,   172,   173,     0,   174,     0,   176,     0,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
       0,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,     0,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,     0,     0,     0,   210,   211,   212,     0,  -351,     0,
     213,     0,  -351,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,     0,     0,
       0,   227,   228,   229,     0,     0,   230,   231,  3924,   232,
     233,   234,     0,     0,     0,     0,     0,     0,     0,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,     0,   247,     0,     0,
       0,     0,     0,   250,     0,     0,     0,   251,   252,   253,
     254,  3925,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,  3926,     0,     0,
     266,     0,     0,     0,   268,     0,     0,   269,  3927,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
    -318,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,  3928,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   341,   342,     0,     0,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,     0,
       0,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,     0,     0,   381,     0,   383,
    -318,     0,   384,     0,     0,     0,   386,     0,     0,   388,
     389,   390,  3929,   391,     0,     0,     0,   393,   394,   395,
     396,   397,   398,   399,     0,   401,   402,     0,   403,     0,
       0,     0,     0,   405,   406,   407,     0,     0,     0,     0,
     409,     0,     0,     0,   410,     0,     0,   412,     0,   414,
       0,   415,     0,     0,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,     0,   426,     0,     0,     0,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,     0,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,     0,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,     0,     0,     0,     0,   463,     0,     0,   464,
       0,     0,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,  -351,     0,  -318,     0,     0,     0,   475,
       0,     0,   477,     0,   479,     0,   136,   480,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,     0,     0,   144,   145,   146,   147,   148,   149,     0,
       0,  -363,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,     0,     0,
       0,     0,   160,  3922,     0,   161,   162,     0,   163,     0,
       0,     0,     0,   166,   167,   168,  3923,   170,   171,     0,
     172,   173,     0,   174,     0,   176,     0,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,     0,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,     0,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,     0,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
    4234,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,     0,     0,     0,   227,
     228,   229,     0,     0,   230,   231,  3924,   232,   233,   234,
       0,     0,     0,     0,     0,     0,     0,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,     0,   247,     0,     0,     0,     0,
       0,   250,     0,     0,     0,   251,   252,   253,   254,  3925,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,  3926,     0,     0,   266,     0,
       0,     0,   268,     0,     0,   269,  3927,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,  -318,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,  3928,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   341,
     342,     0,     0,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,     0,     0,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,     0,     0,   381,     0,   383,  -318,     0,
     384,     0,     0,     0,   386,     0,     0,   388,   389,   390,
    3929,   391,     0,     0,     0,   393,   394,   395,   396,   397,
     398,   399,     0,   401,   402,     0,   403,     0,     0,     0,
       0,   405,   406,   407,     0,     0,     0,     0,   409,     0,
       0,     0,   410,     0,     0,   412,     0,   414,     0,   415,
       0,     0,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,     0,   426,     0,     0,     0,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,     0,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,     0,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
       0,     0,     0,     0,   463,     0,     0,   464,     0,     0,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,  -318,     0,     0,     0,   475,     0,     0,
     477,     0,   479,     0,   136,   480,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,     0,
       0,   144,   145,   146,   147,   148,   149,     0,     0,  -363,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,     0,     0,     0,     0,
     160,  3922,     0,   161,   162,     0,   163,     0,     0,     0,
       0,   166,   167,   168,  3923,   170,   171,     0,   172,   173,
       0,   174,     0,   176,     0,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,     0,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,     0,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,     0,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,  -356,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,     0,     0,     0,   227,   228,   229,
       0,     0,   230,   231,  3924,   232,   233,   234,     0,     0,
       0,     0,     0,     0,     0,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,     0,   247,     0,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,   254,  3925,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,  3926,     0,     0,   266,     0,     0,     0,
     268,     0,     0,   269,  3927,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,  -318,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,  3928,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   341,   342,     0,
       0,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,     0,     0,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,     0,     0,   381,     0,   383,  -318,     0,   384,     0,
       0,     0,   386,     0,     0,   388,   389,   390,  3929,   391,
       0,     0,     0,   393,   394,   395,   396,   397,   398,   399,
       0,   401,   402,     0,   403,     0,     0,     0,     0,   405,
     406,   407,     0,     0,     0,     0,   409,     0,     0,     0,
     410,     0,     0,   412,     0,   414,     0,   415,     0,     0,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
       0,   426,     0,     0,     0,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,     0,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,     0,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,     0,     0,
       0,     0,   463,     0,     0,   464,     0,     0,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,  -318,     0,     0,     0,   475,     0,     0,   477,     0,
     479,     0,   136,   480,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,     0,     0,   144,
     145,   146,   147,   148,   149,     0,     0,  -363,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,     0,     0,     0,     0,   160,  3922,
       0,   161,   162,     0,   163,     0,     0,     0,     0,   166,
     167,   168,  3923,   170,   171,     0,   172,   173,     0,   174,
       0,   176,     0,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,     0,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,     0,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,     0,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,  4341,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,     0,     0,     0,   227,   228,   229,     0,     0,
     230,   231,  3924,   232,   233,   234,     0,     0,     0,     0,
       0,     0,     0,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
       0,   247,     0,     0,     0,     0,     0,   250,     0,     0,
       0,   251,   252,   253,   254,  3925,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,  3926,     0,     0,   266,     0,     0,     0,   268,     0,
       0,   269,  3927,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,  -318,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,  3928,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   341,   342,     0,     0,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,     0,     0,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,     0,
       0,   381,     0,   383,  -318,     0,   384,     0,     0,     0,
     386,     0,     0,   388,   389,   390,  3929,   391,     0,     0,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,     0,   403,     0,     0,     0,     0,   405,   406,   407,
       0,     0,     0,     0,   409,     0,     0,     0,   410,     0,
       0,   412,     0,   414,     0,   415,     0,     0,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,     0,   426,
       0,     0,     0,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,     0,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,     0,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,     0,     0,     0,     0,
     463,     0,     0,   464,     0,     0,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,  -318,
       0,     0,     0,   475,     0,     0,   477,     0,   479,     0,
     136,   480,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,     0,     0,   144,   145,   146,
     147,   148,   149,     0,     0,  -363,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,     0,     0,     0,     0,   160,  3922,     0,   161,
     162,     0,   163,     0,     0,     0,     0,   166,   167,   168,
    3923,   170,   171,     0,   172,   173,     0,   174,     0,   176,
       0,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,     0,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,     0,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,     0,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,  4389,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
       0,     0,     0,   227,   228,   229,     0,     0,   230,   231,
    3924,   232,   233,   234,     0,     0,     0,     0,     0,     0,
       0,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,     0,   247,
       0,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,   254,  3925,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,  3926,
       0,     0,   266,     0,     0,     0,   268,     0,     0,   269,
    3927,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,  -318,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
    3928,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   341,   342,     0,     0,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,     0,     0,   357,   358,     0,   359,     0,   360,   361,
     362,   363,   364,     0,   365,   366,   367,     0,     0,   368,
       0,     0,     0,   369,   370,   371,   372,   373,     0,     0,
     374,   375,   376,   377,   378,     0,   379,     0,     0,   381,
       0,   383,  -318,     0,   384,     0,     0,     0,   386,     0,
       0,   388,   389,   390,  3929,   391,     0,     0,     0,   393,
     394,   395,   396,   397,   398,   399,     0,   401,   402,     0,
     403,     0,     0,     0,     0,   405,   406,   407,     0,     0,
       0,     0,   409,     0,     0,     0,   410,     0,     0,   412,
       0,   414,     0,   415,     0,     0,   418,   419,     0,     0,
       0,     0,     0,     0,     0,     0,   420,   421,     0,   422,
       0,     0,   423,     0,     0,   424,     0,   426,     0,     0,
       0,   428,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,     0,     0,   445,   446,     0,   447,
     448,   449,   450,     0,     0,     0,     0,     0,   451,   452,
       0,     0,     0,     0,   454,   455,   456,     0,   457,   458,
       0,   459,   460,     0,     0,     0,     0,     0,   463,     0,
       0,   464,     0,     0,     0,   466,   467,     0,     0,     0,
       0,     0,     0,   468,     0,     0,   469,     0,     0,     0,
     470,   471,   472,   473,   474,     0,     0,  -318,     0,     0,
       0,   475,     0,     0,   477,     0,   479,     0,   136,   480,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,     0,     0,   144,   145,   146,   147,   148,
     149,     0,     0,  -363,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
       0,     0,     0,     0,   160,  3922,     0,   161,   162,     0,
     163,     0,     0,     0,     0,   166,   167,   168,  3923,   170,
     171,     0,   172,   173,     0,   174,     0,   176,     0,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
       0,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,     0,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,     0,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,  -337,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,     0,     0,
       0,   227,   228,   229,     0,     0,   230,   231,  3924,   232,
     233,   234,     0,     0,     0,     0,     0,     0,     0,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,     0,   247,     0,     0,
       0,     0,     0,   250,     0,     0,     0,   251,   252,   253,
     254,  3925,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,  3926,     0,     0,
     266,     0,     0,     0,   268,     0,     0,   269,  3927,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
    -318,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,  3928,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   341,   342,     0,     0,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,     0,
       0,   357,   358,     0,   359,     0,   360,   361,   362,   363,
     364,     0,   365,   366,   367,     0,     0,   368,     0,     0,
       0,   369,   370,   371,   372,   373,     0,     0,   374,   375,
     376,   377,   378,     0,   379,     0,     0,   381,     0,   383,
    -318,     0,   384,     0,     0,     0,   386,     0,     0,   388,
     389,   390,  3929,   391,     0,     0,     0,   393,   394,   395,
     396,   397,   398,   399,     0,   401,   402,     0,   403,     0,
       0,     0,     0,   405,   406,   407,     0,     0,     0,     0,
     409,     0,     0,     0,   410,     0,     0,   412,     0,   414,
       0,   415,     0,     0,   418,   419,     0,     0,     0,     0,
       0,     0,     0,     0,   420,   421,     0,   422,     0,     0,
     423,     0,     0,   424,     0,   426,     0,     0,     0,   428,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,     0,     0,   445,   446,     0,   447,   448,   449,
     450,     0,     0,     0,     0,     0,   451,   452,     0,     0,
       0,     0,   454,   455,   456,     0,   457,   458,     0,   459,
     460,     0,     0,     0,     0,     0,   463,     0,     0,   464,
       0,     0,     0,   466,   467,     0,     0,     0,     0,     0,
       0,   468,     0,     0,   469,     0,     0,     0,   470,   471,
     472,   473,   474,     0,     0,  -318,     0,     0,     0,   475,
       0,     0,   477,     0,   479,     0,   136,   480,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,     0,     0,   144,   145,   146,   147,   148,   149,     0,
       0,  -363,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,     0,     0,
       0,     0,   160,  3922,     0,   161,   162,     0,   163,     0,
       0,     0,     0,   166,   167,   168,  3923,   170,   171,     0,
     172,   173,     0,   174,     0,   176,     0,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,     0,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,     0,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,     0,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,     0,     0,     0,   227,
     228,   229,     0,     0,   230,   231,  3924,   232,   233,   234,
       0,     0,     0,     0,     0,     0,     0,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,     0,   247,     0,     0,     0,     0,
       0,   250,     0,     0,     0,   251,   252,   253,   254,  3925,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,  3926,     0,     0,   266,     0,
       0,     0,   268,     0,     0,   269,  3927,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,  -318,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,  3928,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   341,
     342,     0,     0,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,     0,     0,   357,
     358,     0,   359,     0,   360,   361,   362,   363,   364,     0,
     365,   366,   367,     0,     0,   368,     0,     0,     0,   369,
     370,   371,   372,   373,     0,     0,   374,   375,   376,   377,
     378,     0,   379,     0,     0,   381,     0,   383,  -318,     0,
     384,     0,     0,     0,   386,     0,     0,   388,   389,   390,
    3929,   391,     0,     0,     0,   393,   394,   395,   396,   397,
     398,   399,     0,   401,   402,     0,   403,     0,     0,     0,
       0,   405,   406,   407,     0,     0,     0,     0,   409,     0,
       0,     0,   410,     0,     0,   412,     0,   414,     0,   415,
       0,     0,   418,   419,     0,     0,     0,     0,     0,     0,
       0,     0,   420,   421,     0,   422,     0,     0,   423,     0,
       0,   424,     0,   426,     0,     0,     0,   428,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
       0,     0,   445,   446,     0,   447,   448,   449,   450,     0,
       0,     0,     0,     0,   451,   452,     0,     0,     0,     0,
     454,   455,   456,     0,   457,   458,     0,   459,   460,     0,
       0,     0,     0,     0,   463,     0,     0,   464,     0,     0,
       0,   466,   467,     0,     0,     0,     0,     0,     0,   468,
       0,     0,   469,     0,     0,     0,   470,   471,   472,   473,
     474,     0,     0,  -318,     0,     0,     0,   475,     0,     0,
     477,     0,   479,     0,   136,   480,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,     0,
       0,   144,   145,   146,   147,   148,   149,     0,     0,  -363,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,     0,     0,     0,     0,
     160,  3922,     0,   161,   162,     0,   163,     0,     0,     0,
       0,   166,   167,   168,  3923,   170,   171,     0,   172,   173,
       0,   174,     0,   176,     0,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,     0,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,     0,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,     0,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,     0,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,     0,     0,     0,   227,   228,   229,
       0,     0,   230,   231,  3924,   232,   233,   234,     0,     0,
       0,     0,     0,     0,     0,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,     0,   247,     0,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,   254,  3925,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,  3926,     0,     0,   266,     0,     0,     0,
     268,     0,     0,   269,  3927,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,  -318,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,  3928,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   341,   342,     0,
       0,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,     0,     0,   357,   358,     0,
     359,     0,   360,   361,   362,   363,   364,     0,   365,   366,
     367,     0,     0,   368,     0,     0,     0,   369,   370,   371,
     372,   373,     0,     0,   374,   375,   376,   377,   378,     0,
     379,     0,     0,   381,     0,   383,  -318,     0,   384,     0,
       0,     0,   386,     0,     0,   388,   389,   390,  3929,   391,
       0,     0,     0,   393,   394,   395,   396,   397,   398,   399,
       0,   401,   402,     0,   403,     0,     0,     0,     0,   405,
     406,   407,     0,     0,     0,     0,   409,     0,     0,     0,
     410,     0,     0,   412,     0,   414,     0,   415,     0,     0,
     418,   419,     0,     0,     0,     0,     0,     0,     0,     0,
     420,   421,     0,   422,     0,     0,   423,     0,     0,   424,
       0,   426,     0,     0,     0,   428,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,     0,     0,
     445,   446,     0,   447,   448,   449,   450,     0,     0,     0,
       0,     0,   451,   452,     0,     0,     0,     0,   454,   455,
     456,     0,   457,   458,     0,   459,   460,     0,     0,     0,
       0,     0,   463,     0,     0,  4237,     0,     0,     0,   466,
     467,     0,     0,     0,     0,     0,     0,   468,     0,     0,
     469,     0,     0,     0,   470,   471,   472,   473,   474,     0,
       0,  -318,     0,     0,     0,   475,     0,     0,   477,     0,
     479,     0,   136,   480,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,     0,     0,   144,
     145,   146,   147,   148,   149,     0,     0,     0,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,     0,     0,     0,     0,   160,     0,
       0,   161,   162,     0,   163,     0,     0,     0,     0,   166,
     167,   168,     0,   170,   171,     0,   172,   173,     0,   174,
       0,   176,     0,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,     0,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,     0,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,     0,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,     0,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,     0,     0,
       0,     0,     0,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
       0,   247,     0,     0,     0,     0,     0,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,     0,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   341,   342,     0,     0,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,     0,     0,   357,   358,     0,   359,     0,
     360,   361,   362,   363,   364,     0,   365,   366,   367,     0,
       0,   368,     0,     0,     0,   369,   370,   371,   372,   373,
       0,     0,   374,   375,   376,   377,   378,     0,   379,     0,
       0,   381,     0,   383,     0,     0,   384,     0,     0,     0,
     386,     0,     0,   388,   389,   390,     0,   391,     0,     0,
       0,   393,   394,   395,   396,   397,   398,   399,     0,   401,
     402,     0,   403,     0,     0,     0,     0,   405,   406,   407,
       0,     0,     0,     0,   409,     0,     0,     0,   410,     0,
       0,   412,     0,   414,     0,   415,     0,     0,   418,   419,
       0,     0,     0,     0,     0,     0,     0,     0,   420,   421,
       0,   422,     0,     0,   423,     0,     0,   424,     0,   426,
       0,     0,     0,   428,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,     0,     0,   445,   446,
       0,   447,   448,   449,   450,     0,     0,     0,     0,     0,
     451,   452,     0,     0,     0,     0,   454,   455,   456,     0,
     457,   458,     0,   459,   460,     0,     0,     0,     0,     0,
     463,     0,     0,   464,     0,     0,     0,   466,   467,     0,
       0,     0,     0,     0,     0,   468,     0,     0,   469,     0,
       0,     0,   470,   471,   472,   473,   474,     0,     0,     0,
       0,     0,     0,   475,     0,     0,   477,     0,   479,     0,
       0,   480
};

static const yytype_int16 yycheck[] =
{
       6,   976,   629,   977,   894,   895,   567,   587,   566,   567,
     638,   639,   874,    19,   904,     4,  1561,    23,  1494,  1158,
    1841,  1064,   696,  1158,     6,  1254,    32,   511,  1694,  1105,
    1390,  1806,   602,    39,  1058,  1059,    42,   122,  2026,  1294,
      46,   914,   936,  1371,    20,  1492,  2093,    53,  2532,   912,
    1451,  1181,  1254,   656,    30,  1095,  2819,  1128,  1188,  2327,
      36,  2158,  2371,   936,  2449,  2461,  2163,  3272,  1475,  2422,
    2423,  2877,    23,  1475,   937,   625,   626,  1479,   981,  1481,
    1300,  2647,  1991,  1483,  1767,  2050,   981,  1475,    94,  2254,
    1922,  1479,  2118,  1481,   643,  1993,  2118,  1828,  3277,  1995,
    2442,  3013,  1991,  1999,  2505,  2430,  2533,  2527,  2450,  3496,
     116,  2292,   118,  1465,  2010,   121,   122,   123,  1189,  1190,
      18,  2389,  1193,  1194,  1195,  1196,  2022,  1198,  1199,  1200,
    1201,  1202,  1203,  1204,  1205,  1542,   118,   764,  1401,   121,
    1542,    24,  3068,    94,  3335,  3336,  1946,  1947,  3339,   752,
     753,   754,    10,    16,  1542,  2675,  1419,   956,     9,  2679,
    2308,  3151,   765,  1963,  1427,  1428,    46,  3358,  1974,    16,
    2681,    24,    20,  3364,    33,    15,    16,    70,    29,   128,
    1980,  1981,   120,  3295,    35,    33,  2107,    18,    50,  1227,
    1983,  3551,  2739,   106,  1994,    59,    29,  1997,  1998,    47,
    2000,    15,    16,  2003,  2004,  1839,  2141,  2007,  2623,  2118,
      58,    59,  2012,   151,    74,   158,   139,  2017,  2018,  2019,
    2020,  2021,  3007,   125,   794,  2025,    62,  2027,  2028,  2118,
    2508,  2379,    50,    20,  2034,    64,   210,  2037,    11,  2039,
     125,    19,    61,    73,  1965,    33,    33,  2414,   384,  2925,
      35,    55,    65,   151,   371,  3745,   317,   155,   188,    35,
      47,   671,    18,    15,    16,  4073,    18,  2073,    40,  2075,
    2076,    58,    59,   383,    20,  2081,  2082,   219,  3597,   245,
     131,   364,   852,   245,  2090,  2091,   141,  3492,   151,  2095,
     256,   272,  3541,     8,  2248,   151,   440,    15,    16,   120,
     153,  2678,  2102,  2103,  2104,  2105,   448,   420,    61,   361,
     223,    73,    58,    59,   242,   104,    15,    16,  2490,  2491,
     120,   123,   432,  1937,   155,   134,    15,    16,    24,   155,
     151,    22,   502,   743,   386,    12,  2661,   837,  2663,  2806,
     467,   261,   225,   122,   229,   938,   267,    12,   126,   122,
     540,   151,    20,   334,   429,   509,    19,   386,   709,   485,
     140,   162,  3538,   219,   350,    33,   360,  3612,   162,   132,
    3615,   415,   225,  3722,   603,   625,   215,   204,   217,    47,
     731,    15,    16,   633,   147,   539,    19,   540,  3579,   190,
      58,    59,   436,   744,   745,    73,   190,  3588,   627,   155,
    3749,    15,    16,    15,    16,    15,    16,   243,  1036,  1037,
    1038,   496,   398,    67,   349,   350,   145,   247,  3609,   145,
    1094,   248,   207,  3614,   307,  3670,   470,   553,   145,  2896,
     183,   207,   507,   354,  1108,   625,  2242,    15,    16,    15,
      16,  2448,  3829,  2615,  2616,   151,  2812,    15,    16,   534,
    2385,   371,   382,   566,   307,  1005,   235,   153,   135,   959,
      15,    16,   177,   126,  2494,  1439,  2241,    15,    16,    77,
     135,   641,   163,  3958,  1364,  3654,   278,   538,  3797,    15,
      16,    67,    18,   627,   446,   247,   452,   415,   540,   625,
     496,   633,   498,   126,   107,  4303,   438,   110,   625,  2884,
     353,    15,    16,   564,  2829,  2830,   258,   316,  3713,   515,
     627,   540,   300,   519,    15,    16,  3301,   627,    15,    16,
     375,  2649,   278,  2924,   530,   608,  2927,  2928,   534,   225,
     536,   512,  1395,  1861,  2010,  1398,    70,  4027,   512,  4029,
    1403,    15,    16,   549,   402,  3905,  2511,  2948,   352,  2945,
    2515,  3727,   475,   187,   484,   261,   370,  1184,  1965,   373,
     566,  2549,  1465,  1965,  2529,  2530,  1429,  1430,   574,   247,
    1465,  3750,   184,   983,    15,    16,  2541,  1965,  1451,   182,
    1254,  1983,   438,   445,  1991,  2494,   592,    15,    16,  1192,
     638,   639,  4077,  1077,  1078,  1983,   602,  2623,   604,  1828,
     373,  2623,   415,  2568,   423,  2494,  1209,  3533,  3284,   615,
     616,   307,    15,    16,  1098,   621,   219,   623,   370,   625,
     626,   373,  3037,  1107,   630,   631,  1828,   445,   155,   635,
    2778,  2779,  2780,   627,   616,  1119,  1120,  1121,  1541,   645,
     646,   647,  2042,  1127,  2922,   651,  1541,   400,   506,  2455,
     476,  1722,   370,  1916,   597,   373,   485,   353,  3464,   415,
    3207,   169,  1733,   516,   615,  1736,    15,    16,    15,    16,
     621,   370,   450,   524,   373,   577,  1716,  2825,  2826,  2827,
    2645,   370,  4069,  1233,   373,   521,  2853,   467,    15,    16,
     696,   640,   577,   631,   545,  3874,  2617,   555,   611,  2492,
    2107,   552,  1272,   563,   551,  2107,   791,  1745,  2514,    24,
    2516,  2118,    15,    16,  2623,  3827,  2118,  2523,   551,  2107,
     551,   569,  2522,   603,   575,  2660,   590,  3274,  1527,   501,
    2118,  2537,   625,   631,  2623,  2535,   370,   595,  2544,   373,
     603,  2547,  3067,   596,   627,   593,  3736,  1297,  3057,  2101,
     522,   757,  2473,   759,  2560,   540,   370,  2391,   370,   373,
     370,   373,  1312,   373,   540,   627,   625,  1337,   631,    15,
      16,  2952,   612,   603,   627,   631,  2582,   625,   550,   785,
     786,   787,   569,   789,   790,   791,  2740,   793,   794,  4176,
    1360,  4040,   370,   799,   370,   373,  3975,   373,   612,  3319,
      15,    16,   370,  3729,   786,   373,   595,   633,   790,   894,
     631,   793,  3323,   898,   899,   370,   630,   450,   373,   572,
     516,  2621,   370,   569,    95,   373,   832,  2441,   913,  1399,
    1379,   631,  1425,  3353,   370,   155,   842,   373,   187,  2614,
     618,  3361,  4018,  3354,  3355,   625,   852,   853,  3368,   629,
    3216,   857,   608,  4044,   462,  4046,   370,   846,   512,   373,
     612,   155,    15,    16,  3036,   583,  3293,    15,    16,   370,
     404,   600,   373,   370,   600,   627,   373,  3262,  2885,  2886,
    3281,  3266,   560,   600,  2914,  4370,  2333,   155,   894,  3309,
     975,   842,   898,   899,   612,   601,   370,    15,    16,   373,
     596,   569,   853,   411,  3213,   583,   857,   913,  2453,   627,
     225,  1469,  3824,   612,    15,    16,    15,    16,    15,    16,
    3262,   589,   590,   612,  3266,   631,   512,   626,   627,   370,
    4109,   544,   373,  3061,   547,    15,    16,   626,   627,  2760,
    3317,  3318,   370,   260,   187,   373,  3271,   798,  3325,   476,
     956,  3328,  3329,    15,    16,   226,  1004,  1847,    68,  3227,
      15,    16,    15,    16,   263,  1639,   300,   370,  3345,   975,
     373,   977,    15,    16,   245,  4180,  2797,  1867,   612,   582,
      15,    16,  3359,   223,   356,   256,    45,  3364,  3365,  3366,
    3367,    79,   307,   627,    15,    16,    81,   531,   612,  1005,
     612,  1550,   612,   120,   261,  2914,  1054,   365,    50,   540,
     182,  3037,   626,   627,   626,  3037,   626,   627,  1912,   606,
     554,   370,   467,   370,   373,  2914,   373,    15,    16,   197,
     311,  2507,  2508,   277,   612,    98,   612,   123,   353,  1912,
    2872,   169,  1905,   370,   612,   415,   373,   219,  1942,   627,
    1056,   627,  1915,   151,  1060,  1918,  1919,   612,   626,   627,
      62,   540,  2422,  2423,   612,   390,  2473,   370,   339,  1942,
     373,  2473,   627,    15,    16,  3223,   612,   540,   626,   627,
      15,    16,    15,    16,  3650,  2473,  1171,  2494,  1094,  2772,
    2492,  2822,  3257,  2991,  3899,   187,  2992,   184,   612,   267,
    2143,   632,  1108,   346,  2492,  1056,   633,   190,   155,  1060,
     125,   612,  1740,   627,   371,   612,   339,  2188,   461,   627,
      15,    16,   208,  1208,   370,   626,   627,   373,  3037,   626,
     627,    57,  1735,  2353,   467,  2265,   560,   184,   612,   362,
    3525,  3526,    42,    15,    16,   204,   625,   153,  3037,   485,
      15,    16,  1158,   627,  1828,   370,   476,   456,   373,   583,
     534,    68,   625,   261,  2564,  1171,   390,  2942,  2431,   261,
    1255,   612,     0,  1801,   364,   169,    15,    16,  1748,   227,
     625,   452,   476,   270,   612,   626,   627,    24,   236,   151,
     278,   219,   278,   437,   155,  2271,  2272,   117,  2101,   627,
    1750,   516,  1208,    51,  3967,   118,  2101,  1213,   476,   612,
    2617,  2877,  1218,    61,   229,  2617,  2623,   370,  1303,  4025,
     373,  2623,   370,   626,  2264,   373,   148,  1233,   172,  2617,
    4035,   172,  3220,   603,  2274,  2623,  2371,   159,   355,    15,
      16,   243,   190,   169,  1814,  1815,   517,   173,  1254,  1255,
     278,  4456,   370,   160,   626,   373,    15,    16,   184,   179,
      15,    16,   372,   612,   467,   612,  1272,  1218,  1871,   370,
    2341,   370,   373,   370,   373,   633,   373,   626,  1284,   626,
    1286,   596,  1288,   411,   601,   612,    15,    16,    15,    16,
     370,  1297,   625,   373,  2695,    15,    16,  1303,   467,   626,
    1289,    15,    16,   242,   472,  3658,  1312,  1313,   370,   612,
     352,   373,  2451,   633,   571,   370,  2451,   370,   373,   402,
     373,   234,  3926,  3927,   627,   410,  3291,   370,   376,  3426,
     373,  1337,    15,    16,  1340,   370,    18,  1288,   373,   633,
    2787,  3147,  1348,  3652,   625,  1351,   348,   353,  3313,   370,
     177,   397,   373,   357,  1360,   275,   467,   103,   602,   630,
     583,  3136,  1313,   204,  1370,  1371,   612,  3142,    15,    16,
     155,  3146,    15,    16,  1380,  1381,  1382,  1383,  1384,  1385,
     278,   627,   370,   411,  1390,   373,  1375,  1472,   225,   315,
    1396,  1397,   136,  1399,    15,    16,  1402,   612,  1380,  1381,
    1382,   460,  1384,   445,  2543,   349,   350,   248,  2543,   512,
     582,   355,   627,    95,   355,  1397,  1422,   411,   608,   267,
    1402,   227,   625,   438,   251,    15,    16,   200,   370,   476,
     236,   373,  1383,   475,  1385,   370,   356,   370,   373,   339,
     373,   467,   467,   122,    15,    16,  2922,   369,    15,    16,
     200,   534,   467,   581,   402,   459,   625,    15,    16,   612,
     629,    15,    16,   209,   612,   372,  1472,  4043,    31,   151,
     307,  1422,   245,   155,   627,   370,   415,    41,   373,   627,
    1486,  3877,   353,  1489,  1490,   411,    15,    16,   591,  1478,
      15,    16,   187,   117,   612,   138,    15,    16,   370,   627,
     182,   373,   184,   601,   417,   370,   508,  2914,   373,   627,
     516,   612,   187,   612,   625,   612,  2992,   415,   200,   521,
    2410,  1527,  3831,   205,   262,   352,   627,   265,   627,    12,
     627,   370,   612,   631,   373,  1486,   534,   219,   233,  1490,
    1546,   631,  1548,  1549,   226,  1551,  1552,   627,    12,  2561,
     612,   233,    15,    16,   261,   179,   235,   612,  1564,   612,
    1566,   236,   577,   245,   162,   627,  1548,  1549,   132,   612,
     376,  3668,   627,   626,   256,   626,   627,   612,   626,   261,
     125,  3387,    15,    16,   627,   329,   534,   581,   270,   352,
     596,   612,   627,  2822,   370,    15,    16,   373,   371,   625,
     625,    15,    16,   223,   300,   518,   627,   609,  3876,   590,
     625,   370,   593,   557,   373,   370,   557,   539,   373,  2662,
    2822,   775,    15,    16,   612,    12,  2756,    80,   248,   573,
    3037,   377,   573,  1639,  1640,  3037,  4240,  4241,   626,  2894,
     386,   370,   562,   370,   373,   516,   373,   100,   394,  3037,
     370,   275,   135,   373,    12,  4063,   370,   339,   187,   373,
      15,    16,    33,   153,   371,  2268,  1751,   430,  2807,   571,
     612,   135,  2807,   236,   412,   122,   371,   612,   543,   612,
     362,  2165,    15,    16,   229,   627,   633,   370,    59,   371,
     373,   626,   551,   626,  1700,  2179,  2418,   260,    12,   789,
     531,   627,   153,   534,  4280,  4281,    15,    16,    15,    16,
     608,   865,    15,    16,   410,  3762,  3763,   612,  4202,    16,
     402,    15,    16,   370,   626,   596,   373,   370,  2212,   625,
     373,   626,   356,   218,     8,   225,  1742,   633,   583,   236,
     612,   498,  1748,   489,  1750,  1751,  3193,   612,   135,   370,
     117,   117,   373,   534,   626,    29,  1762,    15,    16,  1844,
     257,  1767,   519,    15,    16,  3540,  1772,    15,    16,  1775,
     452,   285,   286,   612,   225,  1781,  1782,   135,  1784,  3767,
     370,   626,   627,   373,    15,    16,  3142,   626,  1794,   485,
    3146,  2513,  1798,   475,   117,    15,    16,  2281,  3464,   370,
      15,    16,   373,   370,    15,    16,   373,   619,  1814,  1815,
    1816,  1817,   370,   179,   626,   373,   370,  2539,  2540,   373,
    4228,   135,  1828,  1812,   200,  1831,  1832,  1833,   537,  4184,
    1781,  1782,  4187,  1784,   580,   517,   612,   223,  1844,    15,
      16,   370,   117,  1794,   373,   370,  1273,  1798,   373,  1276,
     626,   370,  1279,   612,   373,  1861,   179,   612,  2416,    15,
      16,   424,   223,   353,   223,  1816,  1817,   626,    15,    16,
     218,   626,    15,    16,     6,  1881,   620,   621,   622,   623,
    1831,  1832,  1833,   612,   207,   612,  3692,  1876,   130,   571,
      15,    16,   612,   438,   208,    15,    16,   626,   612,   626,
     582,   583,   353,   365,    73,    11,   626,   370,   275,   275,
     373,  1917,   626,   427,   428,    15,    16,   200,  3246,   601,
    2932,   603,   467,  1929,    56,  4333,   619,  4335,   233,   612,
    1936,    58,    59,   626,    46,   455,   588,   370,   562,   187,
     373,    68,   187,   626,   626,   627,   626,   627,   630,   631,
     370,  4306,   275,   373,  2966,  4363,   370,  2819,   475,   373,
    1782,  1950,  1784,  2521,  2976,   612,  1917,  2861,  2980,   612,
    1959,  1960,    33,  2867,   225,   626,   187,   370,   278,   626,
     373,  1970,  1971,  1972,  1973,  1936,  1975,  1976,  2861,   356,
     356,   612,  4400,  4401,  2867,  3071,   631,   103,    59,   633,
     275,   155,  2892,  3258,   578,   626,  2869,   139,  3020,  1831,
    1832,  1833,   532,   367,    39,   370,   122,   537,   373,  3095,
    3096,    46,   612,   625,   149,   506,   516,    16,    24,   125,
    2036,  2116,   577,   356,    18,  2120,   626,   370,   483,   183,
     373,   612,  3118,   438,  2050,   612,   107,   626,   627,   110,
    3856,  3857,  3858,  3859,   612,   626,   225,   118,   612,   626,
     580,   370,     6,   370,   373,   516,   373,   370,   626,    11,
     373,   627,   626,  2158,   625,   595,   370,    73,  2163,   373,
     625,   356,  3217,   612,   190,  2074,   625,   612,  2077,  2078,
     625,  2080,   625,   612,  2083,  2084,  2085,  2086,  2087,  2088,
    2089,   626,   353,  2092,   625,  2094,   596,   626,   993,   994,
    2116,    95,   370,   219,  2120,   373,  2122,   625,   370,  2125,
      16,   373,   370,   136,   625,   373,  2132,  2133,  2134,  2135,
     575,  3270,  2138,   229,  2762,  3270,   625,   627,   625,   370,
     626,   627,   373,  2125,   540,   596,  1031,   136,  2822,   612,
     370,   625,  2158,   373,   625,   370,   625,  2163,   373,   370,
     626,   627,   373,   626,  3303,   271,   117,   151,  3303,  3969,
     615,   155,  2257,   496,   170,    58,    59,  3998,   347,   612,
     166,  2132,  2133,  2134,   353,   625,   500,   501,   502,   503,
     504,   505,   612,   626,   370,   562,   562,   373,   612,   625,
     184,   625,  2287,   517,   117,  4005,   626,   120,  4008,  4009,
    4010,  4011,   626,   625,   370,   625,   200,   373,   350,   612,
      24,   205,    61,   370,  3999,  3813,   373,   370,   179,   225,
     373,    71,    71,   626,  2804,   604,   605,   402,   362,   562,
     136,   625,   226,   531,    83,   370,   534,   625,   373,   233,
     370,  2257,   421,   373,    12,   625,   207,   612,   627,    15,
      16,   245,  3286,  3287,   215,   516,   179,  2751,   625,    73,
     370,   626,   256,   373,   625,  4081,  2282,   261,   625,   612,
     341,  2287,   414,    41,   416,   543,   270,   562,   626,   627,
     626,   627,   580,   626,   207,   625,   402,  3373,  3658,  4099,
    4100,   117,  2308,   612,   120,   612,   626,   627,  4108,   612,
     625,   307,   625,   103,   626,   627,   329,   626,   612,   626,
    3210,  3550,    57,   626,   275,   633,   580,   581,  4103,   583,
      88,   585,   626,   583,  2340,    93,   625,   467,  3926,  3927,
     329,   506,   438,   183,   183,   596,   625,   516,  2354,   153,
     189,   347,  3491,   625,   612,   339,  3491,   353,   625,  4025,
     612,   625,   275,   179,   612,  2371,   170,   473,  3597,  2375,
    3413,   467,   162,  2379,   626,  2460,  2461,   401,   362,   626,
     627,   612,   625,   223,   223,   583,  2392,   371,  2394,   625,
     555,   207,   612,   626,   627,   626,    31,   612,   567,   625,
     190,   612,   625,  2392,   625,   356,   626,   625,   248,   248,
    2416,   626,   626,   627,  3890,  3891,  2422,  2423,   402,   626,
     627,   225,   483,   543,   626,   627,   532,   596,   534,   627,
     595,   467,   625,   329,   169,   633,   612,   625,   173,   475,
     626,   627,   625,   356,   625,  2451,   625,  2532,   625,   184,
     626,   625,  3997,   625,  2460,  2461,   612,   587,   588,   275,
     117,   625,  3436,   625,    71,   612,   625,    24,   452,   612,
     626,   626,   627,  3325,  4062,  4063,  3328,  3329,   368,   626,
     625,   577,   240,   626,   583,   625,   547,   612,   625,   478,
     479,   475,   612,  3345,  2500,   625,   455,   626,   627,  2505,
     531,   136,   117,   307,  2510,  2511,   362,   626,   627,  2515,
     625,  2517,   612,   362,   575,   625,    73,   626,   627,   627,
     516,  2527,   179,  2529,  2530,  2501,  2532,  2533,   627,   625,
    2519,  2520,  2538,   517,   633,  2541,  2512,  2543,   626,   627,
     356,   625,  2518,   347,   383,   626,   627,  2553,   625,   353,
     207,   587,   588,   626,   627,  2561,  4144,  2546,   316,  4380,
     400,   400,  2568,  2569,   179,   625,  2542,   626,   627,    30,
     625,  4159,  2548,    12,  2580,   625,   183,   625,  2554,  2555,
     315,   625,   478,   479,  4172,    15,    16,   571,   625,   625,
     625,    35,   207,   626,   627,   625,   153,   625,    95,   583,
     596,   236,  2553,   626,   627,   618,   619,   620,   621,   622,
     623,   562,   402,   170,    75,   625,   223,   601,   275,   603,
     625,   379,  3106,   625,  2613,   260,   625,   616,   617,   618,
     619,   620,   621,   622,   623,   625,  4457,   625,  2644,  2645,
    4228,   248,   626,   627,   626,   627,   630,   631,   625,   562,
      73,   219,  4240,  4241,   493,   626,   627,    25,    26,   115,
     275,   626,   627,   626,   627,   490,   110,    48,   225,   626,
     627,    54,   272,   117,  3158,    48,   411,   626,   627,   627,
      63,   111,   112,   113,   114,   115,   362,  3245,   149,    72,
      58,    59,    60,  2644,   329,   362,   135,   461,  4286,   356,
      68,    84,    85,    86,   571,    73,   626,   627,  4296,   626,
     627,   620,   516,    81,   349,   350,   626,   627,   101,   633,
     616,   617,   618,   619,   620,   621,   622,   623,   172,   226,
     153,   626,   627,   572,   492,   179,    35,   475,   106,   626,
     627,   356,   626,   627,   534,  4333,   562,  4335,   245,   161,
     307,   633,   120,   626,   627,   625,   124,  4345,   214,   256,
     626,   627,   261,   207,   184,   555,  2772,  3395,  2774,   208,
     528,  2777,  2778,  2779,  2780,  4363,   383,  4365,   512,  4367,
    2786,   211,   212,   213,   214,   153,  4374,   145,   146,   424,
     347,   531,   596,   400,  3865,   161,   353,  4385,  2804,   626,
     627,  2807,   225,    25,    76,   595,    78,   626,   627,  3783,
     512,   110,  4400,  4401,   272,  3789,  2822,    73,   117,  2825,
    2826,  2827,   152,   627,   626,   627,   626,   627,  4416,  4417,
     627,   275,  2838,  4421,    82,  2786,   627,   626,   627,   198,
    3693,  3694,   339,   478,   479,   627,    68,   363,   120,  2838,
     527,    73,   136,  1145,  1146,   223,   491,  3996,  4101,  4102,
    2945,  3996,   230,   319,   626,  3423,   151,   323,   120,    33,
     106,   143,   632,   172,   330,  3229,  3230,  3186,  3187,   247,
     179,  2870,  2871,     6,  2873,  3473,  3474,   105,   625,   319,
       4,   321,   322,   323,   466,   595,   340,   153,   120,   236,
     330,   136,   627,   383,    55,   562,   178,   351,   207,   430,
     106,   355,   356,   136,   216,    61,   166,   627,  2924,   627,
     633,  2927,  2928,    68,   347,    71,  2932,    12,   600,   626,
     353,   626,  1070,  1071,  1072,   318,   397,    83,   306,  2945,
     370,   135,  2948,   373,  1082,   304,   305,   562,     9,   627,
     309,   310,   335,   409,   633,   452,   324,  2946,   419,   516,
    2966,   626,   626,   626,   128,   633,  2955,   285,   286,   225,
    2976,   625,   260,   633,  2980,  1113,   275,   627,  1116,   409,
     153,   616,   617,   618,   619,   620,   621,   622,   623,   153,
     627,   632,   453,   157,  3000,   272,   272,  3003,   421,  1137,
    1138,   236,  3008,  1141,   272,   272,    48,   272,  3014,   465,
     378,   272,  3018,   236,  3020,   627,   627,   155,   386,   387,
     517,  1159,  1160,   531,   625,   267,   248,   384,   192,  3035,
     627,   103,  3014,   627,   464,   465,   551,   183,   627,   596,
    4179,   340,  3048,   189,  4179,   329,   210,   551,   383,  3055,
     511,  3040,  3003,    12,   627,   155,   355,   356,    95,    68,
    3066,   500,   501,   627,   503,   627,   505,   627,   236,   620,
     103,  4045,   239,   174,   529,   184,   576,   223,   517,   627,
     463,   488,   513,   514,   388,   131,   517,   518,  3716,   457,
     521,   347,   523,   516,   329,   627,   540,   353,  3411,  3412,
     544,   626,   248,   547,  3055,  3967,   329,   362,   272,   427,
     428,   155,   155,   557,   627,   155,   155,   189,   562,   155,
     155,   565,   627,   155,   155,   155,   155,   349,   350,   162,
     155,   155,   155,   355,   155,   155,   519,   155,   155,   155,
     362,   155,   598,   155,   567,   155,  3152,  3232,   516,   155,
     422,   223,   155,   536,  3160,   155,   578,   190,   614,   607,
     362,   582,   190,   362,   532,   421,   626,   535,   598,   362,
     627,  3160,  3730,   596,   618,   619,   187,   626,   400,   626,
     498,   499,   612,   613,   614,  4256,   626,   620,   626,   226,
     223,   626,    73,  3199,   478,   479,   187,   626,   626,   271,
    4090,   627,   619,   571,   627,   476,   625,   571,   245,   136,
     626,  3217,  3218,   626,   625,  3221,   626,  3223,   626,   256,
     626,   540,   627,   627,   626,   106,  3232,   626,   626,   625,
    3837,  3838,  3238,  3546,    25,    26,  3816,   401,   271,  3245,
    3246,   540,   626,   478,   479,   544,   410,   623,   547,   471,
     625,   540,   601,   627,   400,   478,   479,   540,   557,   627,
     516,   425,   224,   562,  3270,  3254,   565,    58,    59,    60,
     551,   625,   153,   625,   523,  3281,   198,    68,  4349,   443,
     625,   187,    73,   633,   625,  3291,   625,  3293,   258,   627,
      81,  4430,   187,  4267,  4268,  4430,  4270,  3303,   627,   633,
     633,   633,   339,  3309,  4443,  3311,   626,  3313,  4443,  4448,
    3871,   567,   410,  4448,  4453,   106,   580,   475,  4453,   618,
     619,   627,   486,   184,   627,   362,    46,   136,   506,   120,
     337,  3573,  3574,   124,   618,   619,   620,   621,   622,   623,
     596,  3426,   223,  4317,  3586,  4319,  4320,   493,   512,   506,
     572,  3593,   506,   506,   506,    25,    26,    71,   466,   551,
     131,    73,   153,   246,   397,   796,    33,   531,   383,   402,
     534,   532,  3979,   246,  3616,    87,  3983,  3619,   383,  3385,
     131,   616,   617,   618,   619,   620,   621,   622,   623,  3378,
      60,   383,   532,   616,   617,   618,   619,   620,   621,   622,
     623,   473,   329,    73,  3410,  3411,  3412,   383,   383,     6,
      46,    81,  3401,   385,    11,   452,    13,    14,   383,   383,
    3426,   493,  4396,  3508,   625,   306,   572,   383,    25,    26,
    4037,  4038,   223,  1571,   383,   433,   106,  4412,   625,   230,
     473,  3754,  3755,   324,  3757,  3758,  4073,  4075,   271,   625,
     120,   583,  4013,   633,   124,   626,   247,   149,   232,    56,
     532,   128,   534,    60,    61,   537,   347,   626,   232,    66,
     111,   112,   113,   114,   115,   155,    73,   155,   156,   626,
     517,  3487,   551,   153,    81,  3491,   153,   626,   551,   633,
     157,   626,   626,   626,    91,   626,   626,   633,   627,   532,
     572,   627,  3508,  1641,   537,   633,   551,  1645,   580,   106,
    3595,   627,   608,   191,   540,   306,    46,   267,    95,   625,
     329,   625,   555,   120,   202,   192,   625,   124,  3517,   551,
     155,  1669,   368,   324,   187,   132,   133,   187,   250,   187,
    3546,   187,   139,   210,   233,   540,   540,   580,   242,  3555,
     147,   478,   479,   223,   151,   415,   153,   627,  3564,   356,
     230,  4451,   595,   241,   155,   155,   155,   164,   627,   386,
     211,   212,   213,   214,   252,   374,   245,   247,    73,   245,
     320,  3557,   106,  3668,   106,   182,   248,   378,   248,  3595,
     551,   625,    87,   200,   367,   386,   387,   540,    18,    54,
     448,   279,   383,   234,  3555,   272,   633,  3596,    63,   362,
     234,   219,   625,   603,  3620,   327,   620,    72,   626,   262,
     383,  3627,   187,  4181,   221,   511,   223,   626,   625,    84,
      85,    86,   633,   230,   129,   516,   306,   625,   625,  3645,
     352,   625,   627,   626,   626,  3634,   101,  3732,   625,   226,
     247,   532,  3658,   539,   324,   633,   627,   626,   626,   626,
     626,   577,  3668,   620,   627,   343,   457,   625,   245,   478,
     479,   626,   626,   270,   627,   626,  4303,   236,   319,   256,
     321,   322,   323,   633,   626,   626,  4314,   415,   155,   330,
     617,   618,   619,   620,   621,   622,   623,   121,   245,   245,
     248,   413,   627,   362,   625,   248,   603,   627,   378,   306,
     627,   625,  3718,   626,   398,   627,   386,   387,   362,    73,
     362,    18,   626,   625,   627,   516,  3732,   324,   362,   362,
     490,   328,   467,   626,   401,   625,   625,   625,   356,  3745,
     469,   532,   371,   410,   535,  4144,  3735,   626,  3754,  3755,
    4311,  3757,  3758,   603,  4382,   250,   626,   626,   425,   258,
    4159,   415,   339,   450,   198,   142,   254,   626,   409,   366,
     656,   627,   200,  4172,   371,   661,   443,   477,  4405,   155,
     571,   378,   245,   389,   245,   362,   383,   457,   627,   386,
     387,   625,  3877,   120,   506,   120,   534,   625,   396,   625,
     633,    77,   485,   155,   138,  4432,   692,   616,   617,   618,
     619,   620,   621,   622,   623,   626,  3822,  3823,   490,   486,
     626,   418,   708,   464,   465,   177,  4454,   462,  3834,   627,
     626,   626,   327,    18,   261,   432,   433,   434,   435,   191,
     626,   626,   626,   626,    33,   512,   516,    33,   626,   626,
     202,   626,   326,   250,   349,   350,   626,   352,  3864,   410,
     457,   626,   532,   318,   270,   535,   752,   753,   754,   755,
     627,  3877,  3823,   603,   368,   452,   233,   625,   625,   765,
     335,   626,    46,   627,   633,   205,   627,  4286,   326,   155,
     583,   625,   583,   625,   625,   303,   593,  4296,   625,   251,
     252,   571,  3908,   625,   577,   626,   625,   593,   625,   120,
     248,   248,   355,  3864,    33,   356,   539,  3923,   413,   516,
     626,   356,  3928,   627,   625,   326,   168,   279,   626,   540,
     540,   540,   248,   534,   583,   532,   587,   233,   535,   362,
     517,  2077,  2078,   583,  2080,   627,  4345,  2083,  2084,  2085,
    2086,  2087,  2088,  2089,   510,   351,  2092,   598,  2094,   448,
     588,   558,   356,   626,   603,   626,  4365,   522,  4367,   368,
     625,   150,   613,   614,   571,  4374,    30,   577,   625,  3968,
     625,   600,   634,   184,   542,   131,  4385,   131,   626,   626,
    3996,   381,   447,   625,   346,   153,  4002,   402,    70,   626,
     184,   423,    30,    61,   600,   187,   368,   627,   463,    61,
     626,   506,   625,   523,   263,     5,   362,  4416,  4417,  4104,
     362,  4027,  4421,  4029,   233,   149,   631,   368,   368,   129,
     138,   625,    46,    46,   631,   148,    46,    46,   661,    46,
     625,   625,   577,   125,   149,   218,   600,   399,   277,  4055,
     631,   634,   119,   144,   625,    46,    52,    46,    46,   631,
     458,   456,   149,   627,   519,   626,   626,   543,   203,   692,
     627,   216,    52,   220,   627,   184,   626,   626,   437,   631,
     184,   536,   627,   184,    46,   708,   543,   602,   120,   219,
     186,   356,   625,   475,  2294,   627,  3933,  3387,  4104,  2096,
    3388,  2489,   639,  3643,  4110,  4076,  3960,  4247,   990,  4098,
    4248,  3641,  3645,  3821,  4432,  4393,    46,  4202,   568,  1772,
    1827,  3813,  2772,  3813,  4283,  1011,  3813,  3813,  3813,  3813,
    3813,  3813,   755,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,  3813,   291,   292,   293,   294,   295,   296,
     297,   298,   299,  4402,   301,   302,  3813,  4137,  4283,  4241,
    3813,  3813,  3813,  4163,  4162,  1029,  1481,  1483,  3830,  2049,
    2972,  2799,  2354,  4179,  4002,  3199,  1300,  4262,  4094,  3489,
    1066,  1067,  4349,  4264,  3865,  1541,  3404,  4311,  4013,  1075,
    1076,  1077,  1078,  1079,  1080,  1081,  4202,   506,  2042,  3041,
    4189,  4190,  2645,  1089,  1090,  3313,  1092,  1093,  2050,  2571,
    3291,  1097,  1098,  3336,  3336,  1101,  1102,  1103,  1104,  3369,
    1106,  1107,  3781,  3604,  3556,  4181,  3595,  2729,  1114,  1115,
    2460,  1117,  1118,  1119,  1120,  1121,  3146,  3143,  1124,  1125,
    1126,  1127,  1128,  1129,  1130,  1131,  1132,  1133,  1134,  3138,
    1136,  4034,    11,  1139,  1140,    11,  4262,  4038,  1144,  1555,
    4037,  3971,  1148,  1149,  1150,  3979,  2130,  3983,  3834,  3789,
    2049,  2564,  4278,  4279,  1436,  1161,  1162,  1163,   571,  3561,
     427,   428,  4288,  1432,  1170,  3292,  2366,  1816,  2786,  4295,
    1537,  1177,  1178,  1179,  2333,  1181,  2383,  3194,  2250,  1490,
    3815,   586,  1188,  1189,  1190,  1838,  1192,  1193,  1194,  1195,
    1196,   886,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,
    3160,  2762,  3260,  1209,  1210,  2249,  2164,  4032,  1108,  2452,
    3893,  4278,  2275,  3385,  4279,  3303,    25,    26,  3746,  1082,
    4382,  4102,  3732,  2388,  1219,  2328,   976,  2135,  1288,  2370,
     976,  3491,  3212,  1313,  4439,  3211,  3270,   576,  4364,   976,
    1564,   976,  4179,  4369,   652,   567,  1913,  1416,  1914,    58,
      59,    60,  1761,  1320,  3311,  3197,  4377,  4347,  4274,    68,
    4448,  4453,  3217,  3597,    73,  4209,  1388,  2413,  1011,   566,
    3245,   566,    81,  3246,  1864,  2406,  1348,  1697,  2405,  4405,
    1338,  2399,   868,  1798,   560,  1281,  3854,  3860,   561,  1546,
    2774,   873,   502,   502,   639,   639,   639,   106,    -1,    -1,
      -1,    -1,    -1,    -1,  4430,    -1,  4432,    -1,    -1,    -1,
      -1,   120,    -1,  4439,    -1,   124,    -1,  4443,    -1,    -1,
      -1,    -1,  4448,  1066,  1067,    -1,    -1,  4453,    -1,    -1,
      -1,    -1,  1075,  1076,    -1,    -1,  1079,  1080,  1081,    -1,
      -1,    -1,  1348,    -1,   153,    -1,  1089,  1090,    -1,  1092,
    1093,    -1,  1358,    -1,  1097,    -1,    -1,    -1,  1101,  1102,
    1103,  1104,    -1,  1106,    -1,    -1,    -1,  1373,    -1,    -1,
    1376,  1114,  1115,    -1,  1117,  1118,    12,    13,    -1,    -1,
      -1,  1124,  1125,  1126,    -1,    -1,  1129,  1130,  1131,  1132,
    1133,  1134,    -1,  1136,    -1,    -1,  1139,  1140,    -1,    -1,
      -1,  1144,    -1,    -1,    -1,  1148,  1149,  1150,    -1,    -1,
      -1,    -1,    -1,    -1,   223,    -1,    -1,    -1,  1161,  1162,
    1163,   230,    -1,    -1,    -1,    -1,    -1,  1170,    -1,    13,
      14,    -1,    -1,    -1,  1177,  1178,  1179,    -1,   247,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,
      34,   260,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,
      -1,    -1,    -1,    -1,    48,    49,    -1,  1210,    -1,    -1,
      -1,    -1,    56,    -1,    -1,    -1,    60,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,
      -1,    75,    13,    -1,    -1,    -1,    -1,   306,    -1,    -1,
      -1,    -1,    -1,   139,    -1,    -1,    -1,    -1,    -1,    -1,
      94,    -1,    -1,    -1,    -1,   324,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,    -1,   165,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,   125,   126,   127,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   198,    -1,    -1,    -1,    -1,   151,    -1,   378,
      -1,  1577,    -1,    94,    -1,    -1,    -1,   386,   387,    -1,
      -1,   165,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,   181,    -1,    -1,
      -1,    -1,    -1,    -1,   125,  1348,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,   198,  1358,    -1,    -1,   139,   203,
      -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1373,    -1,    -1,  1376,   270,    -1,    -1,    -1,    -1,    -1,
      -1,   162,    -1,    -1,   165,   229,    -1,   231,   457,    -1,
      -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   249,    -1,    -1,    -1,  1675,
    1676,  1677,    -1,    -1,    -1,    -1,    -1,   198,    -1,    -1,
      -1,    -1,   266,    -1,  1690,    -1,   270,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   223,    -1,    -1,    -1,    -1,   516,   229,    -1,
    1716,    -1,    -1,    -1,    -1,    -1,  1722,    -1,    -1,  1725,
      -1,  1727,    -1,   532,    -1,    -1,   535,  1733,    -1,  1735,
    1736,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    12,
      13,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   571,    -1,    -1,    -1,    -1,   403,    -1,    -1,
      -1,   407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   366,    -1,    -1,    -1,    -1,   423,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   431,    -1,    -1,    -1,   383,
      -1,    32,    33,   439,    -1,  1811,    -1,    38,    -1,    40,
      -1,    42,    43,   397,    -1,    -1,   625,    -1,    -1,    -1,
      -1,    94,    -1,    -1,   408,    -1,    -1,    -1,    59,    -1,
      -1,   467,    -1,    -1,  1577,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   480,   481,   430,    -1,    -1,   433,
      -1,   435,   125,    -1,   438,    -1,  1862,   441,   442,    -1,
      -1,    -1,    -1,    -1,    -1,  1871,   139,   451,    -1,   453,
      -1,    -1,    -1,    -1,    -1,    -1,   107,   461,    -1,   110,
      -1,    -1,   403,   467,    -1,    -1,    -1,   118,    -1,   162,
     526,   475,   165,    -1,    -1,    -1,   480,    -1,   482,    -1,
      -1,    -1,   423,   176,    -1,    -1,   137,    -1,    -1,    -1,
     431,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   439,   555,
      -1,    -1,    -1,   154,    -1,   198,    -1,   511,    -1,    -1,
      -1,   515,  1675,  1676,  1677,    -1,    -1,    -1,    -1,    -1,
      -1,   577,    -1,   579,    -1,    -1,   467,   178,    -1,   180,
     223,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,   480,
     481,    -1,   193,   194,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1716,   558,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1725,    -1,  1727,    -1,   570,    -1,    -1,    -1,
     574,    -1,    -1,   577,    -1,    -1,    -1,   270,   582,    -1,
      -1,    -1,    -1,   234,    -1,   526,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   610,    -1,    -1,    -1,
      -1,    -1,    -1,   264,   555,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   273,   274,    -1,   276,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   577,    -1,   579,    -1,
      -1,    -1,    -1,    -1,    -1,  2071,    -1,    -1,  1811,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   312,   313,   314,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     331,   332,   333,    -1,    -1,    -1,    -1,   338,    -1,    -1,
     341,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1862,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   358,   359,    -1,
     403,    -1,    -1,    -1,   407,    -1,    -1,    -1,  2144,    -1,
      -1,    -1,  2148,    -1,    -1,    -1,    -1,  2153,  2154,    -1,
     423,    -1,    -1,    -1,    -1,    -1,  2162,    -1,   431,  2165,
      -1,   392,   393,    -1,    -1,    -1,   439,    -1,    -1,  2175,
    2176,    -1,  2178,  2179,    -1,  2181,  2182,  2183,  2184,  2185,
      -1,    -1,  2188,    -1,    -1,    -1,   417,    -1,    -1,    -1,
      -1,  2197,    -1,    -1,   467,    -1,    -1,    -1,  2204,    -1,
    2206,    -1,  2208,  2209,    -1,  2211,  2212,   480,   481,    -1,
    2216,  2217,  2218,    -1,    -1,    -1,  2222,  2223,  2224,    -1,
    2226,    -1,  2228,    -1,  2230,    -1,  2232,    -1,  2234,    -1,
      -1,    -1,    -1,  2239,    -1,    -1,    -1,    -1,    -1,    -1,
     471,    -1,    -1,    -1,   475,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2258,   526,    -1,    -1,   487,    -1,    -1,  2265,
      -1,    -1,  2268,    -1,    -1,    -1,    -1,    -1,  2274,    -1,
      -1,  2277,    -1,    -1,    -1,  2281,    -1,    -1,    -1,    -1,
      -1,    -1,   555,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   577,    -1,   579,    -1,    -1,    -1,
     541,    -1,    -1,   544,    -1,    -1,   547,   548,   549,   550,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2071,    -1,
      -1,    -1,    -1,    -1,    -1,  2341,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,   590,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   614,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2144,    -1,    -1,    -1,  2148,    -1,    -1,  2414,    -1,
    2153,  2154,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2162,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2175,  2176,    -1,  2178,    -1,    -1,  2181,  2182,
    2183,  2184,  2185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2197,    -1,    -1,    -1,    -1,    -1,
      -1,  2204,    -1,  2206,    -1,  2208,  2209,    -1,  2211,    -1,
      -1,    -1,    -1,  2216,  2217,  2218,    -1,    -1,    -1,  2222,
    2223,  2224,    -1,  2226,    -1,  2228,    -1,  2230,    -1,  2232,
      -1,  2234,    -1,    -1,    -1,    -1,  2239,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2258,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2274,    -1,    -1,  2277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    13,    14,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    48,    49,    -1,
      -1,    -1,    -1,    -1,    -1,    56,    -1,    -1,    -1,    60,
      61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    23,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    34,   125,   126,   127,    -1,    -1,    -1,
    2666,    -1,    -1,    -1,  2670,    -1,    -1,   138,   139,    -1,
      -1,  2414,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,
      -1,    -1,    -1,    -1,  2690,  2691,    -1,    -1,    69,    -1,
      -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2711,    -1,    -1,    -1,    90,
     181,    92,    -1,    94,  2720,    -1,  2722,    -1,  2724,    -1,
      -1,    -1,    -1,   104,    -1,   196,    -1,   198,    -1,    -1,
      -1,    -1,   203,    -1,    -1,   206,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2751,    -1,    -1,    -1,    -1,
    2756,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   152,   153,    -1,    -1,    -1,  2782,   158,   249,    -1,
     161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1,   270,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,   197,    -1,   199,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   222,   223,    -1,    -1,    -1,    -1,  2853,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,    -1,
      -1,    -1,    -1,  2899,    -1,   366,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,   300,
      -1,    -1,    -1,  2666,    -1,    -1,   397,  2670,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2690,  2691,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   430,
      -1,    -1,   433,    -1,   435,    -1,    -1,   438,  2711,    -1,
     441,   442,    -1,    -1,    -1,    -1,    -1,  2720,    -1,  2722,
     451,  2724,   453,    -1,   365,    -1,    -1,    -1,    -1,    -1,
     461,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   475,  3011,  3012,    -1,    -1,   480,
     391,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     401,   402,    -1,    -1,   405,   406,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2782,
     511,    -1,    -1,    -1,   515,   426,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3074,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,
      -1,    11,    -1,    13,    -1,    -1,    -1,   558,    -1,    -1,
      -1,   472,    -1,  3099,    -1,    25,    26,  3103,  3104,   570,
    3106,    -1,    -1,   574,   485,    -1,   577,    -1,    -1,  3115,
    2853,   582,    -1,    -1,  3120,    -1,    -1,  3123,    -1,  3125,
    3126,    -1,    -1,    -1,    -1,    -1,    56,    -1,    -1,    -1,
      60,   512,    -1,    -1,    -1,   516,    -1,    -1,    -1,   610,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    81,  3158,   534,   625,    -1,  2899,    -1,    -1,    -1,
      -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   106,    -1,    -1,    -1,
      -1,    -1,  3188,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,    -1,    -1,  3211,    -1,    -1,    -1,   139,
     591,    -1,    -1,    -1,    -1,    -1,   597,   147,    -1,    -1,
      -1,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   182,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3272,    -1,  3011,  3012,
      -1,    -1,    -1,    -1,  3280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3074,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3099,    -1,    -1,    -1,
    3103,  3104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3115,    -1,    -1,    -1,   306,  3120,    -1,    -1,
    3123,    -1,  3125,  3126,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   324,    -1,    -1,    -1,   328,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,    -1,    -1,  3188,    -1,    -1,   378,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   386,   387,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3211,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   433,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3529,  3530,    -1,    -1,   457,    -1,  3272,
      -1,    -1,  3538,    -1,    -1,    -1,    -1,  3280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   516,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   532,    -1,    -1,   535,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   571,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3679,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3713,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3727,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3529,  3530,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3538,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3813,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3865,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3875,
      -1,    -1,    -1,    -1,    -1,    -1,  3882,    -1,  3884,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3920,    -1,    -1,    -1,    -1,    -1,
    3926,  3927,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3679,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3713,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3727,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4018,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4048,    -1,  4050,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4060,    -1,  4062,  4063,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4085,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3875,    -1,    -1,    -1,  4142,    -1,  4144,  3882,
      -1,  3884,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4159,  4160,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4180,    -1,    -1,  3920,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4227,  4228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4240,  4241,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4256,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4018,    -1,    -1,    -1,    -1,
    4286,    -1,    -1,    -1,    -1,    -1,    -1,  4293,    -1,    -1,
    4296,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4048,    -1,  4050,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4060,    -1,    -1,
    4326,    -1,    -1,    -1,    -1,    -1,    -1,  4333,    -1,  4335,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4345,
      -1,    -1,    -1,  4349,    -1,    -1,  4352,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4363,    -1,  4365,
      -1,  4367,    -1,    -1,    -1,    -1,    -1,    -1,  4374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4385,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4400,  4401,    -1,    -1,    -1,  4142,
    4406,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4416,  4417,    -1,    -1,    -1,  4421,    -1,  4160,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4180,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4227,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,  4326,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,  4352,
      41,    42,    43,    44,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,  4406,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,  4456,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,    -1,   176,   177,   178,   179,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,    -1,   206,   207,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,   229,   230,
     231,   232,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,   253,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,    -1,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,   380,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,   513,   514,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,   540,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,   552,   553,   554,    -1,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,   584,   585,   586,   587,   588,    -1,    -1,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,    -1,   614,    -1,    -1,    -1,   618,   619,    -1,
      -1,    -1,    -1,   624,   625,    -1,    -1,   628,   629,    -1,
      -1,   632,   633,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,    -1,   176,   177,   178,   179,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,   218,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,   229,   230,   231,
     232,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,   256,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,    -1,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,   380,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
      -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,
     422,    -1,    -1,   425,   426,   427,   428,   429,    -1,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,    -1,   441,
      -1,   443,   444,    -1,   446,   447,   448,    -1,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,
     472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,
      -1,   483,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
     502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,
     512,   513,   514,   515,   516,    -1,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,    -1,    -1,   535,   536,   537,   538,    -1,   540,   541,
     542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,
      -1,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,    -1,   569,   570,    -1,
      -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,
      -1,    -1,   584,   585,   586,   587,   588,    -1,    -1,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,    -1,
      -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,
      -1,    -1,   614,    -1,    -1,    -1,   618,   619,    -1,    -1,
      -1,    -1,   624,   625,    -1,    -1,   628,   629,    -1,    -1,
     632,   633,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,    -1,   176,   177,   178,   179,    -1,   181,    -1,
      -1,    -1,   185,   186,   187,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,   229,   230,   231,   232,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,   256,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
      -1,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,   380,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,    -1,
     443,   444,    -1,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,
     473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
     483,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,
     513,   514,   515,   516,    -1,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,   540,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,    -1,   569,   570,    -1,    -1,
     573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,
      -1,   584,   585,   586,   587,   588,    -1,    -1,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,
      -1,   614,    -1,    -1,    -1,   618,   619,    -1,    -1,    -1,
      -1,   624,   625,    -1,    -1,   628,   629,    -1,    -1,   632,
     633,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,    -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,
      -1,   185,   186,   187,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,   218,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,   229,   230,   231,   232,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,   256,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,    -1,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,   380,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,    -1,    -1,
     414,    -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,
      -1,   425,   426,   427,   428,   429,    -1,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,    -1,   446,   447,   448,    -1,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,   473,
      -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,
     504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,   513,
     514,   515,   516,    -1,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,    -1,
      -1,   535,   536,   537,   538,    -1,   540,   541,   542,    -1,
     544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,    -1,   569,   570,    -1,    -1,   573,
      -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,
     584,   585,   586,   587,   588,    -1,    -1,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,
      -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,
     614,    -1,    -1,    -1,   618,   619,    -1,    -1,    -1,    -1,
     624,   625,    -1,    -1,   628,   629,    -1,    -1,   632,   633,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
      -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,
     185,   186,   187,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
      -1,   206,   207,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,   229,   230,   231,   232,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,    -1,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,   380,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,   513,   514,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,   540,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,   584,
     585,   586,   587,   588,    -1,    -1,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,   614,
      -1,    -1,    -1,   618,   619,    -1,    -1,    -1,    -1,   624,
     625,    -1,    -1,   628,   629,    -1,    -1,   632,   633,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    99,    -1,   101,   102,   103,    -1,   105,
     106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,    -1,
     176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,    -1,
     206,   207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,   218,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,   229,   230,   231,   232,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
     256,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,   275,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,    -1,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,   380,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,
      -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,   425,
     426,   427,   428,   429,    -1,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,    -1,   441,    -1,   443,   444,    -1,
     446,   447,   448,    -1,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
     466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,
      -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,
      -1,   507,    -1,    -1,   510,   511,   512,   513,   514,   515,
     516,    -1,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,    -1,    -1,   535,
     536,   537,   538,    -1,   540,   541,   542,    -1,   544,   545,
     546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,
     576,    -1,   578,    -1,   580,   581,    -1,    -1,   584,   585,
     586,   587,   588,    -1,    -1,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,
     606,   607,    -1,   609,   610,   611,    -1,    -1,   614,    -1,
      -1,    -1,   618,   619,    -1,    -1,    -1,    -1,   624,   625,
      -1,    -1,   628,   629,    -1,    -1,   632,   633,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    35,    36,
      37,    38,    39,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    52,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    99,    -1,   101,   102,   103,    -1,   105,   106,
     107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,   174,    -1,   176,
     177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,   218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,   229,   230,   231,   232,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,   275,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,    -1,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,   380,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,   513,   514,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,   540,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,   584,   585,   586,
     587,   588,    -1,    -1,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,    -1,   614,    -1,    -1,
      -1,   618,   619,    -1,    -1,    -1,    -1,   624,   625,    -1,
      -1,   628,   629,    -1,    -1,   632,   633,     5,    -1,     7,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    99,    -1,   101,   102,   103,    -1,   105,   106,   107,
     108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,   177,
     178,   179,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,   201,    -1,   203,   204,    -1,   206,   207,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
     218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,   229,   230,   231,   232,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,   256,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,   275,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,    -1,    -1,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,    -1,   355,   356,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,   380,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,
     418,   419,   420,   421,   422,    -1,    -1,   425,   426,   427,
     428,   429,    -1,   431,   432,    -1,   434,   435,   436,   437,
     438,   439,    -1,   441,    -1,   443,   444,    -1,   446,   447,
     448,    -1,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,   466,    -1,
      -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,
      -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,
      -1,    -1,   510,   511,   512,   513,   514,   515,   516,    -1,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,    -1,    -1,   535,   536,   537,
     538,    -1,   540,   541,   542,    -1,   544,   545,   546,   547,
      -1,    -1,    -1,    -1,    -1,   553,   554,    -1,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
      -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,
     578,    -1,   580,   581,    -1,    -1,   584,   585,   586,   587,
     588,    -1,    -1,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,
      -1,   609,   610,   611,    -1,    -1,   614,    -1,    -1,    -1,
     618,   619,    -1,    -1,    -1,    -1,   624,   625,    -1,    -1,
     628,   629,    -1,    -1,   632,   633,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    33,    34,    35,    36,    37,    38,
      39,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    52,    53,    54,    55,    -1,    57,    58,
      59,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      99,    -1,   101,   102,   103,    -1,   105,   106,   107,   108,
     109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,   174,    -1,   176,   177,   178,
     179,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,    -1,   206,   207,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,   218,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
     229,   230,   231,   232,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,    -1,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,   380,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,   437,   438,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,   513,   514,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,   540,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,   584,   585,   586,   587,   588,
      -1,    -1,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,    -1,   614,    -1,    -1,    -1,   618,
     619,    -1,    -1,    -1,    -1,   624,   625,    -1,    -1,   628,
     629,    -1,    -1,   632,   633,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    99,
      -1,   101,   102,   103,    -1,   105,   106,   107,   108,   109,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,   174,    -1,   176,   177,   178,   179,
      -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,   201,    -1,   203,   204,    -1,   206,   207,    -1,   209,
     210,    -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,
     220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,   229,
     230,   231,   232,    -1,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,
     250,   251,    -1,    -1,   254,    -1,   256,   257,   258,    -1,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,    -1,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,
     380,   381,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,
     420,   421,   422,    -1,    -1,   425,   426,   427,   428,   429,
      -1,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,   441,    -1,   443,   444,    -1,   446,   447,   448,    -1,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,
     470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,
      -1,   481,    -1,   483,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,
     510,   511,   512,   513,   514,   515,   516,    -1,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,    -1,    -1,   535,   536,   537,   538,    -1,
     540,   541,   542,    -1,   544,   545,   546,   547,    -1,    -1,
      -1,    -1,    -1,   553,   554,    -1,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,    -1,   569,
     570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,
     580,   581,    -1,    -1,   584,   585,   586,   587,   588,    -1,
      -1,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,
     610,   611,    -1,    -1,   614,    -1,    -1,    -1,   618,   619,
      -1,    -1,    -1,    -1,   624,   625,    -1,    -1,   628,   629,
      -1,    -1,   632,   633,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,    -1,   176,   177,   178,   179,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,    -1,   206,   207,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,   229,   230,
     231,   232,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,    -1,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,   380,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,   513,   514,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,   540,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,   584,   585,   586,   587,   588,    -1,    -1,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,    -1,   614,    -1,    -1,    -1,   618,   619,    -1,
      -1,    -1,    -1,   624,   625,    -1,    -1,   628,   629,    -1,
      -1,   632,   633,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,    -1,   176,   177,   178,   179,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,   201,
      -1,   203,   204,    -1,   206,   207,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,   218,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,   229,   230,   231,
     232,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,   256,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,    -1,    -1,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,    -1,   355,   356,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,   380,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
      -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,
     422,    -1,    -1,   425,   426,   427,   428,   429,    -1,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,    -1,   441,
      -1,   443,   444,    -1,   446,   447,   448,    -1,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,
     472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,
      -1,   483,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
     502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,
     512,   513,   514,   515,   516,    -1,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,    -1,    -1,   535,   536,   537,   538,    -1,   540,   541,
     542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,
      -1,   553,   554,    -1,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,    -1,   569,   570,    -1,
      -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,
      -1,    -1,   584,   585,   586,   587,   588,    -1,    -1,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,    -1,
      -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,
      -1,    -1,   614,    -1,    -1,    -1,   618,   619,    -1,    -1,
      -1,    -1,   624,   625,    -1,    -1,   628,   629,    -1,    -1,
     632,   633,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,    -1,   176,   177,   178,   179,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,   229,   230,   231,   232,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,   256,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
      -1,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,    -1,   355,   356,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,   380,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,   432,
      -1,   434,   435,   436,   437,   438,   439,    -1,   441,    -1,
     443,   444,    -1,   446,   447,   448,    -1,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,
     473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
     483,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,
     513,   514,   515,   516,    -1,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,   540,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,    -1,   569,   570,    -1,    -1,
     573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,
      -1,   584,   585,   586,   587,   588,    -1,    -1,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,
      -1,   614,    -1,    -1,    -1,   618,   619,    -1,    -1,    -1,
      -1,   624,   625,    -1,    -1,   628,   629,    -1,    -1,   632,
     633,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,    -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,
     204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,   218,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,   229,   230,   231,   232,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,   256,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,    -1,
      -1,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
      -1,   355,   356,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,   380,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,    -1,    -1,
     414,    -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,
      -1,   425,   426,   427,   428,   429,    -1,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,    -1,   441,    -1,   443,
     444,    -1,   446,   447,   448,    -1,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,   473,
      -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,
     504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,   513,
     514,   515,   516,    -1,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,    -1,
      -1,   535,   536,   537,   538,    -1,   540,   541,   542,    -1,
     544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,
     554,    -1,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,    -1,   569,   570,    -1,    -1,   573,
      -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,
     584,   585,   586,   587,   588,    -1,    -1,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,
      -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,
     614,    -1,    -1,    -1,   618,   619,    -1,    -1,    -1,    -1,
     624,   625,    -1,    -1,   628,   629,    -1,    -1,   632,   633,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
      -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
      -1,   206,   207,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,   229,   230,   231,   232,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,    -1,    -1,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,    -1,
     355,   356,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,   380,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,   513,   514,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,   540,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,   584,
     585,   586,   587,   588,    -1,    -1,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,   614,
      -1,    -1,    -1,   618,   619,    -1,    -1,    -1,    -1,   624,
     625,    -1,    -1,   628,   629,    -1,    -1,   632,   633,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    35,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,   172,   173,   174,    -1,
     176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,   207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,   275,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,   355,
     356,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
      -1,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,
      -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,   425,
     426,   427,   428,   429,    -1,   431,   432,    -1,   434,   435,
     436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,
     446,   447,   448,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
     466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,
      -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,
      -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,
     516,    -1,   518,   519,   520,   521,   522,   523,    -1,    -1,
     526,   527,   528,   529,    -1,   531,   532,    -1,    -1,   535,
     536,   537,   538,    -1,   540,   541,   542,    -1,   544,   545,
     546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,
      -1,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,
     576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,
      -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,
     596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,
     606,   607,    -1,   609,   610,   611,    -1,    -1,   614,    -1,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,   632,   633,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,   189,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,   223,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,   260,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,    -1,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
      -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,
     422,    -1,    -1,   425,   426,   427,   428,   429,    -1,   431,
     432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,
      -1,   443,   444,    -1,   446,   447,   448,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,   467,    -1,    -1,   470,   471,
     472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,
      -1,   483,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
     502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,
     512,    -1,    -1,   515,   516,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,   528,   529,    -1,   531,
     532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,
     542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,
      -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,   566,   567,    -1,   569,   570,    -1,
      -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,
      -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,
      -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,
      -1,    -1,   614,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,   633,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,   189,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,
     210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,
     220,   221,   222,   223,    -1,   225,    -1,    -1,    -1,    -1,
     230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,    -1,    -1,    -1,   247,   248,    -1,
     250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
      -1,   341,   342,    -1,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,
      -1,   381,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,    -1,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,
     420,   421,   422,    -1,    -1,   425,   426,   427,   428,   429,
      -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,   439,
      -1,   441,    -1,   443,   444,    -1,   446,   447,   448,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,
     470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,
      -1,   481,    -1,   483,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,
     510,   511,   512,    -1,    -1,   515,   516,    -1,   518,   519,
     520,   521,   522,   523,    -1,    -1,   526,   527,   528,   529,
      -1,   531,   532,    -1,    -1,   535,   536,   537,   538,    -1,
      -1,   541,   542,    -1,   544,   545,   546,   547,    -1,    -1,
      -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,   566,   567,    -1,   569,
     570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,
     580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,
      -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,   599,
      -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,
     610,   611,    -1,    -1,   614,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,   633,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,    -1,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,
     418,   419,   420,   421,   422,    -1,    -1,   425,   426,   427,
     428,   429,    -1,   431,   432,    -1,   434,   435,   436,    -1,
      -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,   447,
     448,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,   466,   467,
      -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,
      -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,
      -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,
     518,   519,   520,   521,   522,   523,    -1,    -1,   526,   527,
     528,   529,    -1,   531,   532,    -1,    -1,   535,   536,   537,
     538,    -1,    -1,   541,   542,    -1,   544,   545,   546,   547,
      -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
      -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,
     578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,
     588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,
     598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,
      -1,   609,   610,   611,    -1,    -1,   614,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,   626,    -1,
      -1,    17,    -1,    -1,    20,   633,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
      -1,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,
      -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,   425,
     426,   427,   428,   429,    -1,   431,   432,    -1,   434,   435,
     436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,
     446,   447,   448,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
     466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,
      -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,
      -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,
     516,    -1,   518,   519,   520,   521,   522,   523,    -1,    -1,
     526,   527,   528,   529,    -1,   531,   532,    -1,    -1,   535,
     536,   537,   538,    -1,    -1,   541,   542,    -1,   544,   545,
     546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
     566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,
     576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,
      -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,
     596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,
     606,   607,    -1,   609,   610,   611,    -1,    -1,   614,    -1,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
     626,    -1,    -1,    -1,    -1,    17,   632,   633,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,    -1,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
      -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,
     422,    -1,    -1,   425,   426,   427,   428,   429,    -1,   431,
     432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,
      -1,   443,   444,    -1,   446,   447,   448,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,
     472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,
      -1,   483,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
     502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,
     512,    -1,    -1,   515,   516,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,   528,   529,    -1,   531,
     532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,
     542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,
      -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,   566,   567,    -1,   569,   570,    -1,
      -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,
      -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,
      -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,
      -1,    -1,   614,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,   625,    -1,    -1,    -1,    17,    -1,    -1,
      20,   633,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,
     210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,
     220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,
     230,   231,    -1,   233,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,
     250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
      -1,   341,   342,    -1,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,
      -1,   381,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,    -1,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,
     420,   421,   422,    -1,    -1,   425,   426,   427,   428,   429,
      -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,   439,
      -1,   441,    -1,   443,   444,    -1,   446,   447,   448,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,
     470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,
      -1,   481,    -1,   483,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,
     510,   511,   512,    -1,    -1,   515,   516,    -1,   518,   519,
     520,   521,   522,   523,    -1,    -1,   526,   527,   528,   529,
      -1,   531,   532,    -1,    -1,   535,   536,   537,   538,    -1,
      -1,   541,   542,    -1,   544,   545,   546,   547,    -1,    -1,
      -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,   566,   567,    -1,   569,
     570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,
     580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,
      -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,   599,
      -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,
     610,   611,    -1,    -1,   614,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,   633,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,    -1,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,
     418,   419,   420,   421,   422,    -1,    -1,   425,   426,   427,
     428,   429,    -1,   431,   432,    -1,   434,   435,   436,    -1,
      -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,   447,
     448,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,   466,    -1,
      -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,
      -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,
      -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,
     518,   519,   520,   521,   522,   523,    -1,    -1,   526,   527,
     528,   529,    -1,   531,   532,    -1,    -1,   535,   536,   537,
     538,    -1,    -1,   541,   542,    -1,   544,   545,   546,   547,
      -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
      -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,
     578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,
     588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,
     598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,
      -1,   609,   610,   611,    -1,    -1,   614,    -1,    -1,    -1,
      -1,     5,   620,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,   633,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,
     204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,    -1,    -1,
     414,    -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,
      -1,   425,   426,   427,   428,   429,    -1,   431,   432,    -1,
     434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,
     444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,   473,
      -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,
     504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,
      -1,   515,   516,    -1,   518,   519,   520,   521,   522,   523,
      -1,    -1,   526,   527,   528,   529,    -1,   531,   532,    -1,
      -1,   535,   536,   537,   538,    -1,    -1,   541,   542,    -1,
     544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,
     554,    -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,
      -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,
      -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,
      -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,
     614,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,   625,    -1,    -1,    -1,    17,    -1,    -1,    20,   633,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,    -1,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
      -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,
     422,    -1,    -1,   425,   426,   427,   428,   429,    -1,   431,
     432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,
      -1,   443,   444,    -1,   446,   447,   448,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,
     472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,
      -1,   483,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
     502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,
     512,    -1,    -1,   515,   516,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,   528,   529,    -1,   531,
     532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,
     542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,
      -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,   566,   567,    -1,   569,   570,    -1,
      -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,
      -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,
      -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,
      -1,    -1,   614,    -1,    -1,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
     632,   633,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,    -1,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,
     418,   419,   420,   421,   422,    -1,    -1,   425,   426,   427,
     428,   429,    -1,   431,   432,    -1,   434,   435,   436,    -1,
      -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,   447,
     448,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,   466,    -1,
      -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,
      -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,
      -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,
     518,   519,   520,   521,   522,   523,    -1,    -1,   526,   527,
     528,   529,    -1,   531,   532,    -1,    -1,   535,   536,   537,
     538,    -1,    -1,   541,   542,    -1,   544,   545,   546,   547,
      -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
      -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,
     578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,
     588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,
     598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,
      -1,   609,   610,   611,    -1,    -1,   614,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,   633,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
      -1,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,
      -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,   425,
     426,   427,   428,   429,    -1,   431,   432,    -1,   434,   435,
     436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,
     446,   447,   448,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
     466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,
      -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,
      -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,
     516,    -1,   518,   519,   520,   521,   522,   523,    -1,    -1,
     526,   527,   528,   529,    -1,   531,   532,    -1,    -1,   535,
     536,   537,   538,    -1,    -1,   541,   542,    -1,   544,   545,
     546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
     566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,
     576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,
      -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,
     596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,
     606,   607,    -1,   609,   610,   611,    -1,    -1,   614,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,   633,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,
     204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,    -1,    -1,
     414,    -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,
      -1,   425,   426,   427,   428,   429,    -1,   431,   432,    -1,
     434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,
     444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,   473,
      -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,
     504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,
      -1,   515,   516,    -1,   518,   519,   520,   521,   522,   523,
      -1,    -1,   526,   527,   528,   529,    -1,   531,   532,    -1,
      -1,   535,   536,   537,   538,    -1,    -1,   541,   542,    -1,
     544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,
     554,    -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,
      -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,
      -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,
      -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,
     614,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   633,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,    -1,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,   406,   407,    -1,   409,   410,   411,
      -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,
     422,    -1,    -1,   425,   426,   427,   428,   429,    -1,   431,
     432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,
      -1,   443,   444,    -1,   446,   447,   448,    -1,   450,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,
     472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,
      -1,   483,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
     502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,
     512,    -1,    -1,   515,   516,    -1,   518,   519,   520,   521,
     522,   523,    -1,    -1,   526,   527,   528,   529,    -1,   531,
     532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,
     542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,
      -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,   566,   567,    -1,   569,   570,    -1,
      -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,
      -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,
      -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,
      -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,
      -1,    -1,   614,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,   633,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,
     210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,
     220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,
     230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,
     250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
      -1,   341,   342,    -1,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,
      -1,   381,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,    -1,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,   406,   407,    -1,   409,
     410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,
     420,   421,   422,    -1,    -1,   425,   426,   427,   428,   429,
      -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,   439,
      -1,   441,    -1,   443,   444,    -1,   446,   447,   448,    -1,
     450,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,
     470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,
      -1,   481,    -1,   483,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,
     510,   511,   512,    -1,    -1,   515,   516,    -1,   518,   519,
     520,   521,   522,   523,    -1,    -1,   526,   527,   528,   529,
      -1,   531,   532,    -1,    -1,   535,   536,   537,   538,    -1,
      -1,   541,   542,    -1,   544,   545,   546,   547,    -1,    -1,
      -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,   566,   567,    -1,   569,
     570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,
     580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,
      -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,   599,
      -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,
     610,   611,    -1,    -1,   614,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,   632,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,   540,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,    -1,   614,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,   632,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,    -1,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,   406,   407,
      -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,
     418,   419,   420,   421,   422,    -1,    -1,   425,   426,   427,
     428,   429,    -1,   431,   432,    -1,   434,   435,   436,    -1,
      -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,   447,
     448,    -1,   450,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,   466,    -1,
      -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,
      -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,
      -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,
     518,   519,   520,   521,   522,   523,    -1,    -1,   526,   527,
     528,   529,    -1,   531,   532,    -1,    -1,   535,   536,   537,
     538,    -1,   540,   541,   542,    -1,   544,   545,   546,   547,
      -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
      -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,
     578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,
     588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,
     598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,
      -1,   609,   610,   611,    -1,    -1,   614,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,   632,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
      -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,    -1,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,    -1,   614,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,   632,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
      -1,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
     406,   407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,
      -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,   425,
     426,   427,   428,   429,    -1,   431,   432,    -1,   434,   435,
     436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,
     446,   447,   448,    -1,   450,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
     466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,
      -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,
      -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,
     516,    -1,   518,   519,   520,   521,   522,   523,    -1,    -1,
     526,   527,   528,   529,    -1,   531,   532,    -1,    -1,   535,
     536,   537,   538,    -1,   540,   541,   542,    -1,   544,   545,
     546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
     566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,
     576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,
      -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,
     596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,
     606,   607,    -1,   609,   610,   611,    -1,    -1,   614,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   632,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,    -1,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,   614,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,   632,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,
     204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,   406,   407,    -1,   409,   410,   411,    -1,    -1,
     414,    -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,
      -1,   425,   426,   427,   428,   429,    -1,   431,   432,    -1,
     434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,
     444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,   473,
      -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,
     484,   485,   486,    -1,   488,   489,   490,   491,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,
     504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,
      -1,   515,   516,    -1,   518,   519,   520,   521,   522,   523,
      -1,    -1,   526,   527,   528,   529,    -1,   531,   532,    -1,
      -1,   535,   536,   537,   538,    -1,    -1,   541,   542,    -1,
     544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,
     554,    -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,
      -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,
      -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,
      -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,    -1,
     614,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,   632,    22,
      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      -1,    74,    -1,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,    -1,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,   244,    -1,    -1,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,   277,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   378,   379,    -1,    -1,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,    -1,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,    -1,
      -1,   434,    -1,   436,   437,    -1,   439,    -1,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,    -1,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,    -1,   462,
     463,    -1,   465,    -1,    -1,    -1,    -1,   470,   471,   472,
      -1,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
      -1,   484,    -1,   486,    -1,   488,    -1,    -1,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,
      -1,    -1,    -1,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   576,    -1,    -1,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,   602,
      -1,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,   627,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,    -1,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,   620,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
      -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,    -1,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,   620,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,    -1,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,   620,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,    -1,    -1,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,   620,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,   179,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,    -1,    -1,   356,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,   432,
      -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,
     443,   444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,
     473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
     483,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
      -1,    -1,   495,   496,   497,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,
      -1,    -1,   515,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,   558,   559,   560,   561,   562,
     563,   564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,
     573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
     155,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,   476,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,   540,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
      -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,   540,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,   356,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,   380,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,    -1,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,
     559,   560,   561,   562,   563,   564,    -1,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,    -1,    -1,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,   540,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    99,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,   432,
      -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,
     443,   444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,
     473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
     483,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,
      -1,    -1,   515,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,   540,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,
     573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,   540,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    35,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
      -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,   540,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
     259,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,   540,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,   259,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,    -1,    -1,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,   540,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,   432,
      -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,
     443,   444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,
     473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
     483,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,
      -1,    -1,   515,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,   540,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,
     573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    18,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,   540,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
     167,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
      -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,    -1,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,   496,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,    -1,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,   187,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,    -1,    -1,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,   432,
      -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,
     443,   444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,
     473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
     483,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,
      -1,    -1,   515,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,
     573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,    -1,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
      -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,    -1,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,    -1,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,    -1,    -1,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,    -1,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,   432,
      -1,   434,   435,   436,    -1,    -1,   439,    -1,   441,    -1,
     443,   444,    -1,   446,   447,   448,    -1,   450,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,   466,    -1,    -1,    -1,   470,   471,   472,
     473,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
     483,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,   511,   512,
      -1,    -1,   515,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,   569,   570,    -1,    -1,
     573,    -1,    -1,   576,    -1,   578,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,   607,    -1,   609,   610,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,   432,    -1,   434,
     435,   436,    -1,    -1,   439,    -1,   441,    -1,   443,   444,
      -1,   446,   447,   448,    -1,   450,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,   466,    -1,    -1,    -1,   470,   471,   472,   473,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,   483,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,   511,   512,    -1,    -1,
     515,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,    -1,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,   569,   570,    -1,    -1,   573,    -1,
      -1,   576,    -1,   578,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,    -1,    -1,    -1,
      -1,   606,   607,    -1,   609,   610,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,   432,    -1,   434,   435,   436,
      -1,    -1,   439,    -1,   441,    -1,   443,   444,    -1,   446,
     447,   448,    -1,   450,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,   466,
      -1,    -1,    -1,   470,   471,   472,   473,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,   483,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,   511,   512,    -1,    -1,   515,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,   540,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,   569,   570,    -1,    -1,   573,    -1,    -1,   576,
      -1,   578,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,    -1,    -1,    -1,    -1,   606,
     607,    -1,   609,   610,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,   432,    -1,   434,   435,   436,    -1,    -1,
     439,    -1,   441,    -1,   443,   444,    -1,   446,   447,   448,
      -1,   450,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,   466,    -1,    -1,
      -1,   470,   471,   472,   473,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,   483,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,   511,   512,    -1,    -1,   515,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,    -1,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
     569,   570,    -1,    -1,   573,    -1,    -1,   576,    -1,   578,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,    -1,    -1,    -1,    -1,   606,   607,    -1,
     609,   610,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,    -1,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,   432,    -1,   434,   435,   436,    -1,    -1,   439,    -1,
     441,    -1,   443,   444,    -1,   446,   447,   448,    -1,   450,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,   466,    -1,    -1,    -1,   470,
     471,   472,   473,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,   483,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
     511,   512,    -1,    -1,   515,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,   569,   570,
      -1,    -1,   573,    -1,    -1,   576,    -1,   578,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,    -1,    -1,    -1,    -1,   606,   607,    -1,   609,   610,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    22,
      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      -1,    74,    -1,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,   145,   146,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,   244,    -1,    -1,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,   277,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   378,   379,    -1,    -1,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,    -1,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,    -1,
      -1,   434,    -1,   436,   437,    -1,   439,    -1,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,    -1,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,    -1,   462,
     463,    -1,   465,    -1,    -1,    -1,    -1,   470,   471,   472,
      -1,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
      -1,   484,    -1,   486,    -1,   488,    -1,    -1,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,
      -1,    -1,    -1,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   576,    -1,    -1,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,   602,
      -1,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
     145,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,   244,
      -1,    -1,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,   277,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   378,   379,    -1,    -1,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,    -1,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,    -1,    -1,   434,
      -1,   436,   437,    -1,   439,    -1,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,    -1,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,    -1,   462,   463,    -1,
     465,    -1,    -1,    -1,    -1,   470,   471,   472,    -1,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,    -1,   484,
      -1,   486,    -1,   488,    -1,    -1,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,    -1,
      -1,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,    -1,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,    -1,    -1,    -1,    -1,   573,    -1,
      -1,   576,    -1,    -1,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,   600,    -1,   602,    -1,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
      27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    -1,    74,    -1,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,    -1,    -1,    -1,   141,   142,   143,    -1,   145,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,   210,    -1,    -1,    -1,   214,   215,   216,
     217,   218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,   244,    -1,    -1,
     247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
     277,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   378,   379,    -1,    -1,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,    -1,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,    -1,    -1,   434,    -1,   436,
     437,    -1,   439,    -1,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,    -1,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,    -1,   462,   463,    -1,   465,    -1,
      -1,    -1,    -1,   470,   471,   472,    -1,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,    -1,   484,    -1,   486,
      -1,   488,    -1,    -1,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,    -1,   512,    -1,    -1,    -1,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,    -1,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,
      -1,    -1,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,   600,    -1,   602,    -1,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    -1,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
      -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    -1,    74,    -1,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    -1,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,   214,   215,   216,   217,   218,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,   244,    -1,    -1,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,   277,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,
     379,    -1,    -1,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,    -1,    -1,    -1,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,    -1,    -1,   434,    -1,   436,   437,    -1,
     439,    -1,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,    -1,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,    -1,   462,   463,    -1,   465,    -1,    -1,    -1,
      -1,   470,   471,   472,    -1,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,    -1,   484,    -1,   486,    -1,   488,
      -1,    -1,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,    -1,    -1,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,    -1,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,    -1,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
      -1,    -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,   602,    -1,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    22,    23,    24,    25,    26,    27,    -1,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,
      51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    -1,    74,    -1,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    -1,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
      -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,   244,    -1,    -1,   247,    -1,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,   277,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,    -1,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,    -1,
      -1,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,    -1,    -1,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,    -1,    -1,   434,    -1,   436,   437,    -1,   439,    -1,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
      -1,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
      -1,   462,   463,    -1,   465,    -1,    -1,    -1,    -1,   470,
     471,   472,    -1,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,    -1,   484,    -1,   486,    -1,   488,    -1,    -1,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
      -1,   512,    -1,    -1,    -1,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,    -1,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,    -1,    -1,
      -1,    -1,   573,    -1,    -1,   576,    -1,    -1,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,   602,    -1,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    22,
      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      -1,    74,    -1,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,   244,    -1,    -1,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,   277,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   378,   379,    -1,    -1,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,    -1,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,    -1,
      -1,   434,    -1,   436,   437,    -1,   439,    -1,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,    -1,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,    -1,   462,
     463,    -1,   465,    -1,    -1,    -1,    -1,   470,   471,   472,
      -1,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
      -1,   484,    -1,   486,    -1,   488,    -1,    -1,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,
      -1,    -1,    -1,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   576,    -1,    -1,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,   602,
      -1,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
       5,   614,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,   244,
      -1,    -1,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,   277,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   378,   379,    -1,    -1,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,    -1,    -1,   398,   399,    -1,   401,    -1,   403,   404,
     405,   406,   407,    -1,   409,   410,   411,    -1,    -1,   414,
      -1,    -1,    -1,   418,   419,   420,   421,   422,    -1,    -1,
     425,   426,   427,   428,   429,    -1,   431,    -1,    -1,   434,
      -1,   436,   437,    -1,   439,    -1,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,    -1,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,    -1,   462,   463,    -1,
     465,    -1,    -1,    -1,    -1,   470,   471,   472,    -1,    -1,
      -1,    -1,   477,    -1,    -1,    -1,   481,    -1,    -1,   484,
      -1,   486,    -1,   488,    -1,    -1,   491,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,   502,    -1,   504,
      -1,    -1,   507,    -1,    -1,   510,    -1,   512,    -1,    -1,
      -1,   516,    -1,   518,   519,   520,   521,   522,   523,    -1,
      -1,   526,   527,   528,   529,    -1,   531,   532,    -1,    -1,
     535,   536,   537,   538,    -1,    -1,   541,   542,    -1,   544,
     545,   546,   547,    -1,    -1,    -1,    -1,    -1,   553,   554,
      -1,    -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,
      -1,   566,   567,    -1,    -1,    -1,    -1,    -1,   573,    -1,
      -1,   576,    -1,    -1,    -1,   580,   581,    -1,    -1,    -1,
      -1,    -1,    -1,   588,    -1,    -1,   591,    -1,    -1,    -1,
     595,   596,   597,   598,   599,    -1,    -1,   602,    -1,    -1,
      -1,   606,    -1,    -1,   609,    -1,   611,    -1,     5,   614,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
      27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    -1,    74,    -1,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,   210,    -1,    -1,    -1,   214,   215,   216,
     217,   218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,   244,    -1,    -1,
     247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
     277,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   378,   379,    -1,    -1,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,    -1,
      -1,   398,   399,    -1,   401,    -1,   403,   404,   405,   406,
     407,    -1,   409,   410,   411,    -1,    -1,   414,    -1,    -1,
      -1,   418,   419,   420,   421,   422,    -1,    -1,   425,   426,
     427,   428,   429,    -1,   431,    -1,    -1,   434,    -1,   436,
     437,    -1,   439,    -1,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,    -1,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,    -1,   462,   463,    -1,   465,    -1,
      -1,    -1,    -1,   470,   471,   472,    -1,    -1,    -1,    -1,
     477,    -1,    -1,    -1,   481,    -1,    -1,   484,    -1,   486,
      -1,   488,    -1,    -1,   491,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,   502,    -1,   504,    -1,    -1,
     507,    -1,    -1,   510,    -1,   512,    -1,    -1,    -1,   516,
      -1,   518,   519,   520,   521,   522,   523,    -1,    -1,   526,
     527,   528,   529,    -1,   531,   532,    -1,    -1,   535,   536,
     537,   538,    -1,    -1,   541,   542,    -1,   544,   545,   546,
     547,    -1,    -1,    -1,    -1,    -1,   553,   554,    -1,    -1,
      -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,   566,
     567,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,
      -1,    -1,    -1,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,   588,    -1,    -1,   591,    -1,    -1,    -1,   595,   596,
     597,   598,   599,    -1,    -1,   602,    -1,    -1,    -1,   606,
      -1,    -1,   609,    -1,   611,    -1,     5,   614,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    -1,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
      -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    -1,    74,    -1,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    -1,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
      -1,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,   214,   215,   216,   217,   218,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,   244,    -1,    -1,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,   277,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,
     379,    -1,    -1,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,    -1,    -1,    -1,    -1,   398,
     399,    -1,   401,    -1,   403,   404,   405,   406,   407,    -1,
     409,   410,   411,    -1,    -1,   414,    -1,    -1,    -1,   418,
     419,   420,   421,   422,    -1,    -1,   425,   426,   427,   428,
     429,    -1,   431,    -1,    -1,   434,    -1,   436,   437,    -1,
     439,    -1,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,    -1,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,    -1,   462,   463,    -1,   465,    -1,    -1,    -1,
      -1,   470,   471,   472,    -1,    -1,    -1,    -1,   477,    -1,
      -1,    -1,   481,    -1,    -1,   484,    -1,   486,    -1,   488,
      -1,    -1,   491,   492,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   501,   502,    -1,   504,    -1,    -1,   507,    -1,
      -1,   510,    -1,   512,    -1,    -1,    -1,   516,    -1,   518,
     519,   520,   521,   522,   523,    -1,    -1,   526,   527,   528,
     529,    -1,   531,   532,    -1,    -1,   535,   536,   537,   538,
      -1,    -1,   541,   542,    -1,   544,   545,   546,   547,    -1,
      -1,    -1,    -1,    -1,   553,   554,    -1,    -1,    -1,    -1,
     559,   560,   561,    -1,   563,   564,    -1,   566,   567,    -1,
      -1,    -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,
      -1,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,   588,
      -1,    -1,   591,    -1,    -1,    -1,   595,   596,   597,   598,
     599,    -1,    -1,   602,    -1,    -1,    -1,   606,    -1,    -1,
     609,    -1,   611,    -1,     5,   614,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    22,    23,    24,    25,    26,    27,    -1,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,
      51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    -1,    74,    -1,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    -1,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,    -1,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
      -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,   244,    -1,    -1,   247,    -1,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,   277,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,    -1,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,    -1,
      -1,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,    -1,    -1,    -1,   398,   399,    -1,
     401,    -1,   403,   404,   405,   406,   407,    -1,   409,   410,
     411,    -1,    -1,   414,    -1,    -1,    -1,   418,   419,   420,
     421,   422,    -1,    -1,   425,   426,   427,   428,   429,    -1,
     431,    -1,    -1,   434,    -1,   436,   437,    -1,   439,    -1,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
      -1,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
      -1,   462,   463,    -1,   465,    -1,    -1,    -1,    -1,   470,
     471,   472,    -1,    -1,    -1,    -1,   477,    -1,    -1,    -1,
     481,    -1,    -1,   484,    -1,   486,    -1,   488,    -1,    -1,
     491,   492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     501,   502,    -1,   504,    -1,    -1,   507,    -1,    -1,   510,
      -1,   512,    -1,    -1,    -1,   516,    -1,   518,   519,   520,
     521,   522,   523,    -1,    -1,   526,   527,   528,   529,    -1,
     531,   532,    -1,    -1,   535,   536,   537,   538,    -1,    -1,
     541,   542,    -1,   544,   545,   546,   547,    -1,    -1,    -1,
      -1,    -1,   553,   554,    -1,    -1,    -1,    -1,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,    -1,    -1,    -1,
      -1,    -1,   573,    -1,    -1,   576,    -1,    -1,    -1,   580,
     581,    -1,    -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,
     591,    -1,    -1,    -1,   595,   596,   597,   598,   599,    -1,
      -1,   602,    -1,    -1,    -1,   606,    -1,    -1,   609,    -1,
     611,    -1,     5,   614,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    22,
      23,    24,    25,    26,    27,    -1,    -1,    -1,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    -1,    66,    67,    -1,    69,    70,    -1,    72,
      -1,    74,    -1,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,    -1,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   378,   379,    -1,    -1,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,    -1,    -1,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,    -1,
      -1,   414,    -1,    -1,    -1,   418,   419,   420,   421,   422,
      -1,    -1,   425,   426,   427,   428,   429,    -1,   431,    -1,
      -1,   434,    -1,   436,    -1,    -1,   439,    -1,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,    -1,   450,    -1,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,    -1,   462,
     463,    -1,   465,    -1,    -1,    -1,    -1,   470,   471,   472,
      -1,    -1,    -1,    -1,   477,    -1,    -1,    -1,   481,    -1,
      -1,   484,    -1,   486,    -1,   488,    -1,    -1,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,   502,
      -1,   504,    -1,    -1,   507,    -1,    -1,   510,    -1,   512,
      -1,    -1,    -1,   516,    -1,   518,   519,   520,   521,   522,
     523,    -1,    -1,   526,   527,   528,   529,    -1,   531,   532,
      -1,    -1,   535,   536,   537,   538,    -1,    -1,   541,   542,
      -1,   544,   545,   546,   547,    -1,    -1,    -1,    -1,    -1,
     553,   554,    -1,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,   566,   567,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   576,    -1,    -1,    -1,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,   588,    -1,    -1,   591,    -1,
      -1,    -1,   595,   596,   597,   598,   599,    -1,    -1,    -1,
      -1,    -1,    -1,   606,    -1,    -1,   609,    -1,   611,    -1,
      -1,   614
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    14,    30,    34,    48,    49,    56,    60,    61,
      75,    94,   116,   125,   126,   127,   138,   139,   151,   165,
     181,   196,   198,   203,   206,   229,   231,   249,   266,   270,
     366,   383,   397,   408,   430,   433,   435,   438,   441,   442,
     451,   453,   461,   467,   475,   480,   482,   511,   515,   558,
     570,   574,   577,   582,   610,   625,   636,   639,   640,   641,
     642,   643,   645,   650,   652,   659,   689,   717,   724,   725,
     842,  1006,  1044,  1046,  1060,  1063,  1068,  1070,  1071,  1076,
    1079,  1084,  1091,  1103,  1104,  1261,  1263,  1277,  1280,  1305,
    1313,  1324,  1331,  1345,  1349,  1352,  1361,  1367,  1371,  1373,
    1374,  1426,  1453,  1459,  1461,  1468,  1470,  1496,  1502,  1503,
    1504,  1505,  1558,  1566,  1567,    11,   103,   122,   190,   219,
     271,   402,   473,   532,  1040,  1527,  1528,  1529,  1532,   267,
     354,  1078,  1497,   540,  1417,   223,     5,     7,     8,     9,
      10,    11,    17,    20,    22,    23,    24,    25,    26,    27,
      28,    30,    34,    38,    41,    42,    43,    45,    47,    48,
      51,    54,    55,    57,    58,    60,    62,    63,    64,    65,
      66,    67,    69,    70,    72,    73,    74,    75,    76,    77,
      78,    79,    81,    82,    84,    85,    86,    87,    88,    90,
      93,    96,    98,   101,   105,   106,   107,   110,   115,   116,
     121,   122,   124,   128,   130,   131,   132,   133,   134,   138,
     141,   142,   143,   147,   149,   150,   152,   153,   154,   157,
     158,   160,   161,   162,   163,   164,   165,   168,   169,   170,
     173,   174,   176,   177,   178,   181,   185,   186,   188,   190,
     192,   193,   194,   195,   197,   199,   203,   204,   206,   209,
     210,   214,   215,   216,   217,   220,   221,   222,   225,   230,
     231,   235,   239,   240,   242,   243,   247,   250,   251,   254,
     257,   258,   264,   265,   267,   269,   271,   272,   280,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   300,   301,   302,   304,
     305,   306,   307,   309,   310,   315,   316,   317,   318,   319,
     320,   323,   324,   326,   328,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   341,   342,   345,   346,   347,   348,
     352,   353,   357,   359,   360,   361,   363,   364,   365,   367,
     377,   378,   379,   381,   382,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   397,   398,   399,   401,
     403,   404,   405,   406,   407,   409,   410,   411,   414,   418,
     419,   420,   421,   422,   425,   426,   427,   428,   429,   431,
     432,   434,   435,   436,   439,   441,   443,   444,   446,   447,
     448,   450,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   465,   466,   470,   471,   472,   473,   477,
     481,   483,   484,   485,   486,   488,   489,   490,   491,   492,
     501,   502,   504,   507,   510,   511,   512,   515,   516,   518,
     519,   520,   521,   522,   523,   526,   527,   528,   529,   531,
     532,   535,   536,   537,   538,   541,   542,   544,   545,   546,
     547,   553,   554,   558,   559,   560,   561,   563,   564,   566,
     567,   569,   570,   573,   576,   578,   580,   581,   588,   591,
     595,   596,   597,   598,   599,   606,   607,   609,   610,   611,
     614,   683,  1415,  1420,  1424,  1425,   300,   531,   534,  1455,
    1455,   606,  1498,   103,   189,   271,   473,   493,   532,   537,
     572,   580,   665,   666,   893,   894,   895,   984,   985,   986,
    1314,  1262,   103,   162,   190,   223,   271,   402,   473,   532,
     537,   555,   580,   595,  1273,  1420,  1078,    98,   726,   682,
     633,  1412,  1414,  1420,   651,  1278,   390,    81,   410,  1372,
     106,   223,   611,  1379,  1455,  1078,   843,  1420,  1368,   461,
     580,  1455,  1078,  1281,  1362,   496,   714,   718,   719,  1420,
     682,  1498,  1420,  1107,  1109,  1110,  1427,  1332,   718,   485,
     553,   485,   534,  1326,   390,  1460,  1306,  1420,    30,    75,
     149,   397,   419,   453,   511,  1560,   467,   625,  1105,     0,
     151,   637,   397,   169,   185,   384,  1350,  1412,  1420,   155,
    1017,  1420,   155,   683,   200,   683,   259,  1417,  1420,  1422,
     790,   791,   794,   817,  1420,   534,   162,  1012,  1527,  1455,
    1498,  1085,   690,   633,   551,  1061,  1072,    16,  1499,   218,
     896,   200,  1422,   792,   817,   682,   373,  1524,  1528,  1529,
    1530,  1531,  1532,   534,   894,   223,   223,   223,   219,   278,
     411,  1322,  1323,     7,    20,    27,    33,    35,    36,    37,
      39,    52,    53,    58,    59,    66,    69,    87,    91,    92,
      97,    99,   102,   103,   108,   109,   110,   115,   117,   120,
     166,   171,   172,   179,   185,   193,   195,   201,   207,   214,
     218,   229,   232,   256,   264,   275,   303,   308,   319,   323,
     325,   329,   330,   331,   332,   333,   340,   349,   350,   351,
     355,   356,   361,   380,   386,   392,   393,   395,   409,   437,
     438,   450,   452,   458,   459,   465,   513,   514,   520,   524,
     525,   530,   540,   544,   545,   546,   547,   556,   557,   558,
     562,   565,   580,   584,   585,   586,   587,   592,   594,   598,
     599,   614,   618,   619,   624,   625,   628,   629,   632,   633,
     945,  1124,  1125,  1126,  1127,  1131,  1134,  1135,  1136,  1137,
    1138,  1139,  1147,  1151,  1161,  1398,  1400,  1402,  1403,  1404,
    1408,  1410,  1415,  1420,   218,  1272,  1272,  1272,  1420,   200,
    1272,  1272,   817,  1272,   682,  1272,  1455,   646,  1353,   130,
      12,    13,    94,   125,   139,   162,   165,   176,   198,   223,
     229,   270,   403,   407,   423,   431,   439,   467,   480,   481,
     526,   555,   577,   579,  1471,  1473,  1475,  1476,  1420,   365,
      65,   415,   633,  1422,   123,   208,   278,  1283,  1420,  1124,
     233,  1375,  1454,  1455,    46,   844,   187,    33,   300,  1337,
    1369,  1420,   682,  1080,  1455,   123,   278,  1284,  1312,   300,
     410,   485,  1363,  1364,   588,   715,   475,   720,    12,   407,
    1469,  1473,   551,  1499,  1108,    12,   135,   208,   500,   501,
     502,   503,   504,   505,   517,  1114,  1115,  1116,  1523,    58,
      59,   120,   197,   267,   336,   386,   472,   553,   632,   947,
    1420,  1428,  1440,  1444,  1445,    23,    34,    58,    69,    90,
      92,    94,   104,   153,   158,   161,   188,   190,   197,   199,
     222,   223,   246,   267,   300,   365,   391,   401,   402,   405,
     406,   426,   472,   485,   516,   534,   597,   947,   983,  1333,
    1337,  1338,  1340,  1441,   720,   429,   507,  1055,  1056,  1057,
     415,   603,  1047,  1048,  1049,  1055,  1325,  1420,  1455,  1312,
      35,   207,   540,  1399,  1418,  1559,  1559,  1559,  1559,  1559,
    1109,  1105,   626,   631,  1420,   155,  1347,  1346,   317,   538,
     564,  1008,   578,    99,  1422,  1423,  1010,   796,   818,  1420,
    1009,   367,     6,    56,   139,   350,   414,   416,   819,  1412,
     683,   506,  1533,  1534,  1011,  1069,  1086,  1087,  1088,  1089,
    1412,   625,   691,  1420,   653,  1267,  1268,  1412,  1267,    55,
     352,   352,   430,  1500,   349,   350,  1130,  1420,   795,   818,
     183,     6,  1423,  1486,  1487,   438,    10,   402,   555,   669,
    1120,  1526,  1534,  1542,  1546,  1547,  1553,   669,  1120,  1525,
    1534,  1542,  1547,  1553,  1527,  1532,   896,  1420,  1420,  1420,
     187,  1315,  1319,  1320,  1420,  1322,   625,   625,   625,  1134,
     625,   625,   625,  1124,  1164,   625,   625,   625,   625,   625,
     625,   625,   625,   625,  1123,  1123,   625,   934,   625,   625,
     625,   540,   625,   625,   625,   625,   625,   625,   625,   625,
     625,   625,   625,   625,   625,  1124,   625,   625,   625,  1162,
    1163,  1408,  1420,   625,   625,   625,   625,   625,   625,   625,
     625,   625,  1124,   934,   625,   625,   625,   625,   625,   625,
     625,   625,   625,   625,   625,   625,   625,   625,   625,   625,
     625,   625,   934,   540,   625,   625,   625,   540,   625,   625,
     625,    35,   207,   540,   625,  1123,   934,   934,   625,   625,
     625,   625,   625,   625,  1134,  1134,  1134,  1124,  1518,  1519,
    1420,  1152,  1420,    15,    16,   370,   373,   612,  1128,  1129,
     155,   156,   191,   202,   241,   252,   279,   343,  1132,    31,
     136,   236,   260,   329,   424,   478,   479,   491,   616,   617,
     618,   619,   620,   621,   622,   623,  1130,  1134,    68,   372,
     627,  1418,   625,   633,   166,  1420,   683,  1420,   362,   818,
     683,  1422,   353,   596,   828,   829,  1274,  1275,  1276,  1338,
     683,  1423,  1485,  1266,  1272,   583,   647,    33,   128,   153,
     157,   192,   210,   272,   401,   410,   425,   443,   486,   512,
    1354,  1358,  1359,  1455,    80,   632,   727,   728,   729,   730,
    1420,   401,  1474,   455,   455,   532,   537,   580,   595,   368,
    1478,   531,   362,  1480,    64,   485,  1477,   104,   595,  1479,
     362,   627,    18,   155,  1216,  1217,  1462,  1420,  1040,   490,
      48,    79,   278,  1381,  1412,  1456,  1457,  1077,   262,   265,
     412,   845,   847,   632,   644,  1417,   272,  1081,  1423,  1082,
    1083,  1412,  1064,   233,  1269,  1285,  1286,  1412,    48,  1365,
     627,  1418,    54,    63,    72,    84,    85,    86,   101,   318,
     335,   463,   519,   536,   721,   723,  1474,   362,   362,   461,
    1501,  1500,   571,  1506,  1507,   620,  1118,  1119,  1120,  1116,
     475,   633,    33,   120,   155,   476,   948,   949,  1296,  1422,
     184,  1296,  1430,   632,  1422,    33,   120,   951,   952,  1422,
     633,  1431,  1429,  1296,   161,   260,   601,  1344,   625,   103,
     162,   190,   402,   534,   555,   595,  1344,    12,   905,  1422,
     261,  1235,  1237,   187,   236,  1339,  1341,    67,   512,   184,
     512,   531,    67,   512,    12,    41,    88,    93,   240,   316,
     379,   492,   528,  1327,  1328,  1329,   161,   210,   512,   512,
    1235,  1344,  1341,   272,   152,    70,   404,   531,   554,   512,
     591,  1045,   627,   364,   608,    82,   627,  1268,  1040,   627,
     363,  1562,   527,  1563,   245,   446,  1561,   626,  1507,  1509,
    1511,  1512,   151,   638,  1422,  1103,  1277,  1280,  1305,  1313,
    1348,  1351,  1399,  1420,   120,   891,   892,   902,   903,   956,
     106,  1123,   632,   684,     6,   797,   684,   625,   105,   814,
     814,   814,     4,  1007,  1013,   466,   595,  1534,  1267,   236,
     627,   383,  1097,  1099,  1100,   692,   693,  1124,   220,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   301,   302,
     427,   428,   654,   655,   658,   169,   411,   627,  1062,    57,
     169,   173,   184,   315,   411,  1073,  1074,  1075,    55,   430,
     166,   664,   797,   106,   814,   216,   627,  1120,  1120,  1120,
     162,   190,   190,  1534,  1412,   987,   988,   987,   987,  1270,
    1271,  1412,  1413,  1420,   627,  1317,   633,  1321,  1124,  1124,
      12,   135,  1157,  1218,  1157,  1157,  1157,   600,  1166,  1124,
    1124,  1161,  1161,  1124,  1124,  1124,   135,  1157,  1218,   626,
     356,   626,   626,  1124,  1124,  1124,  1124,  1408,  1518,   111,
     112,   113,   114,   115,   211,   212,   213,   214,   319,   321,
     322,   323,   330,   409,   464,   465,   598,   613,   614,  1213,
    1214,  1124,  1161,   107,   110,   544,   547,  1215,   135,  1154,
    1124,  1124,  1124,  1124,  1213,  1124,  1161,  1163,     9,   627,
     633,   135,  1157,  1124,  1124,   135,  1157,  1124,  1124,  1161,
    1161,  1161,  1124,  1124,  1124,  1161,  1127,  1124,  1124,  1124,
    1124,  1124,  1124,   626,  1124,  1157,  1157,  1124,  1124,   135,
    1157,  1124,  1214,  1214,  1124,    44,   253,   552,  1124,  1124,
     626,  1409,  1410,  1420,  1157,  1157,  1124,  1124,  1124,   626,
     627,   626,   467,   625,  1515,  1516,  1124,   632,  1153,  1422,
     633,  1124,  1124,  1124,  1126,   172,   355,   557,   573,  1130,
      12,    17,  1126,  1133,  1127,  1127,   625,  1134,  1127,  1127,
    1127,  1127,   260,  1127,  1127,   232,  1127,   232,  1127,  1127,
    1127,  1127,  1127,    31,   236,   260,   424,  1422,  1134,  1124,
    1140,  1420,   633,  1412,  1274,   627,  1276,   153,   627,  1267,
    1264,   632,   648,   649,   272,   272,   272,   272,    48,   272,
     272,   627,  1355,   110,   544,   547,   722,   732,  1151,  1402,
    1408,  1422,   627,   155,   531,   625,  1488,  1423,  1488,  1488,
    1488,   190,   402,   534,  1472,  1476,  1420,   177,   346,  1420,
    1463,  1464,  1285,  1417,  1092,   267,  1380,  1217,   627,  1267,
      70,   625,   851,   852,   851,   852,   384,   854,   204,   248,
    1422,    29,   551,  1370,   627,   551,   627,   551,  1267,  1286,
    1282,   383,  1180,  1181,    12,  1366,  1364,   627,   155,   627,
    1423,   190,   402,  1472,  1420,    12,   135,  1514,   627,  1111,
    1124,  1406,  1420,  1420,    68,   954,  1124,  1423,   361,   386,
     540,  1451,   242,   415,  1446,  1447,  1448,  1449,   197,   267,
     472,  1442,  1296,  1420,   553,  1432,  1443,  1445,   627,  1434,
      12,    33,   120,   362,  1124,  1452,   236,  1342,  1417,  1124,
     620,   896,   683,   683,   683,  1412,   683,  1412,   272,   334,
     512,  1336,  1336,   275,   356,   562,  1238,  1239,  1400,  1420,
    1344,  1420,   683,  1344,  1423,  1339,   683,  1344,   239,   529,
     174,   184,  1330,   627,  1342,  1339,  1412,  1341,  1339,  1339,
    1344,  1344,   576,  1058,  1057,   488,  1049,   467,   625,   629,
    1167,  1168,  1169,  1170,  1171,  1182,  1183,  1197,  1399,   388,
    1564,   371,  1231,  1237,  1513,   892,    68,   947,   131,  1422,
      73,    87,   250,   327,   352,   413,   506,   686,   688,   420,
     566,   815,   816,   225,   811,   812,   813,   820,   828,   829,
     103,   209,   377,   386,   394,   489,   580,   667,   668,  1417,
      24,   307,   805,   806,   807,   820,   821,   822,   828,   829,
     798,   799,   805,     6,    11,    13,    14,    25,    26,    56,
      60,    61,    66,    73,    81,    91,   106,   124,   132,   133,
     139,   147,   153,   164,   182,   221,   223,   230,   247,   270,
     306,   324,   328,   366,   371,   378,   383,   386,   387,   418,
     432,   433,   434,   435,   457,   516,   532,   535,   558,   571,
     839,   898,   900,   902,   903,  1018,  1022,  1024,  1027,  1033,
    1034,  1035,  1227,   362,   677,  1014,   122,   235,  1412,   120,
    1090,  1420,  1088,  1412,   841,  1099,   223,   248,   981,  1101,
     626,   627,   155,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   627,  1268,   578,  1074,
     890,   891,    73,   347,   421,   567,   808,   809,   810,   820,
     824,   825,   826,   827,   828,   829,   607,   582,   793,    46,
     603,  1487,   190,   683,   683,   896,   683,  1420,   660,   560,
     583,   995,   362,   362,   362,   627,  1318,  1180,   633,  1321,
    1320,   187,   620,  1420,   627,   626,  1157,   626,  1158,   626,
     626,   626,  1124,   145,   600,  1165,    18,   626,   583,   626,
     626,   626,   627,   583,   627,  1148,   626,   620,   626,   627,
     627,   626,   626,   626,   626,   187,   627,   626,   627,  1150,
     626,   627,   627,   627,   619,   627,   626,   626,   625,  1408,
    1420,  1157,   626,   626,   626,  1157,   626,   627,   626,   626,
     626,   626,   626,   626,   627,   626,   236,   626,   627,   627,
     626,   627,   627,   626,   626,   626,   627,   187,   627,  1157,
     626,   626,   627,   627,   627,   626,   187,  1124,   187,  1124,
     187,  1124,   187,   626,   627,   626,   626,   626,   626,   627,
      18,   258,   627,   971,   626,  1161,  1187,  1188,  1189,   467,
     625,  1106,  1510,  1511,   571,  1520,   630,  1442,   476,  1420,
     172,   355,   557,   573,   625,    16,  1124,  1518,   160,  1223,
    1127,  1124,  1124,  1127,   625,  1134,  1127,  1120,  1144,  1145,
    1146,   625,   633,  1420,  1265,  1276,  1296,  1297,  1423,    50,
     445,  1041,  1267,  1422,   627,  1359,  1267,  1360,   730,   733,
     734,   729,   357,   459,   731,  1420,  1489,  1490,   551,   620,
    1412,  1420,  1484,  1484,  1484,   155,   177,   191,   202,   251,
     252,   279,   346,   399,  1465,  1467,   601,  1219,  1279,  1093,
    1094,  1095,  1096,  1412,   224,   278,   415,   608,  1458,  1457,
     625,  1120,   117,   179,   207,   275,   356,   562,  1242,  1245,
    1246,   523,   855,   846,   625,  1124,  1417,  1423,  1423,  1083,
    1412,   169,   411,   581,  1065,  1066,  1067,   467,   475,   587,
     588,   625,   886,  1287,  1290,   625,   723,   722,   198,   187,
    1484,  1484,  1484,  1508,  1119,   187,   233,  1112,  1113,  1230,
    1231,  1256,  1121,  1121,   633,   120,   953,   955,  1422,  1296,
     625,   625,   258,   364,   608,   627,   627,   633,   633,   633,
    1445,  1124,  1446,  1433,  1296,  1435,  1436,  1417,   187,  1343,
     626,  1420,   360,   627,  1344,   410,  1235,  1329,  1343,  1344,
    1339,  1412,  1344,  1344,   498,   499,   658,  1059,   580,  1050,
    1051,  1196,  1420,    95,   226,   245,   256,   339,   452,   517,
    1179,   475,   627,  1412,  1196,   627,   184,  1565,    46,  1235,
    1297,  1297,   337,  1417,   506,   506,   506,   506,   506,   466,
    1417,  1417,  1297,   627,   813,  1417,  1417,  1417,  1417,   117,
     179,   207,   275,   356,   562,  1241,  1417,  1417,   626,   627,
    1297,  1297,   627,   807,   800,   801,   820,   821,   822,    71,
      83,   383,   914,   917,   918,   979,   981,   985,   986,  1039,
    1297,  1039,   383,  1297,  1297,  1039,  1297,   383,   383,  1297,
    1297,   551,   131,  1297,   246,   532,   183,   383,   400,   981,
    1039,   246,  1297,   383,   532,   131,  1297,  1297,  1297,  1297,
    1297,  1039,   383,    46,  1297,   841,  1297,  1297,   383,   385,
      18,   155,   551,  1043,   383,   383,  1297,   134,   316,  1420,
    1297,   383,  1297,   898,   627,   838,   839,  1022,   625,   633,
     913,   919,  1411,  1420,    77,   462,   433,  1015,  1535,  1098,
     625,  1124,   625,  1241,  1416,  1417,  1241,  1241,  1416,  1416,
     117,   179,   275,   356,   562,  1243,  1416,  1241,  1241,  1416,
    1416,  1416,  1416,  1416,  1416,  1416,  1241,  1241,  1416,  1403,
    1416,  1241,   655,  1297,  1297,  1297,  1297,   627,   810,  1422,
     271,   170,   802,   803,   804,   820,   821,   822,   823,   826,
     827,   828,   829,   386,   540,  1422,  1420,  1554,     8,    29,
     788,   683,   625,   448,   260,   625,   831,   897,   899,   900,
      45,   204,   460,  1000,  1000,  1412,  1412,  1412,  1271,  1420,
     583,  1316,  1420,  1168,   633,  1321,   232,  1124,   626,  1124,
     543,  1124,  1124,   149,    33,    59,   107,   110,   118,   341,
     483,   547,   575,  1159,   948,  1124,   948,  1159,  1161,   626,
     232,   232,  1124,  1124,  1124,  1161,  1124,  1124,  1124,  1124,
    1124,  1127,   626,   626,  1124,  1124,  1124,  1124,  1124,  1124,
    1161,   232,  1124,  1124,  1124,   626,  1124,  1124,  1124,  1124,
     187,  1124,   187,  1124,   187,  1124,  1124,  1124,    33,    59,
     966,   967,   968,   969,   970,  1242,  1241,   626,   626,  1521,
    1522,  1523,  1188,  1106,   626,  1514,  1422,  1124,  1518,  1126,
     626,   627,   626,  1134,  1213,  1213,    16,  1124,  1518,  1223,
    1124,   626,   627,  1160,  1161,  1420,   904,  1422,  1041,   649,
    1356,   155,   627,   626,   627,  1486,   633,   633,   551,   551,
     551,  1466,  1220,  1236,  1237,  1287,   627,  1097,  1099,   540,
    1419,   608,   267,   848,   849,   850,  1420,   860,  1127,    46,
     625,   862,   852,   848,   551,  1066,   887,  1288,   625,  1293,
    1298,  1293,   626,   886,  1289,  1405,  1406,  1409,  1420,  1291,
    1212,  1420,   155,   368,  1486,   187,   187,   187,  1104,   140,
    1168,  1257,   184,   270,  1117,  1256,  1236,  1113,    18,  1122,
    1417,  1420,   620,  1420,  1451,   540,   540,   415,   436,   470,
    1450,  1448,  1447,  1296,  1434,  1452,   627,  1438,  1440,  1444,
    1243,  1334,   158,   597,  1239,  1239,   356,  1335,  1219,  1339,
     155,   155,   627,   155,   386,  1052,  1184,  1191,  1196,  1167,
     245,   245,   374,  1198,   245,   256,   452,  1198,  1182,  1167,
    1308,  1309,  1409,  1169,  1180,  1193,  1194,  1241,   320,  1232,
     955,   949,   106,   106,   122,   235,   215,   830,  1242,   813,
     668,   830,   830,   807,   627,   801,  1003,  1411,  1078,    61,
     183,   400,   572,   916,   980,  1003,   981,   982,   982,   120,
    1420,  1411,  1078,  1243,  1241,  1411,  1241,    12,  1023,  1031,
    1032,  1420,  1078,  1417,  1417,   947,  1297,  1241,   248,  1031,
     248,  1411,  1411,   904,  1032,  1297,   177,   251,   352,   907,
    1241,   120,  1420,  1243,  1243,  1411,  1078,  1228,  1229,  1409,
     120,  1241,   840,  1417,   120,  1241,  1078,   841,  1412,  1078,
    1078,    76,    78,   120,   143,   178,   422,   906,  1241,  1023,
     901,     6,   139,  1035,   910,   911,   912,   913,   914,  1420,
       8,   177,  1042,   423,   915,   916,   973,   920,   633,   350,
     398,    22,   163,   671,   551,   132,   147,   673,   625,  1536,
     625,   400,  1209,  1210,  1211,  1420,   656,   657,  1241,  1417,
    1242,   830,   830,   810,   367,   200,  1297,   627,   804,   540,
      18,   448,   625,   125,   229,   577,   789,   670,  1548,   118,
     234,   417,   518,   909,  1412,   260,   832,   837,   838,   910,
     837,   627,   899,   661,   662,   663,   633,  1168,  1219,  1321,
    1219,  1124,   626,  1124,   543,   625,   938,   939,   939,   625,
     933,   625,   931,   932,   938,   939,   234,   933,   234,   626,
     626,   626,   626,   626,  1149,  1124,  1124,   626,   626,   627,
     626,  1156,  1231,   627,   627,   626,   627,   626,   236,  1141,
    1142,   626,   626,   626,   626,   627,   626,   626,  1124,   626,
     184,   626,   626,   627,   626,   627,   627,   626,  1124,   626,
    1124,   626,  1124,   626,   626,   626,   625,   961,   961,    19,
     126,   450,   618,   963,   964,   965,   627,   627,  1118,  1523,
     626,  1517,   633,  1004,   626,  1161,  1126,   626,   627,   626,
    1121,  1146,   626,   603,  1357,    54,    63,    72,    84,    85,
      86,   101,   318,   335,   447,   463,   519,   536,   735,   734,
    1490,   603,  1493,   620,   620,  1486,  1486,  1486,   625,  1124,
     362,  1303,  1095,  1412,  1099,   219,  1102,  1376,   626,   627,
    1121,   847,   383,   863,   864,   626,  1423,  1114,  1294,  1295,
    1409,  1299,   627,   625,  1290,   626,   626,   627,   633,  1506,
     626,   627,   722,   187,  1486,  1486,  1486,  1219,  1219,   141,
     375,  1252,  1253,  1258,   577,   236,  1417,  1420,   633,   626,
     626,    74,   563,   415,  1452,  1437,  1439,  1235,  1235,  1344,
    1417,  1417,   658,  1417,   155,   121,  1053,   571,   626,  1510,
    1192,   630,   245,  1182,  1198,  1198,   245,   362,   362,   583,
     627,  1307,  1296,  1217,  1114,  1124,  1233,  1407,   801,  1025,
     625,   248,   248,   982,  1003,   988,  1003,  1003,   139,   475,
    1023,  1036,  1020,   627,  1242,   949,  1417,  1003,  1041,   603,
    1417,  1037,  1023,   627,    19,   126,  1234,   844,  1023,  1028,
    1023,   625,   626,   627,  1420,  1412,    32,    33,    38,    40,
      42,    43,    59,   107,   110,   118,   137,   154,   178,   180,
     193,   194,   234,   264,   273,   274,   276,   312,   313,   314,
     331,   332,   333,   338,   341,   358,   359,   392,   393,   417,
     471,   475,   487,   541,   544,   547,   548,   549,   550,   589,
     590,   614,   921,   924,   925,   926,   927,   928,   929,   930,
    1420,   398,  1124,  1124,   362,   677,   683,   362,    73,   678,
    1420,  1537,    18,  1023,   626,   627,   626,   627,   625,  1420,
     830,   804,  1417,   909,  1555,   362,   362,   694,   695,   697,
    1420,   490,  1412,   886,   626,   219,   438,   834,  1382,   899,
     625,   625,   625,  1420,  1219,  1230,  1213,  1124,   117,   275,
     356,   562,    20,    33,    47,   569,   947,   957,   958,   959,
     356,   356,   626,  1213,  1213,  1124,   469,  1155,  1124,  1124,
    1161,    42,   339,   626,   603,  1143,  1124,  1213,  1124,  1124,
    1124,  1124,   626,   626,   626,  1242,   626,   971,   966,   964,
     966,   967,  1241,  1190,  1515,  1420,   626,  1161,  1122,   415,
     198,   440,  1491,  1491,  1491,   120,  1124,  1301,  1302,   142,
    1102,   254,  1382,   850,   626,   204,   248,   865,   626,   627,
    1118,   627,  1296,  1300,  1301,  1298,  1292,  1290,  1405,  1420,
     841,  1420,  1486,  1236,   200,  1224,  1419,  1419,   632,  1254,
    1255,  1422,   477,   620,  1438,  1443,  1417,   155,   389,  1054,
    1514,  1217,  1170,  1167,  1182,   245,   245,  1167,  1182,  1173,
    1172,  1174,  1309,  1219,  1302,  1207,  1208,  1118,   627,  1234,
     384,   625,  1026,  1124,  1003,   988,   625,   987,   987,   120,
     120,   919,  1073,  1032,   954,   534,   921,  1019,  1229,  1029,
    1031,  1021,  1360,   912,   625,   974,   938,   938,   939,   933,
     931,   396,   922,   931,   931,   959,    59,   589,   925,   927,
     959,   959,    59,   590,   590,   593,   931,   923,   939,   933,
     933,   959,   938,   939,    25,    68,    73,   120,   355,   362,
     400,   471,   572,   941,   942,   943,   972,  1130,   593,   938,
     959,    33,   938,   960,   938,   938,   939,   625,   932,   940,
     633,  1213,   485,  1417,   138,  1016,   626,   627,  1538,  1539,
     626,  1210,   657,   667,   490,   227,   236,   376,   698,   699,
     700,   701,  1120,   462,   626,   627,   696,  1417,   626,   626,
     897,    18,   889,  1001,  1002,  1420,  1001,  1001,   261,  1240,
     626,   626,   626,   626,   626,    33,    20,   569,   947,    33,
     948,   626,   627,   626,   626,   626,  1399,   626,   626,   627,
     626,   326,   250,   410,   626,   626,   626,   626,   626,   626,
     962,   626,   627,   908,  1113,  1236,  1510,   626,   270,   368,
      62,   243,   348,   508,   521,   609,  1482,  1483,   603,  1492,
    1492,  1492,   626,   627,  1304,   233,   625,   853,   625,   866,
    1420,   864,   888,  1295,  1302,   626,  1509,    46,   205,  1221,
    1259,  1422,   627,   326,  1417,   155,  1185,   362,  1176,  1182,
    1182,   362,  1178,  1124,  1124,   625,  1230,  1205,  1206,  1195,
    1407,  1242,   863,   626,   625,   625,  1001,   625,   625,   110,
     544,   547,   618,   619,  1401,  1402,  1042,  1412,   941,  1078,
    1030,  1065,   626,   975,  1420,   303,   976,   483,   575,   615,
     935,   936,   937,   625,   935,   935,   959,   593,   935,   625,
     959,   935,   953,  1417,   945,   946,  1401,   577,   120,   248,
     943,   248,   355,   959,   960,   959,   960,   935,   356,   935,
    1420,   672,   679,   680,  1420,   467,   625,  1540,   626,  1417,
     626,   627,   696,  1543,   671,  1549,   697,   921,   944,   833,
     837,   625,   886,   626,   627,  1234,   625,   626,   626,  1239,
     948,   960,   356,  1124,   326,   168,   626,  1241,  1117,  1117,
     540,   540,   540,    16,  1481,   198,   304,   305,   309,   310,
    1494,  1495,  1302,   248,   534,  1120,   856,   858,   859,  1420,
     587,   867,   908,  1225,  1407,  1222,  1230,   947,   950,  1255,
    1417,  1515,  1175,   583,  1177,   583,  1212,  1240,   182,   219,
     582,  1200,  1201,  1204,   908,  1234,   626,  1001,  1001,   626,
    1001,  1001,  1403,  1403,   841,  1038,   233,   626,   627,   188,
     382,   484,   362,   977,   937,  1005,  1399,  1005,   945,   588,
     510,   674,    52,    65,   175,   218,   244,   255,   365,   449,
     681,   739,   741,   742,   743,   745,   746,   747,   748,   749,
     750,   752,   760,   761,   764,   775,   778,   780,   781,  1415,
    1421,  1425,  1107,  1105,   603,  1541,  1556,   700,  1420,  1412,
     676,   677,   448,   954,  1509,   834,   886,   835,    73,   247,
     989,   992,   995,   996,   997,  1002,   356,   603,   990,   994,
     996,   999,   991,   993,   996,   998,   626,   626,   626,  1482,
     368,  1241,  1241,  1241,  1241,  1495,   577,  1412,   860,   522,
     861,   626,   627,   236,   257,    73,   106,   223,   306,   324,
     347,   532,   883,   884,   885,  1338,   604,   605,   627,  1226,
    1234,  1124,  1236,   949,  1260,  1186,  1124,   625,  1124,   625,
     626,   981,   981,  1201,   626,   626,   989,   626,   626,  1042,
     625,  1420,   125,   577,   626,   627,   626,  1124,   150,   675,
     762,   765,  1420,   187,   346,   753,   740,  1421,  1421,  1420,
     744,   640,   277,   437,   602,   784,    30,   782,   634,   626,
      51,    61,   267,   685,   944,   184,   673,  1550,   626,  1506,
    1417,  1297,   997,  1234,   626,   381,   999,   998,  1310,  1311,
    1409,  1180,  1121,  1242,   857,   859,   869,   542,  1297,   131,
     131,  1297,  1297,  1297,  1297,   625,   878,   885,   153,  1407,
     402,  1247,    70,  1383,  1510,  1212,  1212,   184,  1199,  1199,
     973,   989,   990,   991,   863,    50,   352,   445,   475,   978,
     978,   959,  1399,   959,  1124,  1124,   600,   767,   771,   187,
    1420,   755,   756,  1124,   703,   738,   739,   741,   743,   745,
     747,   748,   749,   750,   752,   760,   775,   778,   780,   703,
     785,   783,   776,   779,  1509,    61,   368,    61,   129,   686,
     687,  1130,  1557,  1120,   678,   944,   836,  1241,  1415,   627,
    1296,  1377,   626,   861,   625,   871,   873,   868,  1417,  1297,
    1297,   275,   356,   562,  1244,  1245,  1244,  1242,  1422,   523,
     879,   880,  1297,  1234,  1420,   148,   159,   369,   539,  1384,
    1385,   263,  1386,   626,   626,   200,   245,   371,  1203,  1202,
     626,     5,   120,   355,   362,   362,   763,   772,   145,   771,
     774,   233,   149,  1124,   149,   738,   631,   576,  1124,   704,
     784,   782,   368,   368,   129,   738,  1544,   138,  1551,  1509,
    1311,  1302,   950,   625,   872,   873,   874,   311,   870,   873,
    1417,  1417,   881,   626,   627,   904,  1248,    46,    46,   148,
      46,  1385,   509,   539,  1387,  1388,    46,    46,   625,   625,
     577,   125,   600,   766,   768,  1124,   703,   149,   751,   218,
     543,   277,   631,   787,   138,   119,   702,   705,   777,  1421,
     777,   144,   679,   685,  1378,   626,   627,   311,   876,   877,
    1127,   882,  1422,   880,   625,  1399,  1399,    46,  1399,    46,
      46,  1388,  1209,  1211,   978,   978,   769,   768,   774,   773,
      52,   754,  1420,   757,  1124,   786,    89,   167,   710,   736,
    1420,   149,   738,   631,   458,  1552,   456,  1389,   873,   627,
     875,   883,  1120,  1249,  1250,  1251,  1399,  1399,  1399,   626,
     626,  1124,   149,   543,   627,   703,   149,   703,   203,   627,
     706,    80,   100,   631,  1545,   738,   216,  1383,   877,   626,
    1124,   626,   627,   770,    52,   703,  1420,   758,   437,   149,
     184,  1420,   944,   184,   184,   738,    46,  1386,  1121,  1251,
     543,   145,   146,   759,   602,   707,   120,   737,   713,   714,
    1241,   708,   709,  1399,   219,  1390,   703,   703,   755,   495,
     497,   711,   712,   713,   716,  1130,  1420,  1124,  1103,   356,
     625,  1392,   627,   738,   186,   263,   456,  1391,   626,   632,
    1393,  1394,  1409,   475,  1395,   712,  1422,   626,   627,  1396,
    1397,  1409,  1394,   627,  1296,  1397,  1120,  1302,  1121
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
#else
static void
yy_reduce_print (yyvsp, yyrule)
    YYSTYPE *yyvsp;
    int yyrule;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       		       );
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, Rule); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  YYUSE (yyvaluep);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1924 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:
#line 1936 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:
#line 1961 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 62:
#line 2035 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 65:
#line 2050 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(2) - (4)].lex_str);
          }
    break;

  case 66:
#line 2060 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 67:
#line 2067 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 68:
#line 2077 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 69:
#line 2084 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 74:
#line 2099 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 75:
#line 2111 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 76:
#line 2119 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 77:
#line 2130 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is freed
              in THD::cleanup_after_query. So it is guaranteed to be
              uninitialized before here.
	      Its allocation is deferred till the option is parsed below.
            */
            lex->mi.set_unspecified();
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.elements == 0);
          }
    break;

  case 78:
#line 2143 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 81:
#line 2153 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 82:
#line 2157 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 83:
#line 2161 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 84:
#line 2165 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 85:
#line 2169 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 86:
#line 2173 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 87:
#line 2177 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 88:
#line 2182 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       static_cast<uint>((yyvsp[(3) - (3)].ulong_num)), MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 89:
#line 2192 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 90:
#line 2197 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 91:
#line 2201 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 92:
#line 2205 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 93:
#line 2209 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 94:
#line 2213 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 95:
#line 2217 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 96:
#line 2222 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 97:
#line 2226 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 98:
#line 2231 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 99:
#line 2262 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 100:
#line 2267 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 105:
#line 2284 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->mi.repl_ignore_server_ids.elements == 0)
            {
              my_init_dynamic_array2(&Lex->mi.repl_ignore_server_ids,
                                     sizeof(::server_id),
                                     Lex->mi.server_ids_buffer,
                                     array_elements(Lex->mi.server_ids_buffer),
                                     16);
            }
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 106:
#line 2298 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 107:
#line 2302 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 108:
#line 2318 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 109:
#line 2322 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 110:
#line 2334 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            /*
              For CREATE TABLE, an non-existing table is not an error.
              Instruct open_tables() to just take an MDL lock if the
              table does not exist.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_IF_EXISTS;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 111:
#line 2359 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 112:
#line 2378 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 113:
#line 2383 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 114:
#line 2389 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 115:
#line 2394 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 116:
#line 2400 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 117:
#line 2405 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 118:
#line 2410 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 119:
#line 2415 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 120:
#line 2422 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 121:
#line 2428 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 122:
#line 2430 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 123:
#line 2434 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 124:
#line 2438 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 125:
#line 2442 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
          }
    break;

  case 126:
#line 2453 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.server_name= (yyvsp[(2) - (10)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(2) - (10)].lex_str).length;
            Lex->server_options.scheme= (yyvsp[(6) - (10)].lex_str).str;
          }
    break;

  case 129:
#line 2467 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.username= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 130:
#line 2471 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.host= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 131:
#line 2475 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 132:
#line 2479 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.owner= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 133:
#line 2483 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.password= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 134:
#line 2487 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.socket= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 135:
#line 2491 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->server_options.port= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 136:
#line 2498 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->create_info.options= (yyvsp[(3) - (4)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 137:
#line 2518 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 138:
#line 2529 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 140:
#line 2536 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 141:
#line 2542 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 142:
#line 2544 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 143:
#line 2550 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
    break;

  case 144:
#line 2556 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 145:
#line 2565 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 146:
#line 2572 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 148:
#line 2580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 149:
#line 2586 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 151:
#line 2592 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 152:
#line 2598 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 153:
#line 2606 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 154:
#line 2608 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 155:
#line 2615 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }
              
            if (!(lex->sphead= new sp_head()))
              MYSQL_YYABORT;

            lex->sphead->reset_thd_mem_root(thd);
            lex->sphead->init(lex);
            lex->sphead->init_sp_name(thd, lex->event_parse_data->identifier);

            lex->sphead->m_type= TYPE_ENUM_PROCEDURE;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 156:
#line 2658 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!

            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 170:
#line 2690 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 171:
#line 2705 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str || check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (check_routine_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 172:
#line 2721 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (check_routine_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 173:
#line 2739 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 174:
#line 2740 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 175:
#line 2744 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 176:
#line 2745 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 177:
#line 2751 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 178:
#line 2753 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 179:
#line 2755 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 180:
#line 2757 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 181:
#line 2759 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 182:
#line 2761 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 183:
#line 2763 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 184:
#line 2768 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 185:
#line 2769 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 186:
#line 2770 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 187:
#line 2775 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 188:
#line 2779 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 189:
#line 2786 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), TYPE_ENUM_PROCEDURE);
          }
    break;

  case 190:
#line 2794 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 195:
#line 2810 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
           Lex->value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 196:
#line 2814 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 201:
#line 2832 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 202:
#line 2852 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   sp_variable::MODE_IN);

            if (sp->fill_field_definition(thd, lex,
                                          (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                          &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 207:
#line 2893 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(3) - (4)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (sp->fill_field_definition(thd, lex,
                                          (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                          &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 208:
#line 2921 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 209:
#line 2922 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 210:
#line 2923 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 211:
#line 2924 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 212:
#line 2928 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 214:
#line 2933 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 216:
#line 2939 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 217:
#line 2943 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 218:
#line 2969 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 219:
#line 2980 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            
            if (!dflt_value_item)
            {
              dflt_value_item= new (thd->mem_root) Item_null();
              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);
            
              if (!spvar)
                MYSQL_YYABORT;
            
              spvar->type= var_type;
              spvar->default_value= dflt_value_item;
            
              if (sp->fill_field_definition(thd, lex, var_type,
                                            &spvar->field_def))
              {
                MYSQL_YYABORT;
              }
            
              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= new sp_instr_set(sp->instructions(),
                                                 pctx,
                                                 var_idx,
                                                 dflt_value_item,
                                                 var_type,
                                                 lex,
                                                 (i == num_vars - 1));
              if (!is || sp->add_instr(is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 220:
#line 3037 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 221:
#line 3053 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;

            /* For continue handlers, mark end of handler scope. */
            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE &&
                sp->push_backpatch(i, handler_pctx->last_label()))
              MYSQL_YYABORT;

            if (sp->push_backpatch(i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
              MYSQL_YYABORT;
          }
    break;

  case 222:
#line 3083 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(i) ||
                  sp->push_backpatch(i, pctx->last_label())) /* Block end */
                MYSQL_YYABORT;
            }
            lex->sphead->backpatch(hlab);

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 223:
#line 3115 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offp;
            sp_instr_cpush *i;

            if (pctx->find_cursor((yyvsp[(2) - (5)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              delete (yyvsp[(5) - (5)].lex);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cpush(sp->instructions(), pctx, (yyvsp[(5) - (5)].lex),
                                  pctx->current_cursor_count());
            if (i == NULL ||
                sp->add_instr(i) ||
                pctx->add_cursor((yyvsp[(2) - (5)].lex_str)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 224:
#line 3140 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD);
          }
    break;

  case 225:
#line 3144 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            DBUG_ASSERT(lex->sql_command == SQLCOM_SELECT);

            if (lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }
            lex->sp_lex_in_use= TRUE;
            (yyval.lex)= lex;
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 226:
#line 3163 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 227:
#line 3164 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 228:
#line 3170 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 229:
#line 3172 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 230:
#line 3177 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 231:
#line 3200 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 233:
#line 3215 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 234:
#line 3236 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 235:
#line 3237 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 236:
#line 3242 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 237:
#line 3246 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 238:
#line 3259 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 239:
#line 3265 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 240:
#line 3271 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 241:
#line 3280 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 242:
#line 3295 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 243:
#line 3321 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 244:
#line 3326 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 245:
#line 3328 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 246:
#line 3333 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
    break;

  case 248:
#line 3341 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(1) - (3)].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[(3) - (3)].item);
          }
    break;

  case 249:
#line 3350 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(3) - (5)].diag_condition_item_name);
            if (info->m_item[index] != NULL)
            {
              my_error(ER_DUP_SIGNAL_SET, MYF(0),
                       Diag_condition_item_names[index].str);
              MYSQL_YYABORT;
            }
            info->m_item[index]= (yyvsp[(5) - (5)].item);
          }
    break;

  case 250:
#line 3369 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 251:
#line 3371 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 252:
#line 3389 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 253:
#line 3395 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
    break;

  case 254:
#line 3397 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
    break;

  case 255:
#line 3399 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
    break;

  case 256:
#line 3401 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
    break;

  case 257:
#line 3403 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
    break;

  case 258:
#line 3405 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
    break;

  case 259:
#line 3407 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
    break;

  case 260:
#line 3409 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
    break;

  case 261:
#line 3411 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
    break;

  case 262:
#line 3413 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
    break;

  case 263:
#line 3415 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
    break;

  case 264:
#line 3417 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
    break;

  case 265:
#line 3422 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue),
                                                   state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 266:
#line 3438 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 267:
#line 3453 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 268:
#line 3455 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 269:
#line 3460 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 270:
#line 3466 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:
#line 3475 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 272:
#line 3481 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 273:
#line 3490 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 274:
#line 3498 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= &YYTHD->m_parser_state->m_lip;
            (yyval.item)= create_item_for_sp_var(YYTHD, (yyvsp[(1) - (1)].lex_str), NULL,
                                       lip->get_tok_start(), lip->get_ptr());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 275:
#line 3506 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 276:
#line 3515 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 277:
#line 3517 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 278:
#line 3526 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 279:
#line 3531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 280:
#line 3537 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 281:
#line 3546 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 282:
#line 3554 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 283:
#line 3556 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 284:
#line 3558 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 285:
#line 3560 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 286:
#line 3562 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 287:
#line 3564 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 288:
#line 3566 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 289:
#line 3568 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 290:
#line 3570 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 291:
#line 3572 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 292:
#line 3574 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 293:
#line 3576 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 294:
#line 3578 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 295:
#line 3583 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 296:
#line 3603 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 297:
#line 3625 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 298:
#line 3626 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item); }
    break;

  case 312:
#line 3647 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sphead->new_cont_backpatch(NULL); }
    break;

  case 313:
#line 3649 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 314:
#line 3653 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
    break;

  case 315:
#line 3662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=
                new sp_instr_stmt(sp->instructions(),
                                  lex->get_sp_current_parsing_ctx(), lex);

              if (i == NULL)
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_end() - sp->m_tmp_query;
              if (!(i->m_query.str= strmake_root(thd->mem_root,
                                                 sp->m_tmp_query,
                                                 i->m_query.length)) ||
                    sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 316:
#line 3712 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 317:
#line 3714 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (sp->m_type != TYPE_ENUM_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            sp_instr_freturn *i=
              new sp_instr_freturn(sp->instructions(),
                                   lex->get_sp_current_parsing_ctx(),
                                   (yyvsp[(3) - (3)].item),
                                   sp->m_return_field_def.sql_type,
                                   lex);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;

            sp->m_flags|= sp_head::HAS_RETURN;

            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 318:
#line 3742 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 319:
#line 3753 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->backpatch(pctx->pop_label());
          }
    break;

  case 320:
#line 3764 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            uint n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= new sp_instr_hpop(ip++, pctx, n);

              if (!hpop || sp->add_instr(hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= new sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new sp_instr_jump(ip, pctx);

            if (!i ||
                sp->push_backpatch(i, lab) ||  /* Jumping forward */
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 321:
#line 3819 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            uint n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop= new sp_instr_hpop(ip++, pctx, n);

              if (!hpop || sp->add_instr(hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop= new sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= new sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 322:
#line 3865 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 323:
#line 3887 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 324:
#line 3906 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 325:
#line 3911 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 329:
#line 3939 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 330:
#line 3957 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 331:
#line 3977 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 332:
#line 3979 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, pctx,
                                                               (yyvsp[(2) - (3)].item), lex);
            if (i == NULL ||
                sp->push_backpatch(i, pctx->push_label(YYTHD, EMPTY_STR, 0)) ||
                sp->add_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 333:
#line 3995 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = new sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;

            sp->backpatch(pctx->pop_label());
            sp->push_backpatch(i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 334:
#line 4010 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->backpatch(pctx->pop_label());
          }
    break;

  case 340:
#line 4032 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            case_stmt_action_case(thd);
            lex->sphead->reset_lex(thd); /* For expr $3 */
          }
    break;

  case 341:
#line 4039 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_expr(lex, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;

            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 342:
#line 4052 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, true);
          }
    break;

  case 343:
#line 4060 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 344:
#line 4067 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, false);
          }
    break;

  case 349:
#line 4085 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 350:
#line 4089 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* Simple case: <caseval> = <whenval> */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (case_stmt_action_when(thd, (yyvsp[(3) - (3)].item), true))
              MYSQL_YYABORT;

            /* For expr $3 */
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 351:
#line 4105 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 352:
#line 4114 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 353:
#line 4118 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (case_stmt_action_when(thd, (yyvsp[(3) - (3)].item), false))
              MYSQL_YYABORT;

            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 354:
#line 4131 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 355:
#line 4140 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i= new sp_instr_error(sp->instructions(),
                                                  pctx,
                                                  ER_SP_CASE_NOT_FOUND);
            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 357:
#line 4156 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 358:
#line 4174 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->backpatch(lab);
          }
    break;

  case 359:
#line 4193 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 360:
#line 4194 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 361:
#line 4199 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 362:
#line 4215 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 363:
#line 4232 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 364:
#line 4243 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 365:
#line 4251 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 366:
#line 4266 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->backpatch(pctx->last_label()); /* We always have a label */

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i= new sp_instr_hpop(sp->instructions(),
                                             pctx, (yyvsp[(3) - (5)].spblock).hndlrs);

              if (!i || sp->add_instr(i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i= new sp_instr_cpop(sp->instructions(),
                                             pctx, (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 367:
#line 4298 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= new sp_instr_jump(sp->instructions(),
                                                pctx,
                                                pctx->last_label()->ip);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 368:
#line 4311 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 369:
#line 4313 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump_if_not *i=
              new sp_instr_jump_if_not(sp->instructions(), pctx, (yyvsp[(3) - (4)].item), lex);

            if (i == NULL ||
                /* Jumping forward */
                sp->push_backpatch(i, pctx->last_label()) ||
                sp->new_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;

            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 370:
#line 4332 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= new sp_instr_jump(sp->instructions(),
                                                pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;

            sp->do_cont_backpatch();
          }
    break;

  case 371:
#line 4346 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 372:
#line 4348 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            sp_instr_jump_if_not *i=
              new sp_instr_jump_if_not(ip, pctx, (yyvsp[(5) - (7)].item),
                                       pctx->last_label()->ip, lex);

            if (!i || sp->add_instr(i))
              MYSQL_YYABORT;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip + 1;
          }
    break;

  case 373:
#line 4372 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 374:
#line 4374 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 375:
#line 4379 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 376:
#line 4381 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 377:
#line 4383 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 381:
#line 4417 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 382:
#line 4419 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 383:
#line 4429 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
    break;

  case 384:
#line 4435 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
    break;

  case 389:
#line 4458 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 440:
#line 4556 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 441:
#line 4564 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 442:
#line 4572 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 443:
#line 4580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 444:
#line 4592 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 445:
#line 4604 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 446:
#line 4609 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 447:
#line 4614 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 448:
#line 4622 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 449:
#line 4630 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 450:
#line 4638 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 451:
#line 4646 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 452:
#line 4654 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 453:
#line 4662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 454:
#line 4670 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 455:
#line 4683 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 456:
#line 4696 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 457:
#line 4710 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 458:
#line 4715 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 459:
#line 4727 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulong_num);}
    break;

  case 460:
#line 4729 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            uint str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 461:
#line 4779 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 462:
#line 4782 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 463:
#line 4784 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 464:
#line 4799 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 465:
#line 4818 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 466:
#line 4821 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 467:
#line 4822 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 468:
#line 4826 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 469:
#line 4828 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 470:
#line 4829 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 471:
#line 4831 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 472:
#line 4832 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 473:
#line 4837 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 474:
#line 4873 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 476:
#line 4879 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
    break;

  case 478:
#line 4897 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
    break;

  case 479:
#line 4916 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 480:
#line 4928 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 482:
#line 4937 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 483:
#line 4944 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 484:
#line 4945 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 485:
#line 4947 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 486:
#line 4949 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 487:
#line 4951 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 488:
#line 4953 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 489:
#line 4957 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 490:
#line 4959 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 491:
#line 4963 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 492:
#line 4964 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 493:
#line 4968 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 494:
#line 4969 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 495:
#line 4974 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 496:
#line 4993 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 497:
#line 5003 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 498:
#line 5014 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 499:
#line 5022 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 500:
#line 5024 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 501:
#line 5039 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 502:
#line 5041 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 503:
#line 5042 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 504:
#line 5045 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 505:
#line 5050 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 506:
#line 5054 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 507:
#line 5055 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 508:
#line 5060 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 509:
#line 5078 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 510:
#line 5093 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 511:
#line 5095 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 512:
#line 5110 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 513:
#line 5126 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 514:
#line 5147 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 515:
#line 5148 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 516:
#line 5153 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 517:
#line 5172 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 518:
#line 5177 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 519:
#line 5186 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 520:
#line 5208 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 521:
#line 5223 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 522:
#line 5225 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 523:
#line 5240 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 524:
#line 5245 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 525:
#line 5266 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 526:
#line 5271 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 527:
#line 5300 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 528:
#line 5311 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 529:
#line 5312 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 530:
#line 5317 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 531:
#line 5328 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 532:
#line 5330 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 533:
#line 5353 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 534:
#line 5354 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 535:
#line 5359 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 536:
#line 5372 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 537:
#line 5392 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 538:
#line 5406 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 539:
#line 5431 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 540:
#line 5432 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 541:
#line 5437 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 542:
#line 5469 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 543:
#line 5474 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 544:
#line 5478 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 545:
#line 5479 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 546:
#line 5483 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 547:
#line 5484 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 548:
#line 5489 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 549:
#line 5491 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 550:
#line 5497 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 551:
#line 5499 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 552:
#line 5501 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 553:
#line 5503 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 554:
#line 5505 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 555:
#line 5507 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 556:
#line 5516 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 557:
#line 5531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 558:
#line 5535 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
    break;

  case 559:
#line 5545 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 560:
#line 5546 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 561:
#line 5550 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 562:
#line 5551 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 563:
#line 5555 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 564:
#line 5556 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 565:
#line 5560 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 566:
#line 5561 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 567:
#line 5565 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 568:
#line 5566 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 569:
#line 5570 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 570:
#line 5571 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 571:
#line 5575 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 572:
#line 5579 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 573:
#line 5580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 581:
#line 5601 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 582:
#line 5606 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 583:
#line 5611 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 584:
#line 5616 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 585:
#line 5621 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 586:
#line 5626 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 587:
#line 5631 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 588:
#line 5636 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 589:
#line 5651 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 590:
#line 5657 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PERSISTENT_STATS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PERSISTENT_STATS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PERSISTENT_STATS;
          }
    break;

  case 591:
#line 5672 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PERSISTENT_STATS | HA_OPTION_NO_PERSISTENT_STATS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PERSISTENT_STATS;
          }
    break;

  case 592:
#line 5678 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 593:
#line 5683 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 594:
#line 5688 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 595:
#line 5693 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 596:
#line 5698 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 597:
#line 5702 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 600:
#line 5726 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 601:
#line 5731 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 602:
#line 5736 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 603:
#line 5741 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {Lex->create_info.tablespace= (yyvsp[(2) - (2)].lex_str).str;}
    break;

  case 604:
#line 5743 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 605:
#line 5745 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 606:
#line 5747 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 607:
#line 5753 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 608:
#line 5761 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 609:
#line 5779 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 610:
#line 5796 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 611:
#line 5822 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 612:
#line 5839 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 613:
#line 5840 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 614:
#line 5841 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 615:
#line 5842 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 616:
#line 5843 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 617:
#line 5844 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 618:
#line 5848 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 619:
#line 5849 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 620:
#line 5850 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 621:
#line 5854 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 623:
#line 5859 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 624:
#line 5860 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 625:
#line 5861 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 626:
#line 5862 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 627:
#line 5868 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 633:
#line 5886 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 634:
#line 5893 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 635:
#line 5899 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 636:
#line 5905 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 637:
#line 5911 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 638:
#line 5916 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table),
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
    break;

  case 639:
#line 5934 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 643:
#line 5949 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 644:
#line 5950 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 645:
#line 5954 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 646:
#line 5959 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
          }
    break;

  case 647:
#line 5968 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (4)].lex_str), (enum enum_field_types) (yyvsp[(3) - (4)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 648:
#line 5981 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 649:
#line 5982 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 650:
#line 5983 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
    break;

  case 651:
#line 5985 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 652:
#line 5990 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 653:
#line 5994 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 654:
#line 5999 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 655:
#line 6004 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 656:
#line 6008 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 657:
#line 6013 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 658:
#line 6018 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 659:
#line 6024 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 660:
#line 6029 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 661:
#line 6035 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 662:
#line 6039 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 663:
#line 6044 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 664:
#line 6049 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_YEAR; }
    break;

  case 665:
#line 6051 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 666:
#line 6053 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_TIME2; }
    break;

  case 667:
#line 6055 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 668:
#line 6068 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_DATETIME2; }
    break;

  case 669:
#line 6070 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 670:
#line 6075 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 671:
#line 6080 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 672:
#line 6092 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 673:
#line 6097 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 674:
#line 6102 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 675:
#line 6107 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 676:
#line 6109 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
    break;

  case 677:
#line 6111 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_BLOB; }
    break;

  case 678:
#line 6113 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 679:
#line 6115 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
    break;

  case 680:
#line 6117 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 681:
#line 6119 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 682:
#line 6121 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 683:
#line 6123 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 684:
#line 6125 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_ENUM; }
    break;

  case 685:
#line 6127 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 686:
#line 6129 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SET; }
    break;

  case 687:
#line 6131 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 688:
#line 6133 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 689:
#line 6141 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 690:
#line 6142 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 691:
#line 6144 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->length= (char*)"25";
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 692:
#line 6148 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 693:
#line 6149 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 694:
#line 6150 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 695:
#line 6151 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 696:
#line 6152 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 697:
#line 6156 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 698:
#line 6160 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 699:
#line 6161 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 700:
#line 6165 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 701:
#line 6166 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 702:
#line 6170 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 703:
#line 6171 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 704:
#line 6172 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 705:
#line 6173 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 706:
#line 6174 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 707:
#line 6178 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 708:
#line 6179 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 709:
#line 6180 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 710:
#line 6181 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 711:
#line 6182 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 712:
#line 6187 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 713:
#line 6192 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 714:
#line 6194 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 715:
#line 6199 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 716:
#line 6201 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->dec= (char*)0; }
    break;

  case 717:
#line 6203 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 718:
#line 6208 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[(2) - (5)].lex_str).str;
            lex->dec=(yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 719:
#line 6217 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->dec= (char *) 0; }
    break;

  case 720:
#line 6218 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->dec= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 721:
#line 6222 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 722:
#line 6223 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 723:
#line 6225 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 724:
#line 6232 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 725:
#line 6233 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 726:
#line 6237 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 727:
#line 6238 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 728:
#line 6242 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 729:
#line 6243 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 730:
#line 6244 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 731:
#line 6248 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 732:
#line 6249 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 733:
#line 6250 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 734:
#line 6251 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 735:
#line 6254 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->length=(char*) 0; /* use default length */ }
    break;

  case 736:
#line 6255 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 737:
#line 6259 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 738:
#line 6260 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 739:
#line 6264 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 740:
#line 6265 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 741:
#line 6269 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 743:
#line 6274 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 744:
#line 6275 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 745:
#line 6276 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 746:
#line 6277 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->on_update_value= (yyvsp[(3) - (3)].item); }
    break;

  case 747:
#line 6278 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 748:
#line 6280 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 749:
#line 6286 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 750:
#line 6292 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG; 
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 751:
#line 6298 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG; 
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX; 
          }
    break;

  case 752:
#line 6303 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 753:
#line 6305 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 754:
#line 6322 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 755:
#line 6343 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 757:
#line 6352 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 758:
#line 6356 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 759:
#line 6357 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 760:
#line 6362 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 761:
#line 6369 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 762:
#line 6373 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 763:
#line 6374 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 764:
#line 6378 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 765:
#line 6379 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 766:
#line 6384 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 767:
#line 6392 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 768:
#line 6396 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 769:
#line 6397 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 770:
#line 6402 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 771:
#line 6409 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 772:
#line 6410 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 773:
#line 6414 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 774:
#line 6415 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 775:
#line 6419 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 776:
#line 6420 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 777:
#line 6425 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->charset= &my_charset_latin1; }
    break;

  case 778:
#line 6427 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 779:
#line 6431 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 780:
#line 6438 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 781:
#line 6447 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 782:
#line 6452 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 783:
#line 6459 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 786:
#line 6462 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 787:
#line 6463 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->charset=(yyvsp[(2) - (3)].charset); }
    break;

  case 788:
#line 6465 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 789:
#line 6470 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset);
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 790:
#line 6477 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 791:
#line 6478 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 792:
#line 6483 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_parse_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 793:
#line 6491 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 794:
#line 6495 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 795:
#line 6496 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 796:
#line 6500 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 797:
#line 6503 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 798:
#line 6504 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 799:
#line 6505 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 800:
#line 6506 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 801:
#line 6511 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 802:
#line 6519 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 803:
#line 6525 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 804:
#line 6526 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 805:
#line 6531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 806:
#line 6540 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 807:
#line 6541 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 808:
#line 6545 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 809:
#line 6546 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 812:
#line 6560 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 813:
#line 6567 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 815:
#line 6573 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 816:
#line 6580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 817:
#line 6592 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
    break;

  case 818:
#line 6594 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
    break;

  case 819:
#line 6596 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 820:
#line 6598 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 821:
#line 6603 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 822:
#line 6609 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 823:
#line 6615 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 824:
#line 6622 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 825:
#line 6629 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 826:
#line 6637 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 827:
#line 6638 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
    break;

  case 828:
#line 6639 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 829:
#line 6640 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 830:
#line 6641 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 831:
#line 6645 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 832:
#line 6649 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 833:
#line 6650 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 834:
#line 6654 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 835:
#line 6655 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 836:
#line 6659 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 838:
#line 6664 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 839:
#line 6665 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 840:
#line 6666 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 841:
#line 6670 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 842:
#line 6671 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 843:
#line 6675 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 844:
#line 6680 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 845:
#line 6692 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 848:
#line 6709 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 850:
#line 6714 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 852:
#line 6719 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 860:
#line 6739 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 861:
#line 6740 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 862:
#line 6745 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 863:
#line 6746 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 868:
#line 6761 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (plugin_is_ready(&(yyvsp[(3) - (3)].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 869:
#line 6773 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 870:
#line 6774 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 871:
#line 6775 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 872:
#line 6779 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 873:
#line 6780 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 874:
#line 6785 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 875:
#line 6791 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 876:
#line 6804 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 877:
#line 6805 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 878:
#line 6809 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 879:
#line 6810 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 880:
#line 6814 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 881:
#line 6815 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 882:
#line 6823 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(4) - (4)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex.init_order();
            lex->select_lex.db= (lex->select_lex.table_list.first)->db;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 883:
#line 6849 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 884:
#line 6861 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 885:
#line 6866 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 886:
#line 6875 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 887:
#line 6886 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 888:
#line 6897 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 889:
#line 6904 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 890:
#line 6915 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 891:
#line 6922 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 892:
#line 6933 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 893:
#line 6940 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 894:
#line 6952 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 895:
#line 6954 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 896:
#line 6974 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 897:
#line 6987 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 898:
#line 6992 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 899:
#line 6997 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 900:
#line 7002 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 901:
#line 7007 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.server_name= (yyvsp[(3) - (7)].lex_str).str;
            lex->server_options.server_name_length= (yyvsp[(3) - (7)].lex_str).length;
          }
    break;

  case 902:
#line 7016 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 903:
#line 7017 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 904:
#line 7018 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 905:
#line 7019 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 906:
#line 7023 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 907:
#line 7025 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname); 
            (yyval.num)= 1;
          }
    break;

  case 908:
#line 7036 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 909:
#line 7037 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 910:
#line 7041 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 911:
#line 7042 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 913:
#line 7048 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 914:
#line 7056 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 920:
#line 7078 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
    break;

  case 921:
#line 7083 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 922:
#line 7090 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 924:
#line 7104 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 925:
#line 7116 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 927:
#line 7129 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 929:
#line 7142 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 930:
#line 7149 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 932:
#line 7162 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(6) - (7)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(6) - (7)].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 933:
#line 7189 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 934:
#line 7196 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 936:
#line 7204 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 937:
#line 7216 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 939:
#line 7222 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 940:
#line 7227 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 941:
#line 7234 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 943:
#line 7249 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 944:
#line 7253 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 945:
#line 7257 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 946:
#line 7264 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 947:
#line 7265 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 948:
#line 7270 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 951:
#line 7290 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 952:
#line 7299 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 953:
#line 7303 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 954:
#line 7308 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN |
                                    Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 955:
#line 7313 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 956:
#line 7319 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 957:
#line 7323 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 958:
#line 7332 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (6)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (6)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (6)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 959:
#line 7344 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 960:
#line 7348 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 961:
#line 7357 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 962:
#line 7366 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 963:
#line 7375 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 964:
#line 7384 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 965:
#line 7390 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 966:
#line 7396 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 967:
#line 7405 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 968:
#line 7414 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(3) - (3)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            if (check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE) ||
                ((yyvsp[(3) - (3)].table)->db.str && check_and_convert_db_name(&(yyvsp[(3) - (3)].table)->db, FALSE)))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(3) - (3)].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 969:
#line 7433 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_CONVERT;
          }
    break;

  case 970:
#line 7454 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 971:
#line 7464 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 972:
#line 7468 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 973:
#line 7473 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 974:
#line 7478 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 975:
#line 7486 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 976:
#line 7491 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 977:
#line 7501 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 978:
#line 7502 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 979:
#line 7506 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 980:
#line 7507 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 981:
#line 7511 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 982:
#line 7512 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 983:
#line 7513 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 984:
#line 7517 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 985:
#line 7519 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            store_position_for_column((yyvsp[(2) - (2)].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 986:
#line 7524 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 987:
#line 7531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 988:
#line 7532 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 989:
#line 7533 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 990:
#line 7534 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 991:
#line 7539 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 992:
#line 7549 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 993:
#line 7566 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 994:
#line 7576 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 995:
#line 7592 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 996:
#line 7596 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 997:
#line 7603 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 998:
#line 7607 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 999:
#line 7614 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1000:
#line 7618 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1001:
#line 7622 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1003:
#line 7633 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= 0;
          }
    break;

  case 1004:
#line 7637 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1005:
#line 7643 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= 0;
          }
    break;

  case 1006:
#line 7647 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1007:
#line 7652 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= 0;
          }
    break;

  case 1008:
#line 7656 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1009:
#line 7662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= 0;
          }
    break;

  case 1010:
#line 7666 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1011:
#line 7673 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1012:
#line 7677 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1013:
#line 7684 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1014:
#line 7688 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1015:
#line 7695 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1016:
#line 7699 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1017:
#line 7705 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1018:
#line 7707 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
    break;

  case 1021:
#line 7727 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1022:
#line 7732 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1023:
#line 7740 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1024:
#line 7747 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1025:
#line 7751 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1026:
#line 7752 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1027:
#line 7753 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1028:
#line 7758 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1029:
#line 7768 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1030:
#line 7779 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1031:
#line 7780 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1032:
#line 7784 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1033:
#line 7785 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1034:
#line 7789 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1035:
#line 7790 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1036:
#line 7791 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1037:
#line 7796 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1038:
#line 7806 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1039:
#line 7818 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1040:
#line 7826 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1041:
#line 7841 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1042:
#line 7852 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1043:
#line 7853 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1044:
#line 7857 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1045:
#line 7858 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1046:
#line 7862 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1047:
#line 7863 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1048:
#line 7864 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1049:
#line 7865 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1050:
#line 7866 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1051:
#line 7867 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1052:
#line 7872 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1053:
#line 7882 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1054:
#line 7893 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1055:
#line 7894 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1056:
#line 7895 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1057:
#line 7900 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1058:
#line 7904 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1059:
#line 7906 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1060:
#line 7913 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1061:
#line 7918 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1064:
#line 7931 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1065:
#line 7944 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1066:
#line 7948 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1071:
#line 7967 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1072:
#line 7977 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1073:
#line 7986 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1074:
#line 7987 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1075:
#line 7992 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1076:
#line 7998 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1081:
#line 8013 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1082:
#line 8023 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1083:
#line 8033 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1085:
#line 8040 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->select_lex.alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
    break;

  case 1087:
#line 8051 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 1089:
#line 8057 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1090:
#line 8058 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1091:
#line 8068 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
    break;

  case 1094:
#line 8082 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1096:
#line 8092 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1098:
#line 8101 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1100:
#line 8120 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1101:
#line 8128 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1103:
#line 8135 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1108:
#line 8145 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
    break;

  case 1111:
#line 8160 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1115:
#line 8177 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
    break;

  case 1116:
#line 8205 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
    break;

  case 1118:
#line 8237 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1119:
#line 8243 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1122:
#line 8255 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
    break;

  case 1123:
#line 8270 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1124:
#line 8277 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            DBUG_ASSERT((yyvsp[(1) - (4)].simple_string) < (yyvsp[(3) - (4)].simple_string));

            if (add_item_to_list(thd, (yyvsp[(2) - (4)].item)))
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[(4) - (4)].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[(4) - (4)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info, false);
            }
            else if (!(yyvsp[(2) - (4)].item)->item_name.ptr())
            {
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), thd->charset());
            }
          }
    break;

  case 1125:
#line 8301 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
    break;

  case 1126:
#line 8307 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end();
          }
    break;

  case 1127:
#line 8313 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1128:
#line 8314 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1129:
#line 8315 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1130:
#line 8316 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1131:
#line 8317 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1132:
#line 8321 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1133:
#line 8322 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1134:
#line 8328 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_or*) (yyvsp[(1) - (3)].item);
              if (is_cond_or((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_or((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1135:
#line 8379 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_func_xor((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1136:
#line 8386 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_and*) (yyvsp[(1) - (3)].item);
              if (is_cond_and((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_and((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1137:
#line 8429 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1138:
#line 8435 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1139:
#line 8441 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1140:
#line 8447 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1141:
#line 8453 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1142:
#line 8459 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1143:
#line 8465 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1145:
#line 8475 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1146:
#line 8481 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1147:
#line 8487 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1148:
#line 8493 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= (*(yyvsp[(2) - (3)].boolfunc2creator))(0)->create((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1149:
#line 8499 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1151:
#line 8509 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1152:
#line 8515 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1153:
#line 8525 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1154:
#line 8531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(4) - (7)].item));
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(1) - (7)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[(6) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1155:
#line 8539 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1156:
#line 8545 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(1) - (8)].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1157:
#line 8555 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (5)].item),(yyvsp[(3) - (5)].item),(yyvsp[(5) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1158:
#line 8561 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (6)].item),(yyvsp[(4) - (6)].item),(yyvsp[(6) - (6)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1159:
#line 8570 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(1) - (4)].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1160:
#line 8580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (4)].item),(yyvsp[(3) - (4)].item),(yyvsp[(4) - (4)].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1161:
#line 8586 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1162:
#line 8596 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1163:
#line 8602 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (4)].item),(yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1165:
#line 8615 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1166:
#line 8621 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1167:
#line 8627 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1168:
#line 8633 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1169:
#line 8639 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1170:
#line 8645 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1171:
#line 8651 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1172:
#line 8657 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1173:
#line 8663 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1174:
#line 8669 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1175:
#line 8675 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1176:
#line 8681 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1177:
#line 8687 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1178:
#line 8693 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1188:
#line 8722 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1189:
#line 8723 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1190:
#line 8724 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1191:
#line 8725 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1192:
#line 8726 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1193:
#line 8727 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1194:
#line 8731 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1195:
#line 8732 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1201:
#line 8742 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[(3) - (3)].lex_str).str,
                                                      (yyvsp[(3) - (3)].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[(1) - (3)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1206:
#line 8758 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1207:
#line 8764 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1208:
#line 8768 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1209:
#line 8774 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1210:
#line 8780 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1211:
#line 8786 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[(2) - (3)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1212:
#line 8792 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1213:
#line 8794 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(4) - (5)].item_list)->push_front((yyvsp[(2) - (5)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(4) - (5)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1214:
#line 8801 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(5) - (6)].item_list)->push_front((yyvsp[(3) - (6)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(5) - (6)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1215:
#line 8808 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[(3) - (4)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1216:
#line 8814 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item_string *item;
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[(3) - (4)].item)->type() == Item::STRING_ITEM &&
               (item= (Item_string *) (yyvsp[(3) - (4)].item)) &&
                item->collation.repertoire == MY_REPERTOIRE_ASCII &&
                item->str_value.length() < MAX_DATE_STRING_REP_LENGTH * 4)
            {
              enum_field_types type= MYSQL_TYPE_STRING;
              ErrConvString str(&item->str_value);
              LEX_STRING *ls= &(yyvsp[(2) - (4)].lex_str);
              if (ls->length == 1)
              {
                if (ls->str[0] == 'd')  /* {d'2001-01-01'} */
                  type= MYSQL_TYPE_DATE;
                else if (ls->str[0] == 't') /* {t'10:20:30'} */
                  type= MYSQL_TYPE_TIME;
              }
              else if (ls->length == 2) /* {ts'2001-01-01 10:20:30'} */
              {
                if (ls->str[0] == 't' && ls->str[1] == 's')
                  type= MYSQL_TYPE_DATETIME;
              }
              if (type != MYSQL_TYPE_STRING)
                (yyval.item)= create_temporal_literal(YYTHD,
                                            str.ptr(), str.length(),
                                            system_charset_info,
                                            type, false);
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[(3) - (4)].item);
          }
    break;

  case 1217:
#line 8855 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (7)].item_list)->push_front((yyvsp[(5) - (7)].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[(2) - (7)].item_list), (yyvsp[(6) - (7)].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            (yyval.item)= i1;
          }
    break;

  case 1218:
#line 8864 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1219:
#line 8871 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1220:
#line 8879 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1221:
#line 8885 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1222:
#line 8892 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1223:
#line 8898 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[(3) - (4)].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1224:
#line 8912 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1225:
#line 8920 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(5) - (5)].item),(yyvsp[(2) - (5)].item),(yyvsp[(3) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1226:
#line 8935 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1227:
#line 8941 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (6)].item_list), (yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1228:
#line 8947 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1229:
#line 8955 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1230:
#line 8961 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1231:
#line 8967 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1232:
#line 8973 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[(3) - (10)].item),(yyvsp[(5) - (10)].item),(yyvsp[(7) - (10)].item),(yyvsp[(9) - (10)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1233:
#line 8979 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[(5) - (6)].item));
            list->push_front((yyvsp[(3) - (6)].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1234:
#line 8994 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(3) - (8)].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1235:
#line 9006 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1236:
#line 9012 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1237:
#line 9018 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1238:
#line 9024 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1239:
#line 9030 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1240:
#line 9036 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1241:
#line 9042 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1242:
#line 9048 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1243:
#line 9054 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1244:
#line 9060 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1245:
#line 9066 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1246:
#line 9072 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1247:
#line 9078 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1248:
#line 9084 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1249:
#line 9090 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1250:
#line 9096 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1251:
#line 9102 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1252:
#line 9110 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1253:
#line 9131 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1254:
#line 9138 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1255:
#line 9144 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1256:
#line 9151 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1257:
#line 9159 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1258:
#line 9166 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1259:
#line 9172 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1260:
#line 9178 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1261:
#line 9184 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(1) - (1)].item);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1262:
#line 9189 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1263:
#line 9195 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1264:
#line 9202 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1265:
#line 9208 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1266:
#line 9214 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1267:
#line 9220 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1268:
#line 9226 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1269:
#line 9232 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[(2) - (2)].ulong_num));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1270:
#line 9250 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(7) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(3) - (8)].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1271:
#line 9256 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1272:
#line 9262 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1273:
#line 9269 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1274:
#line 9276 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1275:
#line 9291 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1276:
#line 9297 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1277:
#line 9303 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1278:
#line 9309 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1279:
#line 9315 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1280:
#line 9322 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1281:
#line 9328 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1282:
#line 9334 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1283:
#line 9340 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1284:
#line 9346 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1285:
#line 9352 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1286:
#line 9358 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item* i1;
            if (thd->variables.old_passwords)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[(3) - (4)].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
    break;

  case 1287:
#line 9370 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1288:
#line 9376 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1289:
#line 9382 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1290:
#line 9388 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_reverse((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1291:
#line 9394 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_row_count();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1292:
#line 9402 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1293:
#line 9408 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int((char*) "0",
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[(3) - (4)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1294:
#line 9420 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1295:
#line 9426 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1296:
#line 9432 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string((yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1297:
#line 9440 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_char_typecast((yyvsp[(3) - (7)].item), (yyvsp[(6) - (7)].ulong_num), &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string(item, 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1298:
#line 9450 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1299:
#line 9456 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[(1) - (1)].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 1300:
#line 9472 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_mbr_rel((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
    break;

  case 1301:
#line 9478 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
    break;

  case 1302:
#line 9485 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
    break;

  case 1303:
#line 9492 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
    break;

  case 1304:
#line 9499 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
    break;

  case 1305:
#line 9506 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
    break;

  case 1306:
#line 9513 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item)));
          }
    break;

  case 1307:
#line 9517 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
    break;

  case 1308:
#line 9536 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[(1) - (2)].lex_str).str, (yyvsp[(1) - (2)].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
    break;

  case 1309:
#line 9555 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            if (check_routine_name(&(yyvsp[(1) - (5)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[(1) - (5)].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[(3) - (5)].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[(4) - (5)].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1310:
#line 9609 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[(1) - (6)].lex_str).str || check_and_convert_db_name(&(yyvsp[(1) - (6)].lex_str), FALSE))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (check_routine_name(&(yyvsp[(3) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), true, (yyvsp[(5) - (6)].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1311:
#line 9651 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1312:
#line 9653 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1313:
#line 9657 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1314:
#line 9658 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1315:
#line 9662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1316:
#line 9663 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1317:
#line 9667 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1318:
#line 9668 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1319:
#line 9673 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1320:
#line 9680 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1321:
#line 9688 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info, false);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[(2) - (4)].item)->type() != Item::FIELD_ITEM)
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), YYTHD->charset());
            (yyval.item)= (yyvsp[(2) - (4)].item);
          }
    break;

  case 1322:
#line 9713 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1323:
#line 9719 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1324:
#line 9725 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1325:
#line 9731 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1326:
#line 9737 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1327:
#line 9743 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1328:
#line 9752 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1329:
#line 9758 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1330:
#line 9760 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 1331:
#line 9762 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[(5) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1332:
#line 9768 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1333:
#line 9779 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1334:
#line 9785 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1335:
#line 9791 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1336:
#line 9797 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1337:
#line 9803 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1338:
#line 9809 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1339:
#line 9815 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1340:
#line 9821 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1341:
#line 9827 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1342:
#line 9833 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1343:
#line 9837 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].item_list),
                                         sel->gorder_list, (yyvsp[(7) - (8)].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[(5) - (8)].item_list)->empty();
          }
    break;

  case 1344:
#line 9851 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1345:
#line 9859 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1346:
#line 9866 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
    break;

  case 1347:
#line 9876 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(1) - (1)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 1348:
#line 9884 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[(3) - (4)].lex_str).str && (yyvsp[(4) - (4)].lex_str).str && check_reserved_words(&(yyvsp[(3) - (4)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yyvsp[(4) - (4)].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
    break;

  case 1349:
#line 9899 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1350:
#line 9900 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1351:
#line 9905 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1352:
#line 9910 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1353:
#line 9915 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->gorder_list = NULL;
          }
    break;

  case 1354:
#line 9919 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list= new (YYTHD->mem_root)
                                   SQL_I_List<ORDER>(select->order_list);
            if (select->gorder_list == NULL)
              MYSQL_YYABORT;
            select->order_list.empty();
          }
    break;

  case 1355:
#line 9931 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1356:
#line 9940 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1357:
#line 9948 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 1358:
#line 9950 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 1359:
#line 9952 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 1360:
#line 9954 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1361:
#line 9956 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1362:
#line 9958 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1363:
#line 9960 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1364:
#line 9962 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec= Lex->length= (char *) 0; }
    break;

  case 1365:
#line 9964 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_TIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1366:
#line 9966 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1367:
#line 9968 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1368:
#line 9972 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1369:
#line 9973 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list);}
    break;

  case 1370:
#line 9978 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1371:
#line 9985 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1372:
#line 9992 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1373:
#line 9993 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(2) - (3)].item_list); }
    break;

  case 1374:
#line 9998 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1375:
#line 10005 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1376:
#line 10012 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1377:
#line 10013 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1378:
#line 10017 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1379:
#line 10018 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1380:
#line 10023 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1381:
#line 10031 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1382:
#line 10041 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1383:
#line 10043 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
    break;

  case 1384:
#line 10051 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[(1) - (1)].table_list)); }
    break;

  case 1385:
#line 10062 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1386:
#line 10063 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(3) - (4)].table_list); }
    break;

  case 1387:
#line 10069 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1388:
#line 10071 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list)));
          }
    break;

  case 1389:
#line 10091 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); }
    break;

  case 1390:
#line 10093 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); (yyvsp[(3) - (3)].table_list)->straight=1; }
    break;

  case 1391:
#line 10096 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1392:
#line 10104 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1393:
#line 10111 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1394:
#line 10119 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(3) - (6)].table_list)->straight=1;
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1395:
#line 10127 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
          }
    break;

  case 1396:
#line 10131 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { add_join_natural((yyvsp[(1) - (8)].table_list),(yyvsp[(3) - (8)].table_list),(yyvsp[(7) - (8)].string_list),Select); (yyval.table_list)=(yyvsp[(3) - (8)].table_list); }
    break;

  case 1397:
#line 10133 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && ((yyval.table_list)=(yyvsp[(4) - (4)].table_list)));
            add_join_natural((yyvsp[(1) - (4)].table_list),(yyvsp[(4) - (4)].table_list),NULL,Select);
          }
    break;

  case 1398:
#line 10141 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1399:
#line 10149 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(5) - (8)].table_list),(yyvsp[(8) - (8)].item));
            Lex->pop_context();
            (yyvsp[(5) - (8)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(5) - (8)].table_list);
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1400:
#line 10157 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1401:
#line 10161 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            add_join_natural((yyvsp[(1) - (10)].table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select); 
            (yyvsp[(5) - (10)].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[(5) - (10)].table_list); 
          }
    break;

  case 1402:
#line 10167 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(1) - (6)].table_list),(yyvsp[(6) - (6)].table_list),NULL,Select);
            (yyvsp[(6) - (6)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(6) - (6)].table_list);
          }
    break;

  case 1403:
#line 10177 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1404:
#line 10185 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[(8) - (8)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1405:
#line 10194 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1406:
#line 10198 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select);
          }
    break;

  case 1407:
#line 10205 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(6) - (6)].table_list),(yyvsp[(1) - (6)].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
    break;

  case 1408:
#line 10215 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1409:
#line 10216 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1410:
#line 10217 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1411:
#line 10225 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.string_list)= 0;}
    break;

  case 1413:
#line 10231 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (5)].string_list);
          }
    break;

  case 1414:
#line 10245 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
    break;

  case 1415:
#line 10250 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[(2) - (5)].table), (yyvsp[(4) - (5)].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[(3) - (5)].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
    break;

  case 1416:
#line 10261 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[(1) - (3)].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              /* select in braces, can't contain global parameters */
              if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[(2) - (3)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1417:
#line 10301 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[(3) - (5)].table_list) || (yyvsp[(5) - (5)].lex_str_ptr)) && (yyvsp[(2) - (5)].select_lex)->embedding &&
                !(yyvsp[(2) - (5)].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[(3) - (5)].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               ti, (yyvsp[(5) - (5)].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (((yyvsp[(3) - (5)].table_list)->select_lex &&
                     (yyvsp[(3) - (5)].table_list)->select_lex->master_unit()->is_union()) || (yyvsp[(5) - (5)].lex_str_ptr))
            {
              /* simple nested joins cannot have aliases or unions */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[(3) - (5)].table_list);
            }
          }
    break;

  case 1419:
#line 10355 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 1420:
#line 10360 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();
          }
    break;

  case 1422:
#line 10373 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1423:
#line 10392 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1424:
#line 10400 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1426:
#line 10409 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(1) - (1)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
    break;

  case 1427:
#line 10415 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[(1) - (3)].select_lex)->end_nested_join(lex->thd)) && (yyvsp[(3) - (3)].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[(3) - (3)].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1428:
#line 10431 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1429:
#line 10448 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1431:
#line 10455 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1432:
#line 10460 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1433:
#line 10485 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1434:
#line 10486 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1435:
#line 10491 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
    break;

  case 1436:
#line 10494 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1437:
#line 10495 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1438:
#line 10496 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1439:
#line 10500 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1440:
#line 10501 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1441:
#line 10506 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type((yyvsp[(1) - (3)].index_hint), (yyvsp[(3) - (3)].num));
          }
    break;

  case 1443:
#line 10511 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[(3) - (3)].num));
          }
    break;

  case 1448:
#line 10524 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->alloc_index_hints(YYTHD); }
    break;

  case 1450:
#line 10528 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {  Select->clear_index_hints(); }
    break;

  case 1452:
#line 10533 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, NULL, 0); }
    break;

  case 1453:
#line 10534 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1454:
#line 10539 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length); }
    break;

  case 1455:
#line 10541 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
    break;

  case 1458:
#line 10551 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1459:
#line 10562 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1460:
#line 10574 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1461:
#line 10575 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1462:
#line 10576 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1463:
#line 10577 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1464:
#line 10578 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1465:
#line 10579 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1466:
#line 10580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1467:
#line 10581 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1468:
#line 10582 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1469:
#line 10583 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1470:
#line 10584 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1471:
#line 10585 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1472:
#line 10589 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1473:
#line 10590 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1474:
#line 10591 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1475:
#line 10592 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1476:
#line 10593 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1477:
#line 10594 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1478:
#line 10595 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1479:
#line 10596 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1480:
#line 10597 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1481:
#line 10601 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1482:
#line 10602 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1483:
#line 10603 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1484:
#line 10604 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1488:
#line 10614 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1489:
#line 10616 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1492:
#line 10629 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1493:
#line 10631 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1494:
#line 10635 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->where= (yyvsp[(3) - (3)].item);
            select->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1496:
#line 10647 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_HAVING;
          }
    break;

  case 1497:
#line 10651 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->having= (yyvsp[(3) - (3)].item);
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1498:
#line 10662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1499:
#line 10667 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1502:
#line 10689 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1503:
#line 10691 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1504:
#line 10695 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1505:
#line 10697 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
    break;

  case 1506:
#line 10717 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= ROLLUP_TYPE;
          }
    break;

  case 1510:
#line 10751 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[(2) - (2)].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[(1) - (2)].item), ascending))
              MYSQL_YYABORT;
          }
    break;

  case 1513:
#line 10770 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1515:
#line 10805 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1516:
#line 10807 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1517:
#line 10811 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1518:
#line 10812 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1519:
#line 10813 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1520:
#line 10818 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            sel->offset_limit= 0;
            sel->select_limit= 0;
          }
    break;

  case 1521:
#line 10824 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1522:
#line 10828 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1523:
#line 10829 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1524:
#line 10834 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
    break;

  case 1525:
#line 10841 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (1)].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
    break;

  case 1526:
#line 10848 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(3) - (3)].item);
            sel->offset_limit= (yyvsp[(1) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1527:
#line 10855 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (3)].item);
            sel->offset_limit= (yyvsp[(3) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1528:
#line 10865 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          Item_splocal *splocal;
          Lex_input_stream *lip= &YYTHD->m_parser_state->m_lip;

          splocal= create_item_for_sp_var(YYTHD, (yyvsp[(1) - (1)].lex_str), NULL,
                                          lip->get_tok_start(), lip->get_ptr());
          if (splocal == NULL)
            MYSQL_YYABORT;
          Lex->safe_to_cache_query= 0;
          if (splocal->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }
          splocal->limit_clause_param= TRUE;
          (yyval.item)= splocal;
        }
    break;

  case 1529:
#line 10883 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          ((Item_param *) (yyvsp[(1) - (1)].item))->limit_clause_param= TRUE;
        }
    break;

  case 1530:
#line 10887 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1531:
#line 10893 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1532:
#line 10899 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1533:
#line 10908 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
    break;

  case 1534:
#line 10913 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(2) - (2)].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
    break;

  case 1535:
#line 10922 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1536:
#line 10923 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1537:
#line 10924 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1538:
#line 10925 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1539:
#line 10926 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1540:
#line 10927 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1541:
#line 10931 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1542:
#line 10932 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1543:
#line 10933 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1544:
#line 10934 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1545:
#line 10935 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1546:
#line 10939 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1547:
#line 10940 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1548:
#line 10941 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1549:
#line 10942 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1550:
#line 10943 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1551:
#line 10947 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1552:
#line 10948 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1553:
#line 10949 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1554:
#line 10950 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1555:
#line 10955 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1559:
#line 10966 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (! lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (&lex->select_lex != lex->current_select)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }
            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (YYTHD->mem_root)
                                Item_field(&lex->current_select->context,
                                           NULL, NULL, (yyvsp[(2) - (2)].lex_str).str);
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_proc_to_list(lex->thd, item))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1561:
#line 10996 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1562:
#line 10997 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1565:
#line 11007 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_proc_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
            if (!(yyvsp[(2) - (3)].item)->item_name.ptr())
              (yyvsp[(2) - (3)].item)->item_name.copy((yyvsp[(1) - (3)].simple_string), (uint) ((yyvsp[(3) - (3)].simple_string) - (yyvsp[(1) - (3)].simple_string)), thd->charset());
          }
    break;

  case 1566:
#line 11018 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
    break;

  case 1567:
#line 11024 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1569:
#line 11029 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1570:
#line 11034 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[(2) - (2)].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1571:
#line 11053 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
#ifndef DBUG_OFF
            sp_head *sp= lex->sphead;
#endif
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[(1) - (1)].lex_str), 1, spv->offset, spv->type);

              if (var == NULL)
                MYSQL_YYABORT;

              ((select_dumpvar *) lex->result)->var_list.push_back(var);

#ifndef DBUG_OFF
              var->sp= sp;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1572:
#line 11092 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1574:
#line 11104 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
    break;

  case 1575:
#line 11112 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(4) - (4)].charset); }
    break;

  case 1577:
#line 11115 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1578:
#line 11127 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1579:
#line 11138 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
    break;

  case 1580:
#line 11144 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->insert_list= (yyvsp[(3) - (3)].item_list);
          }
    break;

  case 1581:
#line 11155 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1582:
#line 11164 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1583:
#line 11165 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1584:
#line 11166 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1585:
#line 11182 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1586:
#line 11189 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str && check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE))
            {
               my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(4) - (6)].lex_str).str);
               MYSQL_YYABORT;
            }
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name((yyvsp[(4) - (6)].lex_str), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1587:
#line 11212 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(db, (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1588:
#line 11233 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1589:
#line 11245 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1590:
#line 11249 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1591:
#line 11257 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1592:
#line 11259 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1593:
#line 11265 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1594:
#line 11272 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1595:
#line 11277 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1596:
#line 11282 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->server_options.server_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(4) - (4)].lex_str).length;
          }
    break;

  case 1599:
#line 11297 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1600:
#line 11308 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(2) - (2)].string_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1603:
#line 11326 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1604:
#line 11336 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1605:
#line 11337 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1606:
#line 11341 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1607:
#line 11342 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1615:
#line 11365 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
    break;

  case 1616:
#line 11373 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (5)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1617:
#line 11378 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1618:
#line 11383 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
    break;

  case 1619:
#line 11390 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (4)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1620:
#line 11395 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1621:
#line 11400 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1622:
#line 11412 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1623:
#line 11414 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1624:
#line 11421 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1625:
#line 11425 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1626:
#line 11427 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1627:
#line 11437 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1628:
#line 11438 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1629:
#line 11443 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
    break;

  case 1630:
#line 11451 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1631:
#line 11452 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1632:
#line 11453 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1633:
#line 11455 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1635:
#line 11465 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1636:
#line 11466 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1637:
#line 11470 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1638:
#line 11471 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1639:
#line 11473 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1640:
#line 11474 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1641:
#line 11476 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1642:
#line 11477 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1647:
#line 11492 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1648:
#line 11501 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1649:
#line 11502 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1650:
#line 11506 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1651:
#line 11507 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1652:
#line 11512 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
    break;

  case 1653:
#line 11517 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1654:
#line 11525 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1656:
#line 11531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1657:
#line 11536 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1658:
#line 11543 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1659:
#line 11545 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1661:
#line 11554 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1663:
#line 11562 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
    break;

  case 1664:
#line 11570 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[(3) - (7)].lock_type));
          }
    break;

  case 1665:
#line 11588 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1668:
#line 11598 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_item_to_list(YYTHD, (yyvsp[(1) - (3)].item)) || add_value_to_list(YYTHD, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1671:
#line 11611 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[(1) - (3)].item)) || 
              lex->value_list.push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1672:
#line 11620 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1673:
#line 11621 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1674:
#line 11628 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
    break;

  case 1676:
#line 11643 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(2) - (3)].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(3) - (3)].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1677:
#line 11654 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1678:
#line 11656 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1679:
#line 11662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1680:
#line 11667 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1681:
#line 11673 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1684:
#line 11686 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1685:
#line 11699 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1686:
#line 11714 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1687:
#line 11715 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1688:
#line 11719 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1689:
#line 11720 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1690:
#line 11724 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1691:
#line 11725 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1692:
#line 11726 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1693:
#line 11731 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1694:
#line 11742 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1701:
#line 11767 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1702:
#line 11771 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1703:
#line 11775 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1704:
#line 11779 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1705:
#line 11783 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1706:
#line 11787 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1707:
#line 11791 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1708:
#line 11795 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1709:
#line 11799 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1710:
#line 11806 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
    break;

  case 1711:
#line 11810 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[(3) - (3)].lex_str).str);
    }
    break;

  case 1712:
#line 11819 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->wild=0;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1713:
#line 11827 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1714:
#line 11834 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1715:
#line 11841 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1716:
#line 11849 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1717:
#line 11857 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1718:
#line 11865 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1719:
#line 11873 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1720:
#line 11881 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1721:
#line 11888 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1722:
#line 11890 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1723:
#line 11892 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1724:
#line 11901 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1725:
#line 11905 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1726:
#line 11909 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1728:
#line 11914 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1730:
#line 11919 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1731:
#line 11928 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1732:
#line 11935 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
    break;

  case 1733:
#line 11940 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
    break;

  case 1734:
#line 11945 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1735:
#line 11950 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1736:
#line 11952 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1737:
#line 11954 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1738:
#line 11956 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1739:
#line 11958 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
    break;

  case 1740:
#line 11960 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1741:
#line 11967 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
    break;

  case 1742:
#line 11975 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1743:
#line 11977 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1744:
#line 11985 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1745:
#line 11992 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1746:
#line 11999 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1747:
#line 12009 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->password=null_lex_str;
          }
    break;

  case 1748:
#line 12016 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1749:
#line 12022 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1750:
#line 12031 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1751:
#line 12039 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1752:
#line 12043 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1753:
#line 12047 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1754:
#line 12054 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1755:
#line 12061 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1756:
#line 12067 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1757:
#line 12074 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1758:
#line 12081 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1759:
#line 12086 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1760:
#line 12091 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1761:
#line 12099 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1762:
#line 12101 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1763:
#line 12103 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1768:
#line 12117 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1769:
#line 12118 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1770:
#line 12122 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1771:
#line 12123 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1774:
#line 12132 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1775:
#line 12133 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1776:
#line 12137 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1777:
#line 12138 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1779:
#line 12144 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1780:
#line 12151 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->where= (yyvsp[(2) - (2)].item);
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1781:
#line 12161 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1782:
#line 12172 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1783:
#line 12176 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1784:
#line 12178 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->select_lex.options|= SELECT_DESCRIBE; }
    break;

  case 1792:
#line 12196 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1793:
#line 12201 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_EXTENDED;
          }
    break;

  case 1794:
#line 12207 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_PARTITIONS;
          }
    break;

  case 1795:
#line 12213 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
              Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_PARTITIONS;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1796:
#line 12234 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1797:
#line 12235 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1798:
#line 12237 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1799:
#line 12251 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1800:
#line 12258 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1801:
#line 12263 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1802:
#line 12272 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1803:
#line 12273 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1805:
#line 12278 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1806:
#line 12280 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1808:
#line 12295 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1809:
#line 12300 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1810:
#line 12302 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1811:
#line 12304 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1812:
#line 12306 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1813:
#line 12308 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1814:
#line 12310 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1815:
#line 12312 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1816:
#line 12314 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1817:
#line 12316 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1818:
#line 12318 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1819:
#line 12320 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1820:
#line 12322 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1821:
#line 12324 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1822:
#line 12328 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1823:
#line 12329 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1824:
#line 12334 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1825:
#line 12339 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1828:
#line 12348 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1829:
#line 12349 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 1830:
#line 12350 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1831:
#line 12351 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1832:
#line 12355 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1833:
#line 12356 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1834:
#line 12361 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1835:
#line 12367 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1837:
#line 12376 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1838:
#line 12380 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1839:
#line 12392 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1840:
#line 12401 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1841:
#line 12402 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1842:
#line 12403 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1843:
#line 12410 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1844:
#line 12421 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1845:
#line 12433 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1846:
#line 12443 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
    break;

  case 1847:
#line 12453 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1848:
#line 12457 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1849:
#line 12461 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1850:
#line 12462 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1851:
#line 12466 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1852:
#line 12467 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1853:
#line 12471 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1854:
#line 12473 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= TL_WRITE_DEFAULT;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1855:
#line 12484 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1856:
#line 12488 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1857:
#line 12489 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1858:
#line 12490 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1863:
#line 12505 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1864:
#line 12510 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[(4) - (4)].string);
            lex->exchange->opt_enclosed= 1;
          }
    break;

  case 1865:
#line 12517 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1866:
#line 12522 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1871:
#line 12540 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1872:
#line 12545 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1873:
#line 12552 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 1874:
#line 12554 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->exchange->line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1876:
#line 12559 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1877:
#line 12566 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 1878:
#line 12568 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { }
    break;

  case 1879:
#line 12572 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1880:
#line 12573 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1881:
#line 12574 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1882:
#line 12579 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1883:
#line 12581 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1884:
#line 12585 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {(yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1885:
#line 12587 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1886:
#line 12595 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1887:
#line 12596 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1890:
#line 12606 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->update_list.push_back((yyvsp[(1) - (5)].item)) || 
                lex->value_list.push_back((yyvsp[(4) - (5)].item)))
                MYSQL_YYABORT;
            (yyvsp[(4) - (5)].item)->item_name.copy((yyvsp[(3) - (5)].simple_string), (uint) ((yyvsp[(5) - (5)].simple_string) - (yyvsp[(3) - (5)].simple_string)), YYTHD->charset());
          }
    break;

  case 1891:
#line 12619 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            const CHARSET_INFO *cs_con= thd->variables.collation_connection;
            const CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1892:
#line 12643 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1893:
#line 12655 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length, (yyvsp[(1) - (2)].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
    break;

  case 1894:
#line 12666 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item_string* item= (Item_string*) (yyvsp[(1) - (2)].item);
            item->append((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              const CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length);
            }
          }
    break;

  case 1895:
#line 12685 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1896:
#line 12693 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1897:
#line 12705 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1898:
#line 12720 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) (lip->get_tok_start() - thd->query()));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1899:
#line 12740 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1900:
#line 12741 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item_num); }
    break;

  case 1901:
#line 12743 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1902:
#line 12751 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1903:
#line 12752 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item_num); }
    break;

  case 1904:
#line 12753 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1905:
#line 12755 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1906:
#line 12762 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "FALSE",0,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1907:
#line 12768 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "TRUE",1,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1908:
#line 12774 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1909:
#line 12780 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1910:
#line 12786 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1911:
#line 12815 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1912:
#line 12846 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1913:
#line 12856 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1914:
#line 12866 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1915:
#line 12872 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1916:
#line 12881 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1917:
#line 12893 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1918:
#line 12899 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1919:
#line 12905 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1920:
#line 12920 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1921:
#line 12921 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1922:
#line 12926 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1923:
#line 12935 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[(1) - (5)].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1924:
#line 12950 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1925:
#line 12955 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx = lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (pctx && (spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              Lex_input_stream *lip= &thd->m_parser_state->m_lip;

              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              (yyval.item)= create_item_for_sp_var(thd, (yyvsp[(1) - (1)].lex_str), spv,
                                         lip->get_tok_start_prev(),
                                         lip->get_tok_end());
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
              lex->safe_to_cache_query=0;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1926:
#line 12997 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1927:
#line 13002 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1928:
#line 13019 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1929:
#line 13024 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[(1) - (3)].lex_str).str[0]=='N' || (yyvsp[(1) - (3)].lex_str).str[0]=='n');

              if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                           lex->trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && lex->trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ?
                                              Item_trigger_field::NEW_ROW:
                                              Item_trigger_field::OLD_ROW,
                                            (yyvsp[(3) - (3)].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->sphead->m_trg_table_fields.link_in_list(
                trg_fld, &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select;
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[(1) - (3)].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1930:
#line 13103 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(2) - (4)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1931:
#line 13128 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[(1) - (5)].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(3) - (5)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1932:
#line 13158 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1933:
#line 13160 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 1934:
#line 13176 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 1935:
#line 13185 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 1936:
#line 13190 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (1)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1937:
#line 13196 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (3)].lex_str),(yyvsp[(3) - (3)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1938:
#line 13202 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[(2) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1939:
#line 13212 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1940:
#line 13218 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str),(yyvsp[(3) - (4)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1941:
#line 13227 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[(1) - (1)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1942:
#line 13236 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1943:
#line 13238 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                   (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                   (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1944:
#line 13268 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1945:
#line 13281 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1946:
#line 13297 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
    break;

  case 1947:
#line 13313 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1948:
#line 13329 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1949:
#line 13331 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1950:
#line 13341 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1951:
#line 13343 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1952:
#line 13353 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1953:
#line 13354 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1954:
#line 13355 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1955:
#line 13360 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (1)].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 1956:
#line 13377 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (3)].lex_str); (yyval.lex_user)->host=(yyvsp[(3) - (3)].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
          }
    break;

  case 1957:
#line 13399 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 1958:
#line 13413 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1959:
#line 13414 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1960:
#line 13415 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1961:
#line 13416 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1962:
#line 13417 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1963:
#line 13418 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1964:
#line 13419 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1965:
#line 13420 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1966:
#line 13421 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1967:
#line 13422 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1968:
#line 13423 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1969:
#line 13424 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1970:
#line 13425 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1971:
#line 13426 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1972:
#line 13427 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1973:
#line 13428 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1974:
#line 13429 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1975:
#line 13430 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1976:
#line 13431 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1977:
#line 13432 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1978:
#line 13433 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1979:
#line 13434 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1980:
#line 13435 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1981:
#line 13436 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1982:
#line 13437 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1983:
#line 13438 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1984:
#line 13439 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1985:
#line 13440 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1986:
#line 13441 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1987:
#line 13442 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1988:
#line 13443 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1989:
#line 13444 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1990:
#line 13445 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1991:
#line 13446 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1992:
#line 13447 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1993:
#line 13448 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1994:
#line 13449 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1995:
#line 13450 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1996:
#line 13451 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1997:
#line 13452 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1998:
#line 13453 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 1999:
#line 13454 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2000:
#line 13455 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2001:
#line 13456 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2002:
#line 13457 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2003:
#line 13458 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2004:
#line 13459 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2005:
#line 13460 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2006:
#line 13461 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2007:
#line 13462 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2008:
#line 13472 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2009:
#line 13473 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2010:
#line 13474 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2011:
#line 13475 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2012:
#line 13476 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2013:
#line 13477 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2014:
#line 13478 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2015:
#line 13479 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2016:
#line 13480 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2017:
#line 13481 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2018:
#line 13482 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2019:
#line 13483 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2020:
#line 13484 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2021:
#line 13485 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2022:
#line 13486 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2023:
#line 13487 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2024:
#line 13488 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2025:
#line 13489 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2026:
#line 13490 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2027:
#line 13491 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2028:
#line 13492 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2029:
#line 13493 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2030:
#line 13494 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2031:
#line 13495 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
#line 13496 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
#line 13497 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
#line 13498 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
#line 13499 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
#line 13500 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
#line 13501 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
#line 13502 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
#line 13503 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
#line 13504 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
#line 13505 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
#line 13506 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
#line 13507 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
#line 13508 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
#line 13509 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
#line 13510 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
#line 13511 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
#line 13512 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
#line 13513 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
#line 13514 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
#line 13515 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
#line 13516 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
#line 13521 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
#line 13522 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
#line 13523 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
#line 13524 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
#line 13525 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
#line 13526 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
#line 13527 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
#line 13528 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
#line 13529 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
#line 13530 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
#line 13531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
#line 13532 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
#line 13533 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
#line 13534 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
#line 13535 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
#line 13536 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
#line 13537 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
#line 13538 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
#line 13539 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
#line 13540 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
#line 13541 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
#line 13542 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
#line 13543 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
#line 13544 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
#line 13545 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
#line 13546 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
#line 13547 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
#line 13548 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
#line 13549 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
#line 13550 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
#line 13551 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
#line 13552 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
#line 13553 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
#line 13554 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
#line 13555 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
#line 13556 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
#line 13557 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
#line 13558 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
#line 13559 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
#line 13560 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
#line 13561 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
#line 13562 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
#line 13563 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
#line 13564 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
#line 13565 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
#line 13566 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
#line 13567 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
#line 13568 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
#line 13569 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
#line 13570 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
#line 13571 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
#line 13572 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
#line 13573 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
#line 13574 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
#line 13575 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
#line 13576 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
#line 13577 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
#line 13578 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
#line 13579 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
#line 13580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
#line 13581 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
#line 13582 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
#line 13583 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
#line 13584 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
#line 13585 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
#line 13586 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
#line 13587 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
#line 13588 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
#line 13589 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
#line 13590 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
#line 13591 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
#line 13592 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
#line 13593 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
#line 13594 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
#line 13595 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
#line 13596 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
#line 13597 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
#line 13598 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
#line 13599 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
#line 13600 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
#line 13601 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
#line 13602 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
#line 13603 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
#line 13604 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
#line 13605 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
#line 13606 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
#line 13607 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
#line 13608 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
#line 13609 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
#line 13610 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
#line 13611 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
#line 13612 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
#line 13613 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
#line 13614 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
#line 13615 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
#line 13616 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
#line 13617 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
#line 13618 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
#line 13619 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
#line 13620 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
#line 13621 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
#line 13622 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
#line 13623 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
#line 13624 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
#line 13625 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
#line 13626 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
#line 13627 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
#line 13628 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
#line 13629 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
#line 13630 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
#line 13631 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
#line 13632 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
#line 13633 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
#line 13634 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
#line 13635 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
#line 13636 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
#line 13637 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
#line 13638 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
#line 13639 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
#line 13640 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
#line 13641 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
#line 13642 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
#line 13643 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
#line 13644 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
#line 13645 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
#line 13646 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
#line 13647 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
#line 13648 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
#line 13649 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
#line 13650 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
#line 13651 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
#line 13652 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
#line 13653 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
#line 13654 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
#line 13655 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
#line 13656 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
#line 13657 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
#line 13658 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
#line 13659 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
#line 13660 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
#line 13661 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
#line 13662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
#line 13663 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
#line 13664 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
#line 13665 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
#line 13666 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
#line 13667 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
#line 13668 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
#line 13669 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
#line 13670 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
#line 13671 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
#line 13672 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
#line 13673 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
#line 13674 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
#line 13675 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
#line 13676 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
#line 13677 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
#line 13678 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
#line 13679 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
#line 13680 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
#line 13681 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
#line 13682 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
#line 13683 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
#line 13684 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
#line 13685 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
#line 13686 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
#line 13687 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
#line 13688 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
#line 13689 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
#line 13690 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
#line 13691 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
#line 13692 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
#line 13693 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
#line 13694 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
#line 13695 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
#line 13696 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
#line 13697 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
#line 13698 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
#line 13699 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
#line 13700 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
#line 13701 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
#line 13702 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
#line 13703 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
#line 13704 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
#line 13705 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
#line 13706 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
#line 13707 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
#line 13708 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
#line 13709 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
#line 13710 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
#line 13711 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
#line 13712 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
#line 13713 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
#line 13714 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
#line 13715 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
#line 13716 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
#line 13717 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
#line 13718 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
#line 13719 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
#line 13720 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
#line 13721 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
#line 13722 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
#line 13723 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
#line 13724 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
#line 13725 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
#line 13726 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
#line 13727 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
#line 13728 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
#line 13729 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
#line 13730 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
#line 13731 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
#line 13732 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
#line 13733 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
#line 13734 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
#line 13735 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
#line 13736 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
#line 13737 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
#line 13738 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
#line 13739 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
#line 13740 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
#line 13741 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
#line 13742 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
#line 13743 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
#line 13744 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
#line 13745 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
#line 13746 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
#line 13747 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
#line 13748 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
#line 13749 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
#line 13750 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
#line 13751 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
#line 13752 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
#line 13753 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2286:
#line 13754 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
#line 13755 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
#line 13756 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
#line 13757 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2290:
#line 13758 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
#line 13759 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2292:
#line 13760 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2293:
#line 13761 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2294:
#line 13762 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2295:
#line 13763 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2296:
#line 13764 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2297:
#line 13765 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2298:
#line 13766 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2299:
#line 13767 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2300:
#line 13768 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2301:
#line 13769 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2302:
#line 13781 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SET_OPTION;
            mysql_init_select(lex);
            lex->option_type=OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;
            sp_create_assignment_lex(YYTHD, yychar == YYEMPTY);
          }
    break;

  case 2303:
#line 13792 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2304:
#line 13799 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
    break;

  case 2306:
#line 13805 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->option_type= OPT_DEFAULT;
          }
    break;

  case 2307:
#line 13809 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
    break;

  case 2308:
#line 13814 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2310:
#line 13824 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2312:
#line 13830 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2315:
#line 13844 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, yychar == YYEMPTY);
          }
    break;

  case 2316:
#line 13848 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2317:
#line 13853 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, yychar == YYEMPTY);
          }
    break;

  case 2318:
#line 13857 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2319:
#line 13866 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2322:
#line 13874 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2323:
#line 13875 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2324:
#line 13876 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2325:
#line 13880 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2326:
#line 13881 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2327:
#line 13882 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2328:
#line 13883 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2329:
#line 13887 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2330:
#line 13888 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2331:
#line 13889 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2332:
#line 13890 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2333:
#line 13896 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if ((yyvsp[(1) - (3)].variable).var && (yyvsp[(1) - (3)].variable).var != trg_new_row_fake_var)
            {
              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(1) - (3)].variable), lex->option_type, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              /*
                Not in trigger assigning value to new row,
                and option_type preceeding local variable is illegal.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2334:
#line 13921 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            LEX_STRING *name= &(yyvsp[(1) - (3)].variable).base_name;

            if ((yyvsp[(1) - (3)].variable).var == trg_new_row_fake_var)
            {
              /* We are in trigger and assigning value to field of new row */
              if (set_trigger_new_row(YYTHD, name, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[(1) - (3)].variable).var)
            {
              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(1) - (3)].variable), lex->option_type, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
              sp_variable *spv= pctx->find_variable(*name, false);

              /* It is a local variable. */
              if (set_local_variable(thd, spv, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2335:
#line 13949 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
    break;

  case 2336:
#line 13960 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[(4) - (6)].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[(3) - (6)].var_type), (yyvsp[(6) - (6)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 2337:
#line 13973 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            int flags= (yyvsp[(2) - (2)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT;
            const CHARSET_INFO *cs2;
            cs2= (yyvsp[(2) - (2)].charset) ? (yyvsp[(2) - (2)].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(flags,
                                              cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2338:
#line 13989 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING names= { C_STRING_WITH_LEN("names") };

            if (pctx && pctx->find_variable(names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
    break;

  case 2339:
#line 14002 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            const CHARSET_INFO *cs2;
            const CHARSET_INFO *cs3;
            int flags= set_var_collation_client::SET_CS_NAMES
                       | ((yyvsp[(2) - (3)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT)
                       | ((yyvsp[(3) - (3)].charset) ? set_var_collation_client::SET_CS_COLLATE : 0);
            cs2= (yyvsp[(2) - (3)].charset) ? (yyvsp[(2) - (3)].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[(3) - (3)].charset) ? (yyvsp[(3) - (3)].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(flags, cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2340:
#line 14024 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING pw= { C_STRING_WITH_LEN("password") };

            if (pctx && pctx->find_variable(pw, false))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }

            LEX_USER *user= (LEX_USER*) thd->alloc(sizeof(LEX_USER));

            if (!user)
              MYSQL_YYABORT;

            user->host=null_lex_str;
            user->user.str=thd->security_ctx->user;
            user->user.length= strlen(thd->security_ctx->user);

            set_var_password *var= new set_var_password(user, (yyvsp[(3) - (3)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;

            lex->var_list.push_back(var);
            lex->autocommit= TRUE;

            if (sp)
              sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2341:
#line 14057 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            set_var_password *var= new set_var_password((yyvsp[(3) - (5)].lex_user),(yyvsp[(5) - (5)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
            Lex->autocommit= TRUE;
            if (Lex->sphead)
              Lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2342:
#line 14070 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            /* Best effort lookup for system variable. */
            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[(1) - (1)].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[(1) - (1)].lex_str);
            }
          }
    break;

  case 2343:
#line 14098 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (check_reserved_words(&(yyvsp[(1) - (3)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }

            if (sp && sp->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              if ((yyvsp[(1) - (3)].lex_str).str[0]=='O' || (yyvsp[(1) - (3)].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[(3) - (3)].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[(1) - (3)].lex_str);
            }
          }
    break;

  case 2344:
#line 14144 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
    break;

  case 2349:
#line 14165 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(1) - (1)].num));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_read_only"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2350:
#line 14183 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(3) - (3)].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2351:
#line 14200 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2352:
#line 14201 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2353:
#line 14205 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2354:
#line 14206 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2355:
#line 14207 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2356:
#line 14208 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2357:
#line 14212 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;}
    break;

  case 2358:
#line 14214 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? YYTHD->variables.old_passwords ?
              Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              Item_func_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2359:
#line 14223 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str,
                                                          (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2360:
#line 14234 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 2361:
#line 14235 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 2362:
#line 14237 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2363:
#line 14243 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2364:
#line 14249 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2365:
#line 14260 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2366:
#line 14271 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2371:
#line 14286 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
    break;

  case 2372:
#line 14298 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2373:
#line 14299 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2374:
#line 14301 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            (yyval.num)= TL_WRITE_LOW_PRIORITY; 
            WARN_DEPRECATED(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2375:
#line 14305 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2376:
#line 14310 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2377:
#line 14321 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2378:
#line 14330 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2379:
#line 14346 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2380:
#line 14362 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2381:
#line 14380 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2382:
#line 14400 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2383:
#line 14401 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2384:
#line 14405 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2385:
#line 14406 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2386:
#line 14410 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2387:
#line 14411 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2388:
#line 14412 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2389:
#line 14413 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2390:
#line 14415 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
            Lex->insert_list= new List_item;
            if (! Lex->insert_list)
              MYSQL_YYABORT;
          }
    break;

  case 2391:
#line 14422 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2392:
#line 14428 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2393:
#line 14429 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2394:
#line 14430 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2395:
#line 14431 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2396:
#line 14432 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2397:
#line 14439 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2398:
#line 14444 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
    break;

  case 2399:
#line 14450 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2400:
#line 14461 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2401:
#line 14472 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2402:
#line 14476 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2403:
#line 14486 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2404:
#line 14492 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
    break;

  case 2405:
#line 14499 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2406:
#line 14511 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2407:
#line 14522 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2410:
#line 14536 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2411:
#line 14538 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2416:
#line 14556 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2417:
#line 14557 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2418:
#line 14559 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2419:
#line 14560 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2420:
#line 14562 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2421:
#line 14563 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2422:
#line 14565 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2423:
#line 14566 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2424:
#line 14567 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2425:
#line 14568 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2426:
#line 14569 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2427:
#line 14570 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2428:
#line 14571 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2429:
#line 14572 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2430:
#line 14573 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2431:
#line 14574 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2432:
#line 14575 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2433:
#line 14576 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2434:
#line 14577 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2435:
#line 14578 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2436:
#line 14579 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2437:
#line 14580 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2438:
#line 14581 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2439:
#line 14582 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2440:
#line 14583 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2441:
#line 14584 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2442:
#line 14585 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2443:
#line 14586 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2444:
#line 14587 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2445:
#line 14588 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2446:
#line 14589 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2447:
#line 14590 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2448:
#line 14591 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2449:
#line 14592 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2450:
#line 14596 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2451:
#line 14597 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2454:
#line 14607 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2455:
#line 14617 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2456:
#line 14627 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2457:
#line 14640 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2458:
#line 14655 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2459:
#line 14668 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2460:
#line 14681 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2461:
#line 14693 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2462:
#line 14698 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2463:
#line 14706 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2464:
#line 14711 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2465:
#line 14719 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user); (yyvsp[(1) - (4)].lex_user)->password=(yyvsp[(4) - (4)].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).length)
            {
              if (YYTHD->variables.old_passwords)
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password_323(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
              }
              else
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
              }
            }
          }
    break;

  case 2466:
#line 14748 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user); 
            (yyvsp[(1) - (5)].lex_user)->password= (yyvsp[(5) - (5)].lex_str); 
          }
    break;

  case 2467:
#line 14755 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin= (yyvsp[(4) - (4)].lex_str);
            (yyvsp[(1) - (4)].lex_user)->auth= empty_lex_str;
          }
    break;

  case 2468:
#line 14763 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin= (yyvsp[(4) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->auth= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 2469:
#line 14771 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user); (yyvsp[(1) - (1)].lex_user)->password= null_lex_str; }
    break;

  case 2470:
#line 14776 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2474:
#line 14790 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2476:
#line 14819 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2477:
#line 14823 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2478:
#line 14827 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2479:
#line 14831 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2480:
#line 14837 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2482:
#line 14842 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2483:
#line 14843 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2484:
#line 14847 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2485:
#line 14848 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2486:
#line 14852 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2487:
#line 14854 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2488:
#line 14860 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2489:
#line 14866 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2490:
#line 14872 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2491:
#line 14881 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2492:
#line 14886 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2493:
#line 14890 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2494:
#line 14891 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2495:
#line 14896 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2496:
#line 14897 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2497:
#line 14898 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2498:
#line 14903 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2499:
#line 14904 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2500:
#line 14905 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2501:
#line 14909 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2502:
#line 14910 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2503:
#line 14915 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2504:
#line 14927 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2505:
#line 14937 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2506:
#line 14946 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2507:
#line 14955 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2508:
#line 14968 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2510:
#line 14974 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(2) - (2)].num), TRUE))
              MYSQL_YYABORT;
          }
    break;

  case 2511:
#line 14979 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
    break;

  case 2512:
#line 14989 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2513:
#line 14990 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2514:
#line 14991 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2517:
#line 15000 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              unit->global_parameters= fake;
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
    break;

  case 2518:
#line 15016 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
    break;

  case 2521:
#line 15029 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2522:
#line 15030 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2523:
#line 15031 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2524:
#line 15036 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2525:
#line 15040 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2527:
#line 15049 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 2528:
#line 15055 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[(1) - (6)].select_lex);
          }
    break;

  case 2529:
#line 15064 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= (yyvsp[(2) - (3)].select_lex);
          }
    break;

  case 2530:
#line 15070 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1))
              MYSQL_YYABORT;
          }
    break;

  case 2531:
#line 15091 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->outer_select();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select->select_n_where_fields+=
            child->select_n_where_fields;
          }
    break;

  case 2536:
#line 15119 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 2537:
#line 15121 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
    break;

  case 2538:
#line 15128 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 2539:
#line 15129 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 2540:
#line 15130 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 2541:
#line 15132 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
    break;

  case 2542:
#line 15138 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
    break;

  case 2543:
#line 15143 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 2544:
#line 15154 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2545:
#line 15156 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2546:
#line 15158 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2560:
#line 15191 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2561:
#line 15205 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2562:
#line 15218 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2563:
#line 15220 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2564:
#line 15222 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2565:
#line 15227 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2566:
#line 15232 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2567:
#line 15234 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2568:
#line 15236 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 2569:
#line 15241 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2570:
#line 15243 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2571:
#line 15245 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2572:
#line 15250 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_IGNORE,
                                                   MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2574:
#line 15267 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2576:
#line 15273 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2577:
#line 15278 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2578:
#line 15285 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
            lex->create_view_select.str= (char *) YYLIP->get_cpp_ptr();
          }
    break;

  case 2579:
#line 15294 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint len= YYLIP->get_cpp_ptr() - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
    break;

  case 2582:
#line 15316 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2583:
#line 15318 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2584:
#line 15320 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2585:
#line 15322 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2586:
#line 15339 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $8 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
    break;

  case 2587:
#line 15345 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $12 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
    break;

  case 2588:
#line 15350 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $15 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            if (!(sp= new sp_head()))
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_TRIGGER;
            sp->init_sp_name(thd, (yyvsp[(3) - (14)].spname));
            lex->stmt_definition_begin= (yyvsp[(2) - (14)].simple_string);
            lex->ident.str= (yyvsp[(7) - (14)].simple_string);
            lex->ident.length= (yyvsp[(11) - (14)].simple_string) - (yyvsp[(7) - (14)].simple_string);

            lex->sphead= sp;
            lex->spname= (yyvsp[(3) - (14)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 2589:
#line 15380 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $17 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(YYTHD);
            sp->restore_thd_mem_root(YYTHD);

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(9) - (16)].table),
                                                   (LEX_STRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2590:
#line 15414 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(4) - (8)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(4) - (8)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yyvsp[(2) - (8)].simple_string);
            lex->udf.name = (yyvsp[(4) - (8)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(6) - (8)].num);
            lex->udf.dl=(yyvsp[(8) - (8)].lex_str).str;
          }
    break;

  case 2591:
#line 15432 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yyvsp[(1) - (7)].simple_string);
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2592:
#line 15455 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;
            const char* tmp_param_begin;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->spname= (yyvsp[(3) - (4)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->init_sp_name(thd, lex->spname);

            sp->m_type= TYPE_ENUM_FUNCTION;
            lex->sphead= sp;

            tmp_param_begin= lip->get_cpp_tok_start();
            tmp_param_begin++;
            lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2593:
#line 15487 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $8 */
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
    break;

  case 2594:
#line 15491 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $10 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
    break;

  case 2595:
#line 15499 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(11) - (11)].num) == MYSQL_TYPE_STRING || (yyvsp[(11) - (11)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) (yyvsp[(11) - (11)].num),
                                          &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2596:
#line 15522 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
    break;

  case 2597:
#line 15531 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            sp->set_stmt_end(thd);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }
            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::WARN_LEVEL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
            sp->restore_thd_mem_root(thd);
          }
    break;

  case 2598:
#line 15587 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yyvsp[(2) - (3)].simple_string);

            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(YYTHD);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_PROCEDURE;
            sp->init_sp_name(YYTHD, (yyvsp[(3) - (3)].spname));

            lex->sphead= sp;
          }
    break;

  case 2599:
#line 15611 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            const char* tmp_param_begin;

            tmp_param_begin= YYLIP->get_cpp_tok_start();
            tmp_param_begin++;
            Lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2600:
#line 15620 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2601:
#line 15628 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
    break;

  case 2602:
#line 15636 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->set_stmt_end(YYTHD);
            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp->restore_thd_mem_root(YYTHD);
          }
    break;

  case 2603:
#line 15650 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
    break;

  case 2604:
#line 15654 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
    break;

  case 2605:
#line 15658 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
    break;

  case 2606:
#line 15662 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
    break;

  case 2607:
#line 15666 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
    break;

  case 2608:
#line 15670 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
    break;

  case 2609:
#line 15677 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
          }
    break;

  case 2610:
#line 15684 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
          }
    break;

  case 2611:
#line 15691 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
          }
    break;

  case 2612:
#line 15700 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2613:
#line 15701 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2614:
#line 15705 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2615:
#line 15706 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2616:
#line 15707 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2617:
#line 15711 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2618:
#line 15712 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2619:
#line 15717 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2620:
#line 15719 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2622:
#line 15724 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {}
    break;

  case 2623:
#line 15725 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;

  case 2624:
#line 15730 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (5)].lex_str);
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2625:
#line 15740 "/export/home/pb2/build/sb_0-5439812-1333973057.76/mysql-5.6-labs-april-2012-export-3316096/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (3)].lex_str);
          }
    break;


/* Line 1267 of yacc.c.  */
#line 36472 "/export/home/pb2/build/sb_0-5439812-1333973057.76/dist/sql/sql_yacc.cc"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (yymsg);
	  }
	else
	  {
	    yyerror (YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



